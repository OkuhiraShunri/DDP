// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2024.1 (win64) Build 5076996 Wed May 22 18:37:14 MDT 2024
// Date        : Mon Oct 14 11:04:55 2024
// Host        : DESKTOP-B2190GF running 64-bit major release  (build 9200)
// Command     : write_verilog -mode timesim -nolib -sdf_anno true -force -file
//               C:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.sim/sim_1/impl/timing/xsim/JOIN_DDP_SIM_time_impl.v
// Design      : JOIN_DDP
// Purpose     : This verilog netlist is a timing simulation representation of the design and should not be modified or
//               synthesized. Please ensure that this netlist is used with the corresponding SDF file.
// Device      : xc7z010clg400-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps
`define XIL_TIMING

module FDCP_UNIQ_BASE_
   (Q,
    C,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(VCC_1),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(VCC_1),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_UNIQ_BASE_
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD380
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD381
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD382
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD383
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD384
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD385
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD386
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD387
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD388
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD389
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD390
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD391
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD392
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD393
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD394
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD395
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD396
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD397
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD398
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD399
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD400
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD401
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD402
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD403
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD404
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD405
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD406
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD407
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD408
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD409
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD410
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD411
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD412
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD413
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD414
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD415
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD416
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD417
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD418
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD419
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD420
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD421
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD422
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD423
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD424
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD425
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD426
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD427
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD428
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD429
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD430
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD431
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD432
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD433
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD434
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD435
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD436
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD437
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD438
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD439
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD440
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD441
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD442
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD443
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD444
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD445
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD446
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD447
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD448
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD449
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD450
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD451
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD452
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD453
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD454
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD455
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD456
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD457
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD458
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD459
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD460
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD461
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD462
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD463
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD464
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD465
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD466
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD467
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD468
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD469
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD470
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD471
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD472
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD473
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD474
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD475
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD476
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD477
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD478
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD479
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD480
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD481
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD482
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD483
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD484
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD485
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD486
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD487
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD488
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD489
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD490
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD491
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD492
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD493
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD494
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD495
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD496
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD497
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD498
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD499
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD500
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD501
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD502
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD503
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD504
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD505
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD506
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD507
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD508
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD509
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD510
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD511
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD512
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD513
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD514
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD515
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD516
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD517
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD518
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD519
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD520
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD521
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD522
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD523
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD524
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD525
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD526
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD527
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD528
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD529
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD530
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD531
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD532
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD533
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD534
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD535
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD536
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD537
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD538
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD539
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD540
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD541
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD542
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD543
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD544
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD545
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD546
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD547
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD548
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD549
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD550
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD551
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD552
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD553
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD554
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD555
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD556
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD557
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD558
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD559
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD560
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD561
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD562
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD563
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD564
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD565
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD566
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD567
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD568
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD569
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD570
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD571
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD572
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD573
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD574
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD575
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD576
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD577
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD578
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD579
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD580
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD581
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD582
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD583
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD584
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD585
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD586
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD587
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD588
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD589
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD590
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD591
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD592
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD593
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD594
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD595
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD596
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD597
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD598
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD599
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD600
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD601
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD602
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD603
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD604
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD605
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD606
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD607
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD608
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD609
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD610
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD611
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD612
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD613
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD614
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD615
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD616
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD617
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD618
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD619
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD620
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD621
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD622
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD623
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD624
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD625
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD626
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD627
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD628
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD629
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD630
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD631
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD632
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD633
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD634
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD635
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD636
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD637
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD638
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD639
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD640
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD641
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD642
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD643
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD644
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD645
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD646
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD647
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD648
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD649
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD650
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD651
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD652
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD653
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD654
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD655
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD656
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD657
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD658
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD659
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD660
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD661
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD662
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD663
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD664
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD665
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD666
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD667
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD668
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD669
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD670
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD671
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD672
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD673
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD674
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD675
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD676
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD677
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD678
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD679
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD680
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD681
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD682
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD683
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD684
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD685
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD686
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD687
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD688
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD689
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD690
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD691
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD692
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD693
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD694
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD695
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD696
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD697
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD698
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD699
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD700
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD701
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD702
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD703
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD704
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD705
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD706
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD707
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD708
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD709
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD710
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD711
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD712
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD713
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD714
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD715
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD716
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD717
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD718
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD719
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD720
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD721
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD722
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD723
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD724
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD725
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD726
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD727
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD728
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD729
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD730
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD731
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD732
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD733
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD734
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD735
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD736
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD737
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD738
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD739
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD740
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD741
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD742
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD743
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD744
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD745
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD746
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD747
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD748
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD749
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD750
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD751
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD752
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD753
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD754
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD755
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD756
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD757
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD758
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

(* dont_touch = "true" *) 
module ARB
   (ARB_Send_in_a,
    ARB_Ack_out_a,
    ARB_Send_in_b,
    ARB_Ack_out_b,
    ARB_Za,
    ARB_Zb,
    MR,
    ARB_Ga,
    ARB_Gb);
  input ARB_Send_in_a;
  input ARB_Ack_out_a;
  input ARB_Send_in_b;
  input ARB_Ack_out_b;
  input ARB_Za;
  input ARB_Zb;
  input MR;
  output ARB_Ga;
  output ARB_Gb;

  wire ARB_Ack_out_a;
  wire ARB_Ack_out_b;
  wire ARB_Send_in_a;
  wire ARB_Send_in_b;
  wire ARB_Za;
  wire ARB_Zb;
  wire MR;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire nand6_out;
  (* DONT_TOUCH *) wire nand7_out;
  (* DONT_TOUCH *) wire nand8_out;

  assign ARB_Ga = nand8_out;
  assign ARB_Gb = nand7_out;
  LUT3 #(
    .INIT(8'h7F)) 
    nand1_out_inferred_i_1
       (.I0(ARB_Send_in_a),
        .I1(nand2_out),
        .I2(ARB_Ack_out_a),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'hDF)) 
    nand2_out_inferred_i_1
       (.I0(ARB_Za),
        .I1(MR),
        .I2(nand1_out),
        .O(nand2_out));
  LUT3 #(
    .INIT(8'hDF)) 
    nand3_out_inferred_i_1
       (.I0(nand4_out),
        .I1(MR),
        .I2(ARB_Zb),
        .O(nand3_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(ARB_Ack_out_b),
        .I2(ARB_Send_in_b),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'hBF)) 
    nand5_out_inferred_i_1
       (.I0(MR),
        .I1(nand6_out),
        .I2(nand2_out),
        .O(nand5_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand6_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand6_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand7_out_inferred_i_1
       (.I0(nand8_out),
        .I1(nand5_out),
        .O(nand7_out));
  LUT3 #(
    .INIT(8'hBF)) 
    nand8_out_inferred_i_1
       (.I0(MR),
        .I1(nand6_out),
        .I2(nand7_out),
        .O(nand8_out));
endmodule

(* dont_touch = "true" *) 
module B_Stage
   (PACKET_IN,
    Send_in,
    Ack_in_a,
    Ack_in_b,
    MR,
    Send_out_a,
    Send_out_b,
    Ack_out,
    PACKET_OUT);
  input [37:0]PACKET_IN;
  input Send_in;
  input Ack_in_a;
  input Ack_in_b;
  input MR;
  output Send_out_a;
  output Send_out_b;
  output Ack_out;
  output [37:0]PACKET_OUT;

  wire Ack_in_a;
  wire Ack_in_b;
  wire Ack_out;
  (* DONT_TOUCH *) wire BR;
  wire CP;
  (* DONT_TOUCH *) wire [37:0]DL;
  (* DONT_TOUCH *) wire MF;
  wire MR;
  wire [37:0]\^PACKET_IN ;
  wire Send_in;
  wire Send_out_a;
  wire Send_out_b;
  (* DONT_TOUCH *) wire [6:0]dest;

  assign BR = PACKET_IN[18];
  assign PACKET_OUT[37:19] = DL[37:19];
  assign PACKET_OUT[18] = MF;
  assign PACKET_OUT[17:0] = DL[17:0];
  assign \^PACKET_IN [37:27] = PACKET_IN[37:27];
  assign \^PACKET_IN [19] = PACKET_IN[19];
  assign \^PACKET_IN [17:0] = PACKET_IN[17:0];
  assign dest = PACKET_IN[26:20];
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(BR),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[0]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[1]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[2]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[3]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[4]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[5]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[6]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  CB cb
       (.BR(BR),
        .CB_Ack_in_a(Ack_in_a),
        .CB_Ack_in_b(Ack_in_b),
        .CB_Ack_out(Ack_out),
        .CB_CP(CP),
        .CB_Send_in(Send_in),
        .CB_Send_out_a(Send_out_a),
        .CB_Send_out_b(Send_out_b),
        .MR(MR));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/SubPS/SubPS.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  SubPS subps
       (.addra(dest[4:0]),
        .clka(CP),
        .douta(MF));
endmodule

(* dont_touch = "true" *) 
module C
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__5 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__6 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__7 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__8 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* dont_touch = "true" *) 
module CB
   (CB_Send_in,
    CB_Ack_in_a,
    CB_Ack_in_b,
    MR,
    BR,
    CB_Ack_out,
    CB_Send_out_a,
    CB_Send_out_b,
    CB_CP);
  input CB_Send_in;
  input CB_Ack_in_a;
  input CB_Ack_in_b;
  input MR;
  input BR;
  output CB_Ack_out;
  output CB_Send_out_a;
  output CB_Send_out_b;
  output CB_CP;

  wire BR;
  wire CB_Ack_in_a;
  wire CB_Ack_in_b;
  wire CB_Send_in;
  wire CB_Send_out_a;
  wire CB_Send_out_b;
  (* DONT_TOUCH *) wire DL;
  wire MR;
  (* DONT_TOUCH *) wire and_1;
  (* DONT_TOUCH *) wire cf_ack_out;
  (* DONT_TOUCH *) wire cf_send_out;
  (* DONT_TOUCH *) wire cp;

  assign CB_Ack_out = cf_ack_out;
  assign CB_CP = cp;
  LUT2 #(
    .INIT(4'hE)) 
    CB_Send_out_a_INST_0
       (.I0(cf_send_out),
        .I1(DL),
        .O(CB_Send_out_a));
  LUT2 #(
    .INIT(4'hB)) 
    CB_Send_out_b_INST_0
       (.I0(cf_send_out),
        .I1(DL),
        .O(CB_Send_out_b));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b1)) 
    DL_reg
       (.C(cp),
        .CE(1'b1),
        .CLR(MR),
        .D(BR),
        .Q(DL));
  LUT2 #(
    .INIT(4'h8)) 
    and_1_inferred_i_1
       (.I0(CB_Ack_in_a),
        .I1(CB_Ack_in_b),
        .O(and_1));
  (* DONT_TOUCH *) 
  CF cf
       (.Ack_in(and_1),
        .Ack_out(cf_ack_out),
        .CP(cp),
        .MR(MR),
        .Send_in(CB_Send_in),
        .Send_out(cf_send_out));
endmodule

(* dont_touch = "true" *) 
module CE
   (CE_Send_in,
    CE_Ack_in,
    MR,
    Exb,
    CE_Ack_out,
    CE_Send_out,
    CE_CP);
  input CE_Send_in;
  input CE_Ack_in;
  input MR;
  input Exb;
  output CE_Ack_out;
  output CE_Send_out;
  output CE_CP;

  wire CE_Ack_in;
  wire CE_Send_in;
  (* DONT_TOUCH *) wire DL;
  wire Exb;
  wire MR;
  (* DONT_TOUCH *) wire and_1;
  (* DONT_TOUCH *) wire cf_ack_out;
  (* DONT_TOUCH *) wire cf_send_out;
  (* DONT_TOUCH *) wire cp;
  (* DONT_TOUCH *) wire or_1;
  (* DONT_TOUCH *) wire or_2;

  assign CE_Ack_out = cf_ack_out;
  assign CE_CP = cp;
  assign CE_Send_out = or_1;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    DL_reg
       (.C(cp),
        .CE(1'b1),
        .D(Exb),
        .Q(DL),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    and_1_inferred_i_1
       (.I0(or_2),
        .I1(CE_Ack_in),
        .O(and_1));
  (* DONT_TOUCH *) 
  CF__1 cf
       (.Ack_in(and_1),
        .Ack_out(cf_ack_out),
        .CP(cp),
        .MR(MR),
        .Send_in(CE_Send_in),
        .Send_out(cf_send_out));
  LUT2 #(
    .INIT(4'hB)) 
    or_1_inferred_i_1
       (.I0(cf_send_out),
        .I1(DL),
        .O(or_1));
  LUT2 #(
    .INIT(4'hE)) 
    or_2_inferred_i_1
       (.I0(DL),
        .I1(cf_send_out),
        .O(or_2));
endmodule

(* ORIG_REF_NAME = "CE" *) (* dont_touch = "true" *) 
module CE__1
   (CE_Send_in,
    CE_Ack_in,
    MR,
    Exb,
    CE_Ack_out,
    CE_Send_out,
    CE_CP);
  input CE_Send_in;
  input CE_Ack_in;
  input MR;
  input Exb;
  output CE_Ack_out;
  output CE_Send_out;
  output CE_CP;

  wire CE_Ack_in;
  wire CE_Send_in;
  (* DONT_TOUCH *) wire DL;
  wire Exb;
  wire MR;
  (* DONT_TOUCH *) wire and_1;
  (* DONT_TOUCH *) wire cf_ack_out;
  (* DONT_TOUCH *) wire cf_send_out;
  (* DONT_TOUCH *) wire cp;
  (* DONT_TOUCH *) wire or_1;
  (* DONT_TOUCH *) wire or_2;

  assign CE_Ack_out = cf_ack_out;
  assign CE_CP = cp;
  assign CE_Send_out = or_1;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    DL_reg
       (.C(cp),
        .CE(1'b1),
        .D(Exb),
        .Q(DL),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    and_1_inferred_i_1
       (.I0(or_2),
        .I1(CE_Ack_in),
        .O(and_1));
  (* DONT_TOUCH *) 
  CF__4 cf
       (.Ack_in(and_1),
        .Ack_out(cf_ack_out),
        .CP(cp),
        .MR(MR),
        .Send_in(CE_Send_in),
        .Send_out(cf_send_out));
  LUT2 #(
    .INIT(4'hB)) 
    or_1_inferred_i_1
       (.I0(cf_send_out),
        .I1(DL),
        .O(or_1));
  LUT2 #(
    .INIT(4'hE)) 
    or_2_inferred_i_1
       (.I0(DL),
        .I1(cf_send_out),
        .O(or_2));
endmodule

(* dont_touch = "true" *) 
module CF
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__9 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__10 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CF" *) (* dont_touch = "true" *) 
module CF__1
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__25 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__24 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__23 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns__1 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CF" *) (* dont_touch = "true" *) 
module CF__2
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__28 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__27 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__26 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns__2 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CF" *) (* dont_touch = "true" *) 
module CF__3
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__31 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__30 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__29 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns__3 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CF" *) (* dont_touch = "true" *) 
module CF__4
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__34 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__33 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__32 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns__4 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* dont_touch = "true" *) 
module CJ
   (Send_in,
    Ack_in,
    MR,
    G,
    Z_1,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  input G;
  input Z_1;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  wire G;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  wire Send_out;
  wire Z_1;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  LUT1 #(
    .INIT(2'h1)) 
    Send_out_INST_0
       (.I0(LD_out),
        .O(Send_out));
  (* DONT_TOUCH *) 
  Delay_4ns__1 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__2 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__3 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__4 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    nand3_out_inferred_i_1
       (.I0(Z_1),
        .I1(Send_in),
        .I2(Ack_in),
        .I3(LA_out),
        .I4(G),
        .I5(LC_out),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CJ" *) (* dont_touch = "true" *) 
module CJ__1
   (Send_in,
    Ack_in,
    MR,
    G,
    Z_1,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  input G;
  input Z_1;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  wire G;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  wire Send_out;
  wire Z_1;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  LUT1 #(
    .INIT(2'h1)) 
    Send_out_INST_0
       (.I0(LD_out),
        .O(Send_out));
  (* DONT_TOUCH *) 
  Delay_4ns__38 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__37 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__36 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__35 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    nand3_out_inferred_i_1
       (.I0(Z_1),
        .I1(Send_in),
        .I2(Ack_in),
        .I3(LA_out),
        .I4(G),
        .I5(LC_out),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* dont_touch = "true" *) 
module CM
   (Send_in_a,
    Send_in_b,
    Ack_in,
    MR,
    Ack_out_a,
    Ack_out_b,
    Send_out,
    CP_a,
    CP_b,
    AEB);
  input Send_in_a;
  input Send_in_b;
  input Ack_in;
  input MR;
  output Ack_out_a;
  output Ack_out_b;
  output Send_out;
  output CP_a;
  output CP_b;
  output AEB;

  wire Ack_in;
  wire MR;
  wire Send_in_a;
  wire Send_in_b;
  (* DONT_TOUCH *) wire ack_out_a;
  (* DONT_TOUCH *) wire ack_out_b;
  wire cj_a_i_1_n_0;
  wire cj_b_i_1_n_0;
  (* DONT_TOUCH *) wire cp_a;
  (* DONT_TOUCH *) wire cp_b;
  (* DONT_TOUCH *) wire ga;
  (* DONT_TOUCH *) wire gb;
  (* DONT_TOUCH *) wire nor1;
  (* DONT_TOUCH *) wire nor2;
  (* DONT_TOUCH *) wire nor3;
  (* DONT_TOUCH *) wire send_in_b;
  (* DONT_TOUCH *) wire send_out_a;
  wire send_out_b;

  assign AEB = nor2;
  assign Ack_out_a = ack_out_a;
  assign Ack_out_b = ack_out_b;
  assign CP_a = cp_a;
  assign CP_b = cp_b;
  assign Send_out = nor1;
  (* DONT_TOUCH *) 
  ARB arb
       (.ARB_Ack_out_a(ack_out_a),
        .ARB_Ack_out_b(ack_out_b),
        .ARB_Ga(ga),
        .ARB_Gb(gb),
        .ARB_Send_in_a(Send_in_a),
        .ARB_Send_in_b(Send_in_b),
        .ARB_Za(cj_b_i_1_n_0),
        .ARB_Zb(cj_a_i_1_n_0),
        .MR(MR));
  (* DONT_TOUCH *) 
  CJ__1 cj_a
       (.Ack_in(Ack_in),
        .Ack_out(ack_out_a),
        .CP(cp_a),
        .G(ga),
        .MR(MR),
        .Send_in(Send_in_a),
        .Send_out(send_out_a),
        .Z_1(cj_a_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    cj_a_i_1
       (.I0(cp_b),
        .O(cj_a_i_1_n_0));
  (* DONT_TOUCH *) 
  CJ cj_b
       (.Ack_in(Ack_in),
        .Ack_out(ack_out_b),
        .CP(cp_b),
        .G(gb),
        .MR(MR),
        .Send_in(Send_in_b),
        .Send_out(send_out_b),
        .Z_1(cj_b_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    cj_b_i_1
       (.I0(cp_a),
        .O(cj_b_i_1_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(send_in_b));
  LUT2 #(
    .INIT(4'h1)) 
    nor1_inferred_i_1
       (.I0(send_out_a),
        .I1(send_out_b),
        .O(nor1));
  LUT2 #(
    .INIT(4'h1)) 
    nor2_inferred_i_1
       (.I0(cp_a),
        .I1(nor3),
        .O(nor2));
  LUT3 #(
    .INIT(8'h01)) 
    nor3_inferred_i_1
       (.I0(cp_b),
        .I1(nor2),
        .I2(MR),
        .O(nor3));
endmodule

(* CHECK_LICENSE_TYPE = "CMEM,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module CMEM
   (clka,
    addra,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [15:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [15:0]douta;
  wire NLW_U0_clkb_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_ena_UNCONNECTED;
  wire NLW_U0_enb_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [4:0]NLW_U0_addrb_UNCONNECTED;
  wire [15:0]NLW_U0_dina_UNCONNECTED;
  wire [15:0]NLW_U0_dinb_UNCONNECTED;
  wire [15:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [15:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [15:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_wea_UNCONNECTED;
  wire [0:0]NLW_U0_web_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.7096 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "CMEM.mem" *) 
  (* C_INIT_FILE_NAME = "CMEM.mif" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "1" *) 
  (* C_MEM_TYPE = "3" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "16" *) 
  (* C_READ_WIDTH_B = "16" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "16" *) 
  (* C_WRITE_WIDTH_B = "16" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  CMEM_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb(NLW_U0_addrb_UNCONNECTED[4:0]),
        .clka(clka),
        .clkb(NLW_U0_clkb_UNCONNECTED),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(NLW_U0_dina_UNCONNECTED[15:0]),
        .dinb(NLW_U0_dinb_UNCONNECTED[15:0]),
        .douta(douta),
        .doutb(NLW_U0_doutb_UNCONNECTED[15:0]),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(NLW_U0_ena_UNCONNECTED),
        .enb(NLW_U0_enb_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[15:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[15:0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(NLW_U0_wea_UNCONNECTED[0]),
        .web(NLW_U0_web_UNCONNECTED[0]));
endmodule

(* dont_touch = "true" *) 
module COPY_Stage
   (Send_in,
    Ack_in,
    MR,
    PACKET_IN,
    Send_out,
    Ack_out,
    PACKET_OUT);
  input Send_in;
  input Ack_in;
  input MR;
  input [39:0]PACKET_IN;
  output Send_out;
  output Ack_out;
  output [37:0]PACKET_OUT;

  (* DONT_TOUCH *) wire [6:0]ADDER;
  wire ADDER_inferred_i_8_n_0;
  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire [39:0]DL;
  (* DONT_TOUCH *) wire EXB;
  (* DONT_TOUCH *) wire FEB;
  wire MR;
  wire [39:0]PACKET_IN;
  wire Send_in;
  wire Send_out;
  (* DONT_TOUCH *) wire [6:0]dest;
  (* DONT_TOUCH *) wire [6:0]mux1;
  (* DONT_TOUCH *) wire mux2;

  assign PACKET_OUT[37:27] = DL[39:29];
  assign PACKET_OUT[26:20] = mux1;
  assign PACKET_OUT[19] = mux2;
  assign PACKET_OUT[18] = DL[19];
  assign PACKET_OUT[17:0] = DL[17:0];
  LUT3 #(
    .INIT(8'h78)) 
    ADDER_inferred_i_1
       (.I0(ADDER_inferred_i_8_n_0),
        .I1(dest[5]),
        .I2(dest[6]),
        .O(ADDER[6]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    ADDER_inferred_i_2
       (.I0(dest[3]),
        .I1(dest[1]),
        .I2(dest[0]),
        .I3(dest[2]),
        .I4(dest[4]),
        .I5(dest[5]),
        .O(ADDER[5]));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    ADDER_inferred_i_3
       (.I0(dest[2]),
        .I1(dest[0]),
        .I2(dest[1]),
        .I3(dest[3]),
        .I4(dest[4]),
        .O(ADDER[4]));
  LUT4 #(
    .INIT(16'h7F80)) 
    ADDER_inferred_i_4
       (.I0(dest[1]),
        .I1(dest[0]),
        .I2(dest[2]),
        .I3(dest[3]),
        .O(ADDER[3]));
  LUT3 #(
    .INIT(8'h78)) 
    ADDER_inferred_i_5
       (.I0(dest[0]),
        .I1(dest[1]),
        .I2(dest[2]),
        .O(ADDER[2]));
  LUT2 #(
    .INIT(4'h6)) 
    ADDER_inferred_i_6
       (.I0(dest[0]),
        .I1(dest[1]),
        .O(ADDER[1]));
  LUT1 #(
    .INIT(2'h1)) 
    ADDER_inferred_i_7
       (.I0(dest[0]),
        .O(ADDER[0]));
  LUT5 #(
    .INIT(32'h80000000)) 
    ADDER_inferred_i_8
       (.I0(dest[4]),
        .I1(dest[2]),
        .I2(dest[0]),
        .I3(dest[1]),
        .I4(dest[3]),
        .O(ADDER_inferred_i_8_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst
       (.I0(DL[28]),
        .O(dest[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__0
       (.I0(DL[27]),
        .O(dest[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__1
       (.I0(DL[26]),
        .O(dest[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__2
       (.I0(DL[25]),
        .O(dest[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__3
       (.I0(DL[24]),
        .O(dest[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__4
       (.I0(DL[23]),
        .O(dest[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__5
       (.I0(DL[22]),
        .O(dest[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[38] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[38]),
        .Q(DL[38]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[39] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[39]),
        .Q(DL[39]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  CX2 cx2
       (.Ack_in(Ack_in),
        .Ack_out(Ack_out),
        .CP(CP),
        .CPY(PACKET_IN[18]),
        .EXB(EXB),
        .FEB(FEB),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(Send_out));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(EXB));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_1
       (.I0(ADDER[6]),
        .I1(dest[6]),
        .I2(FEB),
        .O(mux1[6]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_2
       (.I0(ADDER[5]),
        .I1(dest[5]),
        .I2(FEB),
        .O(mux1[5]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_3
       (.I0(ADDER[4]),
        .I1(dest[4]),
        .I2(FEB),
        .O(mux1[4]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_4
       (.I0(ADDER[3]),
        .I1(dest[3]),
        .I2(FEB),
        .O(mux1[3]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_5
       (.I0(ADDER[2]),
        .I1(dest[2]),
        .I2(FEB),
        .O(mux1[2]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_6
       (.I0(ADDER[1]),
        .I1(dest[1]),
        .I2(FEB),
        .O(mux1[1]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_7
       (.I0(ADDER[0]),
        .I1(dest[0]),
        .I2(FEB),
        .O(mux1[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    mux2_inferred_i_1
       (.I0(DL[20]),
        .I1(FEB),
        .I2(DL[21]),
        .O(mux2));
endmodule

(* dont_touch = "true" *) 
module CX2
   (Send_in,
    Ack_in,
    CPY,
    EXB,
    MR,
    Ack_out,
    Send_out,
    CP,
    FEB);
  input Send_in;
  input Ack_in;
  input CPY;
  input EXB;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;
  output FEB;

  wire Ack_in;
  wire CPY;
  (* DONT_TOUCH *) wire DL1S;
  wire DL1S_reg_C_n_0;
  wire DL1S_reg_LDC_n_0;
  wire DL1S_reg_P_n_0;
  (* DONT_TOUCH *) wire DL_cpy;
  (* DONT_TOUCH *) wire DL_exb;
  wire EXB;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire and1_out;
  (* DONT_TOUCH *) wire and2_out;
  (* DONT_TOUCH *) wire cd;
  (* DONT_TOUCH *) wire cf1_ack_out;
  (* DONT_TOUCH *) wire cf1_cp;
  (* DONT_TOUCH *) wire cf1_send_out;
  (* DONT_TOUCH *) wire cf2_ack_out;
  (* DONT_TOUCH *) wire cf2_cp;
  (* DONT_TOUCH *) wire cf2_send_out;
  (* DONT_TOUCH *) wire cp3;
  (* DONT_TOUCH *) wire d;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nor1_out;
  (* DONT_TOUCH *) wire nor2_out;
  (* DONT_TOUCH *) wire or1_out;
  (* DONT_TOUCH *) wire or2_out;
  (* DONT_TOUCH *) wire sd;
  wire NLW_DL1S_reg_Q_UNCONNECTED;

  assign Ack_out = cf1_ack_out;
  assign CP = cf1_cp;
  assign FEB = nor2_out;
  assign Send_out = and1_out;
  LUT3 #(
    .INIT(8'hB8)) 
    DL1S_inferred_i_1
       (.I0(DL1S_reg_P_n_0),
        .I1(DL1S_reg_LDC_n_0),
        .I2(DL1S_reg_C_n_0),
        .O(DL1S));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCP_UNIQ_BASE_ DL1S_reg
       (.C(cp3),
        .CLR(MR),
        .D(d),
        .PRE(sd),
        .Q(NLW_DL1S_reg_Q_UNCONNECTED));
  FDCE #(
    .INIT(1'b0)) 
    DL1S_reg_C
       (.C(cp3),
        .CE(1'b1),
        .CLR(MR),
        .D(d),
        .Q(DL1S_reg_C_n_0));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    DL1S_reg_LDC
       (.CLR(MR),
        .D(1'b1),
        .G(sd),
        .GE(1'b1),
        .Q(DL1S_reg_LDC_n_0));
  FDPE #(
    .INIT(1'b1)) 
    DL1S_reg_P
       (.C(cp3),
        .CE(1'b1),
        .D(d),
        .PRE(sd),
        .Q(DL1S_reg_P_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    DL_cpy_reg
       (.C(cf1_cp),
        .CE(1'b1),
        .CLR(MR),
        .D(CPY),
        .Q(DL_cpy));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    DL_exb_reg
       (.C(cf1_cp),
        .CE(1'b1),
        .D(EXB),
        .PRE(MR),
        .Q(DL_exb));
  LUT2 #(
    .INIT(4'h8)) 
    and1_out_inferred_i_1
       (.I0(nand2_out),
        .I1(cf2_send_out),
        .O(and1_out));
  LUT3 #(
    .INIT(8'h20)) 
    and2_out_inferred_i_1
       (.I0(or1_out),
        .I1(DL1S),
        .I2(Ack_in),
        .O(and2_out));
  LUT1 #(
    .INIT(2'h1)) 
    cd_inferred_i_1
       (.I0(MR),
        .O(cd));
  (* DONT_TOUCH *) 
  CF__2 cf1
       (.Ack_in(and2_out),
        .Ack_out(cf1_ack_out),
        .CP(cf1_cp),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(cf1_send_out));
  (* DONT_TOUCH *) 
  CF__3 cf2
       (.Ack_in(Ack_in),
        .Ack_out(cf2_ack_out),
        .CP(cf2_cp),
        .MR(MR),
        .Send_in(nand1_out),
        .Send_out(cf2_send_out));
  LUT1 #(
    .INIT(2'h1)) 
    cp3_inferred_i_1
       (.I0(cf2_cp),
        .O(cp3));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(d));
  LUT3 #(
    .INIT(8'hBF)) 
    nand1_out_inferred_i_1
       (.I0(cf1_send_out),
        .I1(DL_exb),
        .I2(DL_cpy),
        .O(nand1_out));
  LUT2 #(
    .INIT(4'hB)) 
    nand2_out_inferred_i_1
       (.I0(cf1_send_out),
        .I1(DL_exb),
        .O(nand2_out));
  LUT2 #(
    .INIT(4'h1)) 
    nor1_out_inferred_i_1
       (.I0(cf2_cp),
        .I1(nor2_out),
        .O(nor1_out));
  LUT2 #(
    .INIT(4'h1)) 
    nor2_out_inferred_i_1
       (.I0(cf1_cp),
        .I1(nor1_out),
        .O(nor2_out));
  LUT2 #(
    .INIT(4'hE)) 
    or1_out_inferred_i_1
       (.I0(DL_exb),
        .I1(cf1_send_out),
        .O(or1_out));
  LUT2 #(
    .INIT(4'hE)) 
    or2_out_inferred_i_1
       (.I0(cf2_ack_out),
        .I1(Ack_in),
        .O(or2_out));
  LUT1 #(
    .INIT(2'h1)) 
    sd_inferred_i_1
       (.I0(or2_out),
        .O(sd));
endmodule

(* ORIG_REF_NAME = "C" *) (* dont_touch = "true" *) 
module C__1
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__14 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__13 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__12 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__11 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "C" *) (* dont_touch = "true" *) 
module C__2
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__18 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__17 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__16 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__15 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "C" *) (* dont_touch = "true" *) 
module C__3
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__22 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__21 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__20 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__19 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* CHECK_LICENSE_TYPE = "DMEM,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module DMEM
   (clka,
    wea,
    addra,
    dina,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [15:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [15:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [15:0]dina;
  wire [15:0]douta;
  wire [0:0]wea;
  wire NLW_U0_clkb_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_ena_UNCONNECTED;
  wire NLW_U0_enb_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [4:0]NLW_U0_addrb_UNCONNECTED;
  wire [15:0]NLW_U0_dinb_UNCONNECTED;
  wire [15:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [15:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [15:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_web_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.87285 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "DMEM.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "0" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "16" *) 
  (* C_READ_WIDTH_B = "16" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "16" *) 
  (* C_WRITE_WIDTH_B = "16" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  DMEM_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb(NLW_U0_addrb_UNCONNECTED[4:0]),
        .clka(clka),
        .clkb(NLW_U0_clkb_UNCONNECTED),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(dina),
        .dinb(NLW_U0_dinb_UNCONNECTED[15:0]),
        .douta(douta),
        .doutb(NLW_U0_doutb_UNCONNECTED[15:0]),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(NLW_U0_ena_UNCONNECTED),
        .enb(NLW_U0_enb_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[15:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[15:0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(wea),
        .web(NLW_U0_web_UNCONNECTED[0]));
endmodule

(* dont_touch = "true" *) 
module Delay_2ns
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__1
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__2
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__3
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__4
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
endmodule

(* dont_touch = "true" *) 
module Delay_4ns
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__1
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__10
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__11
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__12
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__13
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__14
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__15
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__16
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__17
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__18
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__19
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__2
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__20
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__21
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__22
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__23
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__24
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__25
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__26
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__27
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__28
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__29
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__3
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__30
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__31
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__32
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__33
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__34
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__35
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__36
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__37
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__38
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__4
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__5
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__6
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__7
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__8
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__9
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* dont_touch = "true" *) 
module ENTRY_FD
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD569 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD570 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD571 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD572 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD573 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD574 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD575 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD576 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD577 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD578 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD579 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD580 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD581 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD582 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD583 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD584 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD585 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD586 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD587 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__1
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_UNIQ_BASE_ \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD380 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD381 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD382 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD383 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD384 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD385 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD386 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD387 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD388 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD389 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD390 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD391 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD392 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD393 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD394 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD395 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD396 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD397 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__10
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD740 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD741 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD742 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD743 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD744 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD745 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD746 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD747 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD748 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD749 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD750 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD751 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD752 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD753 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD754 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD755 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD756 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD757 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD758 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__11
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD398 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD399 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD400 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD401 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD402 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD403 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD404 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD405 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD406 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD407 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD408 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD409 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD410 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD411 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD412 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD413 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD414 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD415 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD416 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__12
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD417 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD418 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD419 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD420 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD421 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD422 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD423 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD424 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD425 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD426 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD427 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD428 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD429 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD430 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD431 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD432 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD433 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD434 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD435 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__13
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD436 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD437 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD438 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD439 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD440 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD441 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD442 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD443 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD444 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD445 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD446 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD447 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD448 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD449 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD450 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD451 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD452 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD453 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD454 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__14
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD455 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD456 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD457 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD458 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD459 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD460 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD461 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD462 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD463 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD464 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD465 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD466 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD467 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD468 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD469 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD470 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD471 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD472 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD473 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__15
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD474 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD475 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD476 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD477 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD478 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD479 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD480 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD481 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD482 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD483 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD484 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD485 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD486 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD487 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD488 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD489 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD490 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD491 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD492 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__16
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD493 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD494 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD495 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD496 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD497 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD498 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD499 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD500 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD501 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD502 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD503 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD504 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD505 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD506 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD507 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD508 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD509 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD510 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD511 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__17
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD512 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD513 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD514 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD515 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD516 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD517 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD518 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD519 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD520 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD521 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD522 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD523 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD524 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD525 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD526 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD527 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD528 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD529 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD530 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__18
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD531 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD532 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD533 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD534 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD535 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD536 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD537 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD538 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD539 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD540 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD541 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD542 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD543 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD544 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD545 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD546 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD547 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD548 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD549 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__19
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD550 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD551 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD552 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD553 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD554 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD555 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD556 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD557 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD558 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD559 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD560 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD561 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD562 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD563 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD564 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD565 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD566 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD567 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD568 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__2
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD588 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD589 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD590 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD591 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD592 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD593 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD594 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD595 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD596 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD597 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD598 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD599 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD600 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD601 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD602 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD603 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD604 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD605 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD606 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__3
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD607 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD608 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD609 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD610 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD611 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD612 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD613 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD614 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD615 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD616 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD617 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD618 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD619 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD620 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD621 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD622 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD623 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD624 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD625 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__4
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD626 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD627 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD628 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD629 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD630 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD631 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD632 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD633 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD634 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD635 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD636 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD637 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD638 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD639 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD640 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD641 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD642 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD643 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD644 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__5
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD645 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD646 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD647 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD648 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD649 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD650 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD651 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD652 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD653 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD654 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD655 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD656 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD657 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD658 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD659 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD660 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD661 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD662 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD663 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__6
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD664 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD665 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD666 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD667 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD668 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD669 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD670 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD671 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD672 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD673 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD674 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD675 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD676 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD677 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD678 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD679 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD680 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD681 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD682 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__7
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD683 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD684 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD685 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD686 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD687 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD688 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD689 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD690 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD691 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD692 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD693 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD694 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD695 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD696 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD697 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD698 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD699 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD700 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD701 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__8
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD702 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD703 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD704 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD705 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD706 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD707 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD708 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD709 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD710 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD711 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD712 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD713 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD714 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD715 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD716 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD717 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD718 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD719 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD720 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__9
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD721 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD722 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD723 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD724 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD725 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD726 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD727 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD728 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD729 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD730 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD731 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD732 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD733 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD734 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD735 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD736 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD737 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD738 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD739 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* dont_touch = "true" *) 
module FP_Stage
   (PACKET_IN,
    DEL,
    Send_in,
    Ack_in,
    MR,
    Send_out,
    Ack_out,
    WRITE_DATA,
    PACKET_OUT,
    WRITE_EN,
    LOAD_FLG);
  input [61:0]PACKET_IN;
  input DEL;
  input Send_in;
  input Ack_in;
  input MR;
  output Send_out;
  output Ack_out;
  output [15:0]WRITE_DATA;
  output [39:0]PACKET_OUT;
  output WRITE_EN;
  output LOAD_FLG;

  wire ALU1__0;
  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire BR;
  (* DONT_TOUCH *) wire C;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire CPY;
  wire DEL;
  (* DONT_TOUCH *) wire [61:0]DL;
  (* DONT_TOUCH *) wire [15:0]DataL;
  (* DONT_TOUCH *) wire [15:0]DataR;
  wire LOAD_FLG;
  (* DONT_TOUCH *) wire [1:0]LR2;
  wire MR;
  (* DONT_TOUCH *) wire [5:0]OPC;
  wire [61:0]PACKET_IN;
  wire [39:0]PACKET_OUT;
  wire \PACKET_OUT[0]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[0]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[0]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[0]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[0]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[10]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[10]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[10]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[10]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_4 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_5 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_6 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_7 ;
  wire \PACKET_OUT[11]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[12]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[12]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[12]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[12]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_16_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_17_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_100_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_101_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_102_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_103_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_104_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_105_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_106_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_16_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_17_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_22_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_23_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_24_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_25_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_26_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_27_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_28_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_29_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_30_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_31_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_32_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_33_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_34_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_35_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_36_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_38_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_39_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_40_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_41_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_42_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_43_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_44_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_45_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_46_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_47_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_48_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_49_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_50_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_51_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_52_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_53_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_54_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_55_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_56_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_57_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_58_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_59_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_60_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_61_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_62_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_63_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_64_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_65_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_66_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_67_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_68_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_69_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_70_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_71_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_72_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_73_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_74_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_75_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_76_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_77_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_78_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_79_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_80_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_81_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_82_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_83_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_84_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_85_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_86_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_87_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_88_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_89_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_90_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_91_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_92_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_93_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_94_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_95_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_96_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_97_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_98_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_99_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_16_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_17_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_22_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_23_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_24_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_25_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_2_n_3 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_4 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_5 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_6 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_7 ;
  wire \PACKET_OUT[17]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[20]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[21]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[23]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[24]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[25]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[26]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[27]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[28]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_4 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_5 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_6 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_7 ;
  wire \PACKET_OUT[29]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[30]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[31]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[32]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[33]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[33]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[34]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[34]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[35]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_4 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_5 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_6 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_7 ;
  wire \PACKET_OUT[36]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[37]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[38]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_5_n_5 ;
  wire \PACKET_OUT[39]_INST_0_i_5_n_6 ;
  wire \PACKET_OUT[39]_INST_0_i_5_n_7 ;
  wire \PACKET_OUT[39]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_22_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_4 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_5 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_6 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_7 ;
  wire \PACKET_OUT[3]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[4]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[4]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[4]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[4]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[5]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[5]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[5]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[5]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[6]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[6]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[6]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[6]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_4 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_5 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_6 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_7 ;
  wire \PACKET_OUT[7]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[8]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[8]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[8]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[8]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[9]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[9]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[9]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[9]_INST_0_i_4_n_0 ;
  wire Send_in;
  wire Send_out;
  wire [15:0]WRITE_DATA;
  wire \WRITE_DATA[15]_INST_0_i_1_n_0 ;
  wire \WRITE_DATA[15]_INST_0_i_2_n_0 ;
  wire \WRITE_DATA[15]_INST_0_i_3_n_0 ;
  wire WRITE_EN;
  (* DONT_TOUCH *) wire Z;
  (* DONT_TOUCH *) wire [2:0]color;
  wire [17:17]data4;
  wire [16:1]data5;
  wire [17:1]data6;
  wire [17:1]data7;
  wire [16:2]data9;
  (* DONT_TOUCH *) wire [6:0]dest;
  (* DONT_TOUCH *) wire [7:0]gen;
  wire [15:0]p_0_in__0;
  wire NLW_ALU1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_ALU1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_ALU1_OVERFLOW_UNCONNECTED;
  wire NLW_ALU1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_ALU1_PATTERNDETECT_UNCONNECTED;
  wire NLW_ALU1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_ALU1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_ALU1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_ALU1_CARRYOUT_UNCONNECTED;
  wire [47:16]NLW_ALU1_P_UNCONNECTED;
  wire [47:0]NLW_ALU1_PCOUT_UNCONNECTED;
  wire [2:0]\NLW_PACKET_OUT[11]_INST_0_i_15_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[11]_INST_0_i_4_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[11]_INST_0_i_5_CO_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[15]_INST_0_i_10_CO_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[15]_INST_0_i_4_CO_UNCONNECTED ;
  wire [3:1]\NLW_PACKET_OUT[17]_INST_0_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[17]_INST_0_i_2_O_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[17]_INST_0_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[17]_INST_0_i_3_O_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[17]_INST_0_i_4_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[17]_INST_0_i_5_CO_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[17]_INST_0_i_5_O_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[29]_INST_0_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[36]_INST_0_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[39]_INST_0_i_5_CO_UNCONNECTED ;
  wire [3:3]\NLW_PACKET_OUT[39]_INST_0_i_5_O_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[3]_INST_0_i_15_CO_UNCONNECTED ;
  wire [0:0]\NLW_PACKET_OUT[3]_INST_0_i_15_O_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[3]_INST_0_i_4_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[3]_INST_0_i_5_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[7]_INST_0_i_15_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[7]_INST_0_i_4_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[7]_INST_0_i_5_CO_UNCONNECTED ;

  (* METHODOLOGY_DRC_VIOS = "{SYNTH-13 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    ALU1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DataL}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_ALU1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,DataR}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_ALU1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_ALU1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_ALU1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_ALU1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_ALU1_OVERFLOW_UNCONNECTED),
        .P({NLW_ALU1_P_UNCONNECTED[47:16],data5}),
        .PATTERNBDETECT(NLW_ALU1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_ALU1_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_ALU1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_ALU1_UNDERFLOW_UNCONNECTED));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst
       (.I0(DL[61]),
        .O(color[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__0
       (.I0(DL[60]),
        .O(color[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__1
       (.I0(DL[59]),
        .O(color[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__10
       (.I0(DL[50]),
        .O(dest[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__11
       (.I0(DL[49]),
        .O(dest[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__12
       (.I0(DL[48]),
        .O(dest[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__13
       (.I0(DL[47]),
        .O(dest[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__14
       (.I0(DL[46]),
        .O(dest[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__15
       (.I0(DL[45]),
        .O(dest[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__16
       (.I0(DL[44]),
        .O(dest[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__17
       (.I0(DL[43]),
        .O(LR2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__18
       (.I0(DL[42]),
        .O(LR2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__19
       (.I0(DL[41]),
        .O(BR));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__2
       (.I0(DL[58]),
        .O(gen[7]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__20
       (.I0(DL[40]),
        .O(CPY));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__21
       (.I0(DL[39]),
        .O(OPC[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__22
       (.I0(DL[38]),
        .O(OPC[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__23
       (.I0(DL[37]),
        .O(OPC[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__24
       (.I0(DL[36]),
        .O(OPC[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__25
       (.I0(DL[35]),
        .O(OPC[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__26
       (.I0(DL[34]),
        .O(OPC[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__27
       (.I0(DL[33]),
        .O(C));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__28
       (.I0(DL[32]),
        .O(Z));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__29
       (.I0(DL[31]),
        .O(DataL[15]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__3
       (.I0(DL[57]),
        .O(gen[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__30
       (.I0(DL[30]),
        .O(DataL[14]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__31
       (.I0(DL[29]),
        .O(DataL[13]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__32
       (.I0(DL[28]),
        .O(DataL[12]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__33
       (.I0(DL[27]),
        .O(DataL[11]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__34
       (.I0(DL[26]),
        .O(DataL[10]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__35
       (.I0(DL[25]),
        .O(DataL[9]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__36
       (.I0(DL[24]),
        .O(DataL[8]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__37
       (.I0(DL[23]),
        .O(DataL[7]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__38
       (.I0(DL[22]),
        .O(DataL[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__39
       (.I0(DL[21]),
        .O(DataL[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__4
       (.I0(DL[56]),
        .O(gen[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__40
       (.I0(DL[20]),
        .O(DataL[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__41
       (.I0(DL[19]),
        .O(DataL[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__42
       (.I0(DL[18]),
        .O(DataL[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__43
       (.I0(DL[17]),
        .O(DataL[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__44
       (.I0(DL[16]),
        .O(DataL[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__45
       (.I0(DL[15]),
        .O(DataR[15]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__46
       (.I0(DL[14]),
        .O(DataR[14]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__47
       (.I0(DL[13]),
        .O(DataR[13]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__48
       (.I0(DL[12]),
        .O(DataR[12]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__49
       (.I0(DL[11]),
        .O(DataR[11]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__5
       (.I0(DL[55]),
        .O(gen[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__50
       (.I0(DL[10]),
        .O(DataR[10]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__51
       (.I0(DL[9]),
        .O(DataR[9]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__52
       (.I0(DL[8]),
        .O(DataR[8]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__53
       (.I0(DL[7]),
        .O(DataR[7]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__54
       (.I0(DL[6]),
        .O(DataR[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__55
       (.I0(DL[5]),
        .O(DataR[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__56
       (.I0(DL[4]),
        .O(DataR[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__57
       (.I0(DL[3]),
        .O(DataR[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__58
       (.I0(DL[2]),
        .O(DataR[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__59
       (.I0(DL[1]),
        .O(DataR[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__6
       (.I0(DL[54]),
        .O(gen[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__60
       (.I0(DL[0]),
        .O(DataR[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__7
       (.I0(DL[53]),
        .O(gen[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__8
       (.I0(DL[52]),
        .O(gen[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__9
       (.I0(DL[51]),
        .O(gen[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[38] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[38]),
        .Q(DL[38]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[39] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[39]),
        .Q(DL[39]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[40] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[40]),
        .Q(DL[40]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[41] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[41]),
        .Q(DL[41]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[42] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[42]),
        .Q(DL[42]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[43] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[43]),
        .Q(DL[43]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[44] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[44]),
        .Q(DL[44]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[45] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[45]),
        .Q(DL[45]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[46] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[46]),
        .Q(DL[46]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[47] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[47]),
        .Q(DL[47]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[48] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[48]),
        .Q(DL[48]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[49] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[49]),
        .Q(DL[49]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[50] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[50]),
        .Q(DL[50]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[51] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[51]),
        .Q(DL[51]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[52] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[52]),
        .Q(DL[52]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[53] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[53]),
        .Q(DL[53]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[54] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[54]),
        .Q(DL[54]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[55] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[55]),
        .Q(DL[55]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[56] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[56]),
        .Q(DL[56]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[57] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[57]),
        .Q(DL[57]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[58] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[58]),
        .Q(DL[58]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[59] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[59]),
        .Q(DL[59]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[60] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[60]),
        .Q(DL[60]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[61] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[61]),
        .Q(DL[61]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[9]),
        .Q(DL[9]));
  LUT6 #(
    .INIT(64'h0A0000000A010200)) 
    LOAD_FLG_INST_0
       (.I0(OPC[4]),
        .I1(OPC[1]),
        .I2(OPC[0]),
        .I3(OPC[2]),
        .I4(OPC[5]),
        .I5(OPC[3]),
        .O(LOAD_FLG));
  MUXF7 \PACKET_OUT[0]_INST_0 
       (.I0(\PACKET_OUT[0]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[0]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[0]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[0]_INST_0_i_1 
       (.I0(\PACKET_OUT[0]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_7 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[0]),
        .O(\PACKET_OUT[0]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF40FD5DBF40A808)) 
    \PACKET_OUT[0]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I1(DataR[0]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[0]),
        .I4(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I5(\PACKET_OUT[0]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[0]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[0]_INST_0_i_3 
       (.I0(data5[1]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[0]),
        .I4(DataR[0]),
        .O(\PACKET_OUT[0]_INST_0_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[0]_INST_0_i_4 
       (.I0(data7[1]),
        .I1(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I2(data6[1]),
        .O(\PACKET_OUT[0]_INST_0_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \PACKET_OUT[0]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[0]_INST_0_i_7_n_0 ),
        .I2(DataR[1]),
        .I3(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I4(DataR[0]),
        .I5(\PACKET_OUT[1]_INST_0_i_7_n_0 ),
        .O(data7[1]));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \PACKET_OUT[0]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(DataR[0]),
        .I2(DataR[2]),
        .I3(DataL[0]),
        .I4(DataR[3]),
        .I5(DataR[1]),
        .O(data6[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[0]_INST_0_i_7 
       (.I0(DataL[12]),
        .I1(DataL[4]),
        .I2(DataR[2]),
        .I3(DataL[8]),
        .I4(DataR[3]),
        .I5(DataL[0]),
        .O(\PACKET_OUT[0]_INST_0_i_7_n_0 ));
  MUXF7 \PACKET_OUT[10]_INST_0 
       (.I0(\PACKET_OUT[10]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[10]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[10]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[10]_INST_0_i_1 
       (.I0(\PACKET_OUT[10]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_5 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[10]),
        .O(\PACKET_OUT[10]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[10]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[10]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[10]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[10]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[10]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[10]_INST_0_i_3 
       (.I0(data5[11]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[10]),
        .I4(DataR[10]),
        .O(\PACKET_OUT[10]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[10]_INST_0_i_4 
       (.I0(data9[11]),
        .I1(DataL[10]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[11]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[11]),
        .O(\PACKET_OUT[10]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[10]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_52_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_54_n_0 ),
        .O(data7[11]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[10]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_69_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_68_n_0 ),
        .O(data6[11]));
  MUXF7 \PACKET_OUT[11]_INST_0 
       (.I0(\PACKET_OUT[11]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[11]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[11]_INST_0_i_1 
       (.I0(\PACKET_OUT[11]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_4 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[11]),
        .O(\PACKET_OUT[11]_INST_0_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_10 
       (.I0(DataR[8]),
        .I1(DataL[8]),
        .O(\PACKET_OUT[11]_INST_0_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[11]_INST_0_i_11 
       (.I0(DataL[11]),
        .I1(DataR[11]),
        .O(\PACKET_OUT[11]_INST_0_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[11]_INST_0_i_12 
       (.I0(DataL[10]),
        .I1(DataR[10]),
        .O(\PACKET_OUT[11]_INST_0_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[11]_INST_0_i_13 
       (.I0(DataL[9]),
        .I1(DataR[9]),
        .O(\PACKET_OUT[11]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[11]_INST_0_i_14 
       (.I0(DataL[8]),
        .I1(DataR[8]),
        .O(\PACKET_OUT[11]_INST_0_i_14_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[11]_INST_0_i_15 
       (.CI(\PACKET_OUT[7]_INST_0_i_15_n_0 ),
        .CO({\PACKET_OUT[11]_INST_0_i_15_n_0 ,\NLW_PACKET_OUT[11]_INST_0_i_15_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[11:8]),
        .O(data9[12:9]),
        .S({\PACKET_OUT[11]_INST_0_i_18_n_0 ,\PACKET_OUT[11]_INST_0_i_19_n_0 ,\PACKET_OUT[11]_INST_0_i_20_n_0 ,\PACKET_OUT[11]_INST_0_i_21_n_0 }));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[11]_INST_0_i_16 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_54_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_49_n_0 ),
        .O(data7[12]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[11]_INST_0_i_17 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_70_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_69_n_0 ),
        .O(data6[12]));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_18 
       (.I0(DataR[11]),
        .I1(DataL[11]),
        .O(\PACKET_OUT[11]_INST_0_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_19 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .O(\PACKET_OUT[11]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[11]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[11]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[11]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[11]_INST_0_i_6_n_0 ),
        .O(\PACKET_OUT[11]_INST_0_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_20 
       (.I0(DataR[9]),
        .I1(DataL[9]),
        .O(\PACKET_OUT[11]_INST_0_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_21 
       (.I0(DataR[8]),
        .I1(DataL[8]),
        .O(\PACKET_OUT[11]_INST_0_i_21_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[11]_INST_0_i_3 
       (.I0(data5[12]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[11]),
        .I4(DataR[11]),
        .O(\PACKET_OUT[11]_INST_0_i_3_n_0 ));
  CARRY4 \PACKET_OUT[11]_INST_0_i_4 
       (.CI(\PACKET_OUT[7]_INST_0_i_4_n_0 ),
        .CO({\PACKET_OUT[11]_INST_0_i_4_n_0 ,\NLW_PACKET_OUT[11]_INST_0_i_4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[11:8]),
        .O({\PACKET_OUT[11]_INST_0_i_4_n_4 ,\PACKET_OUT[11]_INST_0_i_4_n_5 ,\PACKET_OUT[11]_INST_0_i_4_n_6 ,\PACKET_OUT[11]_INST_0_i_4_n_7 }),
        .S({\PACKET_OUT[11]_INST_0_i_7_n_0 ,\PACKET_OUT[11]_INST_0_i_8_n_0 ,\PACKET_OUT[11]_INST_0_i_9_n_0 ,\PACKET_OUT[11]_INST_0_i_10_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[11]_INST_0_i_5 
       (.CI(\PACKET_OUT[7]_INST_0_i_5_n_0 ),
        .CO({\PACKET_OUT[11]_INST_0_i_5_n_0 ,\NLW_PACKET_OUT[11]_INST_0_i_5_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[11:8]),
        .O(p_0_in__0[11:8]),
        .S({\PACKET_OUT[11]_INST_0_i_11_n_0 ,\PACKET_OUT[11]_INST_0_i_12_n_0 ,\PACKET_OUT[11]_INST_0_i_13_n_0 ,\PACKET_OUT[11]_INST_0_i_14_n_0 }));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[11]_INST_0_i_6 
       (.I0(data9[12]),
        .I1(DataL[11]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[12]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[12]),
        .O(\PACKET_OUT[11]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_7 
       (.I0(DataR[11]),
        .I1(DataL[11]),
        .O(\PACKET_OUT[11]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_8 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .O(\PACKET_OUT[11]_INST_0_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_9 
       (.I0(DataR[9]),
        .I1(DataL[9]),
        .O(\PACKET_OUT[11]_INST_0_i_9_n_0 ));
  MUXF7 \PACKET_OUT[12]_INST_0 
       (.I0(\PACKET_OUT[12]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[12]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[12]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[12]_INST_0_i_1 
       (.I0(\PACKET_OUT[12]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_7 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[12]),
        .O(\PACKET_OUT[12]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[12]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[12]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[12]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[12]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[12]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[12]_INST_0_i_3 
       (.I0(data5[13]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[12]),
        .I4(DataR[12]),
        .O(\PACKET_OUT[12]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[12]_INST_0_i_4 
       (.I0(data9[13]),
        .I1(DataL[12]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[13]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[13]),
        .O(\PACKET_OUT[12]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[12]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_49_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_48_n_0 ),
        .O(data7[13]));
  LUT6 #(
    .INIT(64'hFF00B8000000B800)) 
    \PACKET_OUT[12]_INST_0_i_6 
       (.I0(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I4(DataR[0]),
        .I5(\PACKET_OUT[16]_INST_0_i_70_n_0 ),
        .O(data6[13]));
  MUXF7 \PACKET_OUT[13]_INST_0 
       (.I0(\PACKET_OUT[13]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[13]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[13]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[13]_INST_0_i_1 
       (.I0(\PACKET_OUT[13]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_6 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[13]),
        .O(\PACKET_OUT[13]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[13]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[13]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[13]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[13]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[13]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[13]_INST_0_i_3 
       (.I0(data5[14]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[13]),
        .I4(DataR[13]),
        .O(\PACKET_OUT[13]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[13]_INST_0_i_4 
       (.I0(data9[14]),
        .I1(DataL[13]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[14]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[14]),
        .O(\PACKET_OUT[13]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[13]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_48_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_51_n_0 ),
        .O(data7[14]));
  LUT6 #(
    .INIT(64'hB800B800FF000000)) 
    \PACKET_OUT[13]_INST_0_i_6 
       (.I0(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I4(\PACKET_OUT[14]_INST_0_i_8_n_0 ),
        .I5(DataR[0]),
        .O(data6[14]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[13]_INST_0_i_7 
       (.I0(DataL[6]),
        .I1(DataR[2]),
        .I2(DataL[2]),
        .I3(DataR[3]),
        .I4(DataL[10]),
        .O(\PACKET_OUT[13]_INST_0_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[13]_INST_0_i_8 
       (.I0(DataL[0]),
        .I1(DataL[8]),
        .I2(DataR[2]),
        .I3(DataL[4]),
        .I4(DataR[3]),
        .I5(DataL[12]),
        .O(\PACKET_OUT[13]_INST_0_i_8_n_0 ));
  MUXF7 \PACKET_OUT[14]_INST_0 
       (.I0(\PACKET_OUT[14]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[14]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[14]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[14]_INST_0_i_1 
       (.I0(\PACKET_OUT[14]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_5 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[14]),
        .O(\PACKET_OUT[14]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[14]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[14]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[14]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[14]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[14]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[14]_INST_0_i_3 
       (.I0(data5[15]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[14]),
        .I4(DataR[14]),
        .O(\PACKET_OUT[14]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[14]_INST_0_i_4 
       (.I0(data9[15]),
        .I1(DataL[14]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[15]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[15]),
        .O(\PACKET_OUT[14]_INST_0_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \PACKET_OUT[14]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[14]_INST_0_i_7_n_0 ),
        .O(data7[15]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[14]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[15]_INST_0_i_19_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[14]_INST_0_i_8_n_0 ),
        .O(data6[15]));
  LUT6 #(
    .INIT(64'h0000000000000B08)) 
    \PACKET_OUT[14]_INST_0_i_7 
       (.I0(DataL[15]),
        .I1(DataR[0]),
        .I2(DataR[2]),
        .I3(DataL[14]),
        .I4(DataR[3]),
        .I5(DataR[1]),
        .O(\PACKET_OUT[14]_INST_0_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[14]_INST_0_i_8 
       (.I0(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .O(\PACKET_OUT[14]_INST_0_i_8_n_0 ));
  MUXF7 \PACKET_OUT[15]_INST_0 
       (.I0(\PACKET_OUT[15]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[15]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[15]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[15]_INST_0_i_1 
       (.I0(\PACKET_OUT[15]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_4 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[15]),
        .O(\PACKET_OUT[15]_INST_0_i_1_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[15]_INST_0_i_10 
       (.CI(\PACKET_OUT[11]_INST_0_i_15_n_0 ),
        .CO(\NLW_PACKET_OUT[15]_INST_0_i_10_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,DataL[14:12]}),
        .O(data9[16:13]),
        .S({\PACKET_OUT[15]_INST_0_i_13_n_0 ,\PACKET_OUT[15]_INST_0_i_14_n_0 ,\PACKET_OUT[15]_INST_0_i_15_n_0 ,\PACKET_OUT[15]_INST_0_i_16_n_0 }));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \PACKET_OUT[15]_INST_0_i_11 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(DataR[0]),
        .I2(DataR[2]),
        .I3(DataL[15]),
        .I4(DataR[3]),
        .I5(DataR[1]),
        .O(data7[16]));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \PACKET_OUT[15]_INST_0_i_12 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[15]_INST_0_i_17_n_0 ),
        .I2(DataR[1]),
        .I3(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .I4(DataR[0]),
        .I5(\PACKET_OUT[15]_INST_0_i_19_n_0 ),
        .O(data6[16]));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[15]_INST_0_i_13 
       (.I0(DataR[15]),
        .I1(DataL[15]),
        .O(\PACKET_OUT[15]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[15]_INST_0_i_14 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .O(\PACKET_OUT[15]_INST_0_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[15]_INST_0_i_15 
       (.I0(DataR[13]),
        .I1(DataL[13]),
        .O(\PACKET_OUT[15]_INST_0_i_15_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[15]_INST_0_i_16 
       (.I0(DataR[12]),
        .I1(DataL[12]),
        .O(\PACKET_OUT[15]_INST_0_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[15]_INST_0_i_17 
       (.I0(DataL[3]),
        .I1(DataL[11]),
        .I2(DataR[2]),
        .I3(DataL[7]),
        .I4(DataR[3]),
        .I5(DataL[15]),
        .O(\PACKET_OUT[15]_INST_0_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[15]_INST_0_i_18 
       (.I0(DataL[1]),
        .I1(DataL[9]),
        .I2(DataR[2]),
        .I3(DataL[5]),
        .I4(DataR[3]),
        .I5(DataL[13]),
        .O(\PACKET_OUT[15]_INST_0_i_18_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[15]_INST_0_i_19 
       (.I0(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_97_n_0 ),
        .O(\PACKET_OUT[15]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[15]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[15]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[15]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[15]_INST_0_i_5_n_0 ),
        .O(\PACKET_OUT[15]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[15]_INST_0_i_3 
       (.I0(data5[16]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[15]),
        .I4(DataR[15]),
        .O(\PACKET_OUT[15]_INST_0_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[15]_INST_0_i_4 
       (.CI(\PACKET_OUT[11]_INST_0_i_5_n_0 ),
        .CO(\NLW_PACKET_OUT[15]_INST_0_i_4_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,DataL[14:12]}),
        .O(p_0_in__0[15:12]),
        .S({\PACKET_OUT[15]_INST_0_i_6_n_0 ,\PACKET_OUT[15]_INST_0_i_7_n_0 ,\PACKET_OUT[15]_INST_0_i_8_n_0 ,\PACKET_OUT[15]_INST_0_i_9_n_0 }));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[15]_INST_0_i_5 
       (.I0(data9[16]),
        .I1(DataL[15]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[16]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[16]),
        .O(\PACKET_OUT[15]_INST_0_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[15]_INST_0_i_6 
       (.I0(DataL[15]),
        .I1(DataR[15]),
        .O(\PACKET_OUT[15]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[15]_INST_0_i_7 
       (.I0(DataL[14]),
        .I1(DataR[14]),
        .O(\PACKET_OUT[15]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[15]_INST_0_i_8 
       (.I0(DataL[13]),
        .I1(DataR[13]),
        .O(\PACKET_OUT[15]_INST_0_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[15]_INST_0_i_9 
       (.I0(DataL[12]),
        .I1(DataR[12]),
        .O(\PACKET_OUT[15]_INST_0_i_9_n_0 ));
  MUXF7 \PACKET_OUT[16]_INST_0 
       (.I0(\PACKET_OUT[16]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[16]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAFF0300AA000300)) 
    \PACKET_OUT[16]_INST_0_i_1 
       (.I0(\PACKET_OUT[16]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_4_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_5_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I4(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_6_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0001FFFF00010000)) 
    \PACKET_OUT[16]_INST_0_i_10 
       (.I0(\PACKET_OUT[16]_INST_0_i_33_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_34_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_35_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_36_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data4),
        .O(\PACKET_OUT[16]_INST_0_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_100 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .I2(DataR[15]),
        .I3(DataL[15]),
        .O(\PACKET_OUT[16]_INST_0_i_100_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \PACKET_OUT[16]_INST_0_i_101 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .I2(DataR[7]),
        .I3(DataL[7]),
        .O(\PACKET_OUT[16]_INST_0_i_101_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \PACKET_OUT[16]_INST_0_i_102 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .I2(DataR[15]),
        .I3(DataL[15]),
        .O(\PACKET_OUT[16]_INST_0_i_102_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_103 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .I2(DataR[11]),
        .I3(DataL[11]),
        .O(\PACKET_OUT[16]_INST_0_i_103_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[16]_INST_0_i_104 
       (.I0(DataL[9]),
        .I1(DataR[9]),
        .O(\PACKET_OUT[16]_INST_0_i_104_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_105 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .I2(DataR[15]),
        .I3(DataL[15]),
        .O(\PACKET_OUT[16]_INST_0_i_105_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_106 
       (.I0(DataR[12]),
        .I1(DataL[12]),
        .I2(DataR[13]),
        .I3(DataL[13]),
        .O(\PACKET_OUT[16]_INST_0_i_106_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_11 
       (.I0(\PACKET_OUT[7]_INST_0_i_4_n_6 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_7 ),
        .I2(\PACKET_OUT[7]_INST_0_i_4_n_4 ),
        .I3(\PACKET_OUT[7]_INST_0_i_4_n_5 ),
        .O(\PACKET_OUT[16]_INST_0_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_12 
       (.I0(\PACKET_OUT[17]_INST_0_i_4_n_6 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_7 ),
        .I2(\PACKET_OUT[17]_INST_0_i_4_n_4 ),
        .I3(\PACKET_OUT[17]_INST_0_i_4_n_5 ),
        .O(\PACKET_OUT[16]_INST_0_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_13 
       (.I0(p_0_in__0[5]),
        .I1(p_0_in__0[4]),
        .I2(p_0_in__0[7]),
        .I3(p_0_in__0[6]),
        .O(\PACKET_OUT[16]_INST_0_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_14 
       (.I0(p_0_in__0[1]),
        .I1(p_0_in__0[0]),
        .I2(p_0_in__0[3]),
        .I3(p_0_in__0[2]),
        .O(\PACKET_OUT[16]_INST_0_i_14_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_15 
       (.I0(p_0_in__0[13]),
        .I1(p_0_in__0[12]),
        .I2(p_0_in__0[15]),
        .I3(p_0_in__0[14]),
        .O(\PACKET_OUT[16]_INST_0_i_15_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_16 
       (.I0(p_0_in__0[9]),
        .I1(p_0_in__0[8]),
        .I2(p_0_in__0[11]),
        .I3(p_0_in__0[10]),
        .O(\PACKET_OUT[16]_INST_0_i_16_n_0 ));
  LUT5 #(
    .INIT(32'hFFCA0000)) 
    \PACKET_OUT[16]_INST_0_i_17 
       (.I0(\PACKET_OUT[16]_INST_0_i_38_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_39_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_40_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_17_n_0 ));
  LUT5 #(
    .INIT(32'hFFCA0000)) 
    \PACKET_OUT[16]_INST_0_i_18 
       (.I0(\PACKET_OUT[16]_INST_0_i_39_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_42_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_43_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_18_n_0 ));
  LUT5 #(
    .INIT(32'hF0F0F0E0)) 
    \PACKET_OUT[16]_INST_0_i_19 
       (.I0(\PACKET_OUT[16]_INST_0_i_44_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_45_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_46_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_47_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8CDCDCDC8C8C8)) 
    \PACKET_OUT[16]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I1(Z),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[17]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[17]),
        .O(\PACKET_OUT[16]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F0F0F0F0A0E0)) 
    \PACKET_OUT[16]_INST_0_i_20 
       (.I0(\PACKET_OUT[16]_INST_0_i_48_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_49_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I3(DataR[0]),
        .I4(\PACKET_OUT[16]_INST_0_i_50_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_51_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_20_n_0 ));
  LUT5 #(
    .INIT(32'hFFCA0000)) 
    \PACKET_OUT[16]_INST_0_i_21 
       (.I0(\PACKET_OUT[16]_INST_0_i_42_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_52_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_53_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_21_n_0 ));
  LUT5 #(
    .INIT(32'hFFCA0000)) 
    \PACKET_OUT[16]_INST_0_i_22 
       (.I0(\PACKET_OUT[16]_INST_0_i_52_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_49_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_54_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_22_n_0 ));
  LUT5 #(
    .INIT(32'hEFEC0000)) 
    \PACKET_OUT[16]_INST_0_i_23 
       (.I0(\PACKET_OUT[16]_INST_0_i_55_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_56_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_57_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_23_n_0 ));
  LUT5 #(
    .INIT(32'hEFEC0000)) 
    \PACKET_OUT[16]_INST_0_i_24 
       (.I0(\PACKET_OUT[16]_INST_0_i_57_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_58_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_59_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_24_n_0 ));
  LUT6 #(
    .INIT(64'hCCCCCCCCCCCC88C8)) 
    \PACKET_OUT[16]_INST_0_i_25 
       (.I0(\PACKET_OUT[16]_INST_0_i_60_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_55_n_0 ),
        .I3(DataR[0]),
        .I4(\PACKET_OUT[16]_INST_0_i_61_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_62_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_25_n_0 ));
  LUT5 #(
    .INIT(32'hF0F0F0E0)) 
    \PACKET_OUT[16]_INST_0_i_26 
       (.I0(\PACKET_OUT[16]_INST_0_i_63_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_64_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_65_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_66_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_26_n_0 ));
  LUT5 #(
    .INIT(32'hEFEC0000)) 
    \PACKET_OUT[16]_INST_0_i_27 
       (.I0(\PACKET_OUT[16]_INST_0_i_59_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_67_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_68_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_27_n_0 ));
  LUT5 #(
    .INIT(32'hEFEC0000)) 
    \PACKET_OUT[16]_INST_0_i_28 
       (.I0(\PACKET_OUT[16]_INST_0_i_68_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_69_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_70_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_28_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_29 
       (.I0(\PACKET_OUT[16]_INST_0_i_71_n_0 ),
        .I1(DataR[0]),
        .I2(DataL[0]),
        .I3(DataR[1]),
        .I4(DataL[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_72_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_29_n_0 ));
  MUXF7 \PACKET_OUT[16]_INST_0_i_3 
       (.I0(\PACKET_OUT[16]_INST_0_i_9_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_10_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_3_n_0 ),
        .S(\PACKET_OUT[39]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_30 
       (.I0(\PACKET_OUT[16]_INST_0_i_73_n_0 ),
        .I1(DataR[8]),
        .I2(DataL[8]),
        .I3(DataR[9]),
        .I4(DataL[9]),
        .I5(\PACKET_OUT[16]_INST_0_i_74_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_30_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \PACKET_OUT[16]_INST_0_i_31 
       (.I0(\PACKET_OUT[16]_INST_0_i_75_n_0 ),
        .I1(DataR[0]),
        .I2(DataL[0]),
        .I3(DataR[1]),
        .I4(DataL[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_76_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_31_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \PACKET_OUT[16]_INST_0_i_32 
       (.I0(\PACKET_OUT[16]_INST_0_i_77_n_0 ),
        .I1(DataR[8]),
        .I2(DataL[8]),
        .I3(DataR[9]),
        .I4(DataL[9]),
        .I5(\PACKET_OUT[16]_INST_0_i_78_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_32_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_33 
       (.I0(data5[6]),
        .I1(data5[5]),
        .I2(data5[8]),
        .I3(data5[7]),
        .O(\PACKET_OUT[16]_INST_0_i_33_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_34 
       (.I0(data5[2]),
        .I1(data5[1]),
        .I2(data5[4]),
        .I3(data5[3]),
        .O(\PACKET_OUT[16]_INST_0_i_34_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_35 
       (.I0(data5[14]),
        .I1(data5[13]),
        .I2(data5[16]),
        .I3(data5[15]),
        .O(\PACKET_OUT[16]_INST_0_i_35_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_36 
       (.I0(data5[10]),
        .I1(data5[9]),
        .I2(data5[12]),
        .I3(data5[11]),
        .O(\PACKET_OUT[16]_INST_0_i_36_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \PACKET_OUT[16]_INST_0_i_37 
       (.I0(\PACKET_OUT[16]_INST_0_i_79_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_80_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_81_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_82_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_83_n_0 ),
        .O(data4));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0_i_38 
       (.I0(\PACKET_OUT[16]_INST_0_i_84_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_38_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_39 
       (.I0(DataL[12]),
        .I1(DataR[2]),
        .I2(DataL[8]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_84_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_39_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_4 
       (.I0(\PACKET_OUT[3]_INST_0_i_4_n_5 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_4 ),
        .I2(\PACKET_OUT[3]_INST_0_i_4_n_7 ),
        .I3(\PACKET_OUT[3]_INST_0_i_4_n_6 ),
        .I4(\PACKET_OUT[16]_INST_0_i_11_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0_i_40 
       (.I0(\PACKET_OUT[16]_INST_0_i_85_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_86_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_40_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \PACKET_OUT[16]_INST_0_i_41 
       (.I0(DataR[13]),
        .I1(DataR[12]),
        .I2(DataR[15]),
        .I3(DataR[14]),
        .I4(\PACKET_OUT[16]_INST_0_i_87_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_88_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_41_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_42 
       (.I0(DataL[14]),
        .I1(DataR[2]),
        .I2(DataL[10]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_89_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_42_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_43 
       (.I0(DataL[13]),
        .I1(DataR[2]),
        .I2(DataL[9]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_85_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_43_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_44 
       (.I0(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I1(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_91_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_44_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_45 
       (.I0(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_91_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[0]_INST_0_i_7_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_45_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_46 
       (.I0(\PACKET_OUT[16]_INST_0_i_84_n_0 ),
        .I1(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_86_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_46_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_47 
       (.I0(\PACKET_OUT[16]_INST_0_i_86_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_47_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \PACKET_OUT[16]_INST_0_i_48 
       (.I0(DataL[15]),
        .I1(DataR[1]),
        .I2(DataR[3]),
        .I3(DataL[13]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[16]_INST_0_i_48_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \PACKET_OUT[16]_INST_0_i_49 
       (.I0(DataL[14]),
        .I1(DataR[1]),
        .I2(DataR[3]),
        .I3(DataL[12]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[16]_INST_0_i_49_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_5 
       (.I0(\PACKET_OUT[11]_INST_0_i_4_n_5 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_4 ),
        .I2(\PACKET_OUT[11]_INST_0_i_4_n_7 ),
        .I3(\PACKET_OUT[11]_INST_0_i_4_n_6 ),
        .I4(\PACKET_OUT[16]_INST_0_i_12_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \PACKET_OUT[16]_INST_0_i_50 
       (.I0(DataR[2]),
        .I1(DataL[15]),
        .I2(DataR[3]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[16]_INST_0_i_50_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \PACKET_OUT[16]_INST_0_i_51 
       (.I0(DataR[2]),
        .I1(DataL[14]),
        .I2(DataR[3]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[16]_INST_0_i_51_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \PACKET_OUT[16]_INST_0_i_52 
       (.I0(DataL[12]),
        .I1(DataR[1]),
        .I2(DataL[14]),
        .I3(DataR[2]),
        .I4(DataL[10]),
        .I5(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_52_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_53 
       (.I0(DataL[15]),
        .I1(DataR[2]),
        .I2(DataL[11]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_92_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_53_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \PACKET_OUT[16]_INST_0_i_54 
       (.I0(DataL[13]),
        .I1(DataR[1]),
        .I2(DataL[15]),
        .I3(DataR[2]),
        .I4(DataL[11]),
        .I5(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_54_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \PACKET_OUT[16]_INST_0_i_55 
       (.I0(DataL[1]),
        .I1(DataR[1]),
        .I2(DataR[3]),
        .I3(DataL[3]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[16]_INST_0_i_55_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \PACKET_OUT[16]_INST_0_i_56 
       (.I0(DataL[2]),
        .I1(DataR[1]),
        .I2(DataL[0]),
        .I3(DataR[2]),
        .I4(DataL[4]),
        .I5(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_56_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \PACKET_OUT[16]_INST_0_i_57 
       (.I0(DataL[3]),
        .I1(DataR[1]),
        .I2(DataL[1]),
        .I3(DataR[2]),
        .I4(DataL[5]),
        .I5(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_57_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_58 
       (.I0(DataL[0]),
        .I1(DataR[2]),
        .I2(DataL[4]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_93_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_58_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_59 
       (.I0(DataL[1]),
        .I1(DataR[2]),
        .I2(DataL[5]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_94_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_59_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \PACKET_OUT[16]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_13_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_14_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_15_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_16_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \PACKET_OUT[16]_INST_0_i_60 
       (.I0(DataR[2]),
        .I1(DataL[0]),
        .I2(DataR[3]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[16]_INST_0_i_60_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \PACKET_OUT[16]_INST_0_i_61 
       (.I0(DataL[0]),
        .I1(DataR[1]),
        .I2(DataR[3]),
        .I3(DataL[2]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[16]_INST_0_i_61_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \PACKET_OUT[16]_INST_0_i_62 
       (.I0(DataR[2]),
        .I1(DataL[1]),
        .I2(DataR[3]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[16]_INST_0_i_62_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_63 
       (.I0(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .I1(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_63_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_64 
       (.I0(\PACKET_OUT[16]_INST_0_i_96_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_64_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_65 
       (.I0(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_97_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[15]_INST_0_i_17_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_65_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_66 
       (.I0(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .I1(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_97_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_66_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_67 
       (.I0(DataL[2]),
        .I1(DataR[2]),
        .I2(DataL[6]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_98_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_67_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_68 
       (.I0(DataL[3]),
        .I1(DataR[2]),
        .I2(DataL[7]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_96_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_68_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0_i_69 
       (.I0(\PACKET_OUT[16]_INST_0_i_98_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_69_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \PACKET_OUT[16]_INST_0_i_7 
       (.I0(\PACKET_OUT[16]_INST_0_i_17_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_18_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_19_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_20_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_21_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_22_n_0 ),
        .O(data7[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0_i_70 
       (.I0(\PACKET_OUT[16]_INST_0_i_96_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_70_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_71 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .I2(DataR[3]),
        .I3(DataL[3]),
        .O(\PACKET_OUT[16]_INST_0_i_71_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_72 
       (.I0(DataL[5]),
        .I1(DataR[5]),
        .I2(DataL[4]),
        .I3(DataR[4]),
        .I4(\PACKET_OUT[16]_INST_0_i_99_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_72_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_73 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .I2(DataR[11]),
        .I3(DataL[11]),
        .O(\PACKET_OUT[16]_INST_0_i_73_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_74 
       (.I0(DataL[13]),
        .I1(DataR[13]),
        .I2(DataL[12]),
        .I3(DataR[12]),
        .I4(\PACKET_OUT[16]_INST_0_i_100_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_74_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \PACKET_OUT[16]_INST_0_i_75 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .I2(DataR[3]),
        .I3(DataL[3]),
        .O(\PACKET_OUT[16]_INST_0_i_75_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \PACKET_OUT[16]_INST_0_i_76 
       (.I0(DataL[5]),
        .I1(DataR[5]),
        .I2(DataL[4]),
        .I3(DataR[4]),
        .I4(\PACKET_OUT[16]_INST_0_i_101_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_76_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \PACKET_OUT[16]_INST_0_i_77 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .I2(DataR[11]),
        .I3(DataL[11]),
        .O(\PACKET_OUT[16]_INST_0_i_77_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \PACKET_OUT[16]_INST_0_i_78 
       (.I0(DataL[13]),
        .I1(DataR[13]),
        .I2(DataL[12]),
        .I3(DataR[12]),
        .I4(\PACKET_OUT[16]_INST_0_i_102_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_78_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_79 
       (.I0(DataR[4]),
        .I1(DataL[4]),
        .I2(DataR[5]),
        .I3(DataL[5]),
        .O(\PACKET_OUT[16]_INST_0_i_79_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \PACKET_OUT[16]_INST_0_i_8 
       (.I0(\PACKET_OUT[16]_INST_0_i_23_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_24_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_25_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_26_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_27_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_28_n_0 ),
        .O(data6[17]));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_80 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .I2(DataR[7]),
        .I3(DataL[7]),
        .O(\PACKET_OUT[16]_INST_0_i_80_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_81 
       (.I0(DataR[0]),
        .I1(DataL[0]),
        .I2(DataR[1]),
        .I3(DataL[1]),
        .O(\PACKET_OUT[16]_INST_0_i_81_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_82 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .I2(DataR[3]),
        .I3(DataL[3]),
        .O(\PACKET_OUT[16]_INST_0_i_82_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFBEFF)) 
    \PACKET_OUT[16]_INST_0_i_83 
       (.I0(\PACKET_OUT[16]_INST_0_i_103_n_0 ),
        .I1(DataR[8]),
        .I2(DataL[8]),
        .I3(\PACKET_OUT[16]_INST_0_i_104_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_105_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_106_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_83_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_84 
       (.I0(DataL[10]),
        .I1(DataR[2]),
        .I2(DataL[14]),
        .I3(DataR[3]),
        .I4(DataL[6]),
        .O(\PACKET_OUT[16]_INST_0_i_84_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_85 
       (.I0(DataL[11]),
        .I1(DataR[2]),
        .I2(DataL[15]),
        .I3(DataR[3]),
        .I4(DataL[7]),
        .O(\PACKET_OUT[16]_INST_0_i_85_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_86 
       (.I0(DataL[9]),
        .I1(DataR[2]),
        .I2(DataL[13]),
        .I3(DataR[3]),
        .I4(DataL[5]),
        .O(\PACKET_OUT[16]_INST_0_i_86_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_87 
       (.I0(DataR[6]),
        .I1(DataR[7]),
        .I2(DataR[4]),
        .I3(DataR[5]),
        .O(\PACKET_OUT[16]_INST_0_i_87_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_88 
       (.I0(DataR[10]),
        .I1(DataR[11]),
        .I2(DataR[8]),
        .I3(DataR[9]),
        .O(\PACKET_OUT[16]_INST_0_i_88_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \PACKET_OUT[16]_INST_0_i_89 
       (.I0(DataL[12]),
        .I1(DataR[2]),
        .I2(DataL[8]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_89_n_0 ));
  LUT5 #(
    .INIT(32'h1010101F)) 
    \PACKET_OUT[16]_INST_0_i_9 
       (.I0(\PACKET_OUT[16]_INST_0_i_29_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_30_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_31_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_32_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_90 
       (.I0(DataL[15]),
        .I1(DataL[7]),
        .I2(DataR[2]),
        .I3(DataL[11]),
        .I4(DataR[3]),
        .I5(DataL[3]),
        .O(\PACKET_OUT[16]_INST_0_i_90_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_91 
       (.I0(DataL[13]),
        .I1(DataL[5]),
        .I2(DataR[2]),
        .I3(DataL[9]),
        .I4(DataR[3]),
        .I5(DataL[1]),
        .O(\PACKET_OUT[16]_INST_0_i_91_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \PACKET_OUT[16]_INST_0_i_92 
       (.I0(DataL[13]),
        .I1(DataR[2]),
        .I2(DataL[9]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_92_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \PACKET_OUT[16]_INST_0_i_93 
       (.I0(DataL[2]),
        .I1(DataR[2]),
        .I2(DataL[6]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_93_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \PACKET_OUT[16]_INST_0_i_94 
       (.I0(DataL[3]),
        .I1(DataR[2]),
        .I2(DataL[7]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_94_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_95 
       (.I0(DataL[7]),
        .I1(DataR[2]),
        .I2(DataL[3]),
        .I3(DataR[3]),
        .I4(DataL[11]),
        .O(\PACKET_OUT[16]_INST_0_i_95_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_96 
       (.I0(DataL[5]),
        .I1(DataR[2]),
        .I2(DataL[1]),
        .I3(DataR[3]),
        .I4(DataL[9]),
        .O(\PACKET_OUT[16]_INST_0_i_96_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_97 
       (.I0(DataL[2]),
        .I1(DataL[10]),
        .I2(DataR[2]),
        .I3(DataL[6]),
        .I4(DataR[3]),
        .I5(DataL[14]),
        .O(\PACKET_OUT[16]_INST_0_i_97_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_98 
       (.I0(DataL[4]),
        .I1(DataR[2]),
        .I2(DataL[0]),
        .I3(DataR[3]),
        .I4(DataL[8]),
        .O(\PACKET_OUT[16]_INST_0_i_98_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_99 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .I2(DataR[7]),
        .I3(DataL[7]),
        .O(\PACKET_OUT[16]_INST_0_i_99_n_0 ));
  LUT6 #(
    .INIT(64'h88BBB8888888B888)) 
    \PACKET_OUT[17]_INST_0 
       (.I0(\PACKET_OUT[17]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[17]_INST_0_i_2_n_3 ),
        .I3(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I4(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I5(ALU1__0),
        .O(PACKET_OUT[17]));
  LUT3 #(
    .INIT(8'hE0)) 
    \PACKET_OUT[17]_INST_0_i_1 
       (.I0(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(C),
        .O(\PACKET_OUT[17]_INST_0_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_10 
       (.I0(DataL[15]),
        .I1(DataR[15]),
        .I2(DataL[14]),
        .I3(DataR[14]),
        .O(\PACKET_OUT[17]_INST_0_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_11 
       (.I0(DataL[13]),
        .I1(DataR[13]),
        .I2(DataL[12]),
        .I3(DataR[12]),
        .O(\PACKET_OUT[17]_INST_0_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_12 
       (.I0(DataL[11]),
        .I1(DataR[11]),
        .I2(DataL[10]),
        .I3(DataR[10]),
        .O(\PACKET_OUT[17]_INST_0_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_13 
       (.I0(DataL[9]),
        .I1(DataR[9]),
        .I2(DataL[8]),
        .I3(DataR[8]),
        .O(\PACKET_OUT[17]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[17]_INST_0_i_14 
       (.I0(DataR[15]),
        .I1(DataL[15]),
        .O(\PACKET_OUT[17]_INST_0_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[17]_INST_0_i_15 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .O(\PACKET_OUT[17]_INST_0_i_15_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[17]_INST_0_i_16 
       (.I0(DataR[13]),
        .I1(DataL[13]),
        .O(\PACKET_OUT[17]_INST_0_i_16_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[17]_INST_0_i_17 
       (.I0(DataR[12]),
        .I1(DataL[12]),
        .O(\PACKET_OUT[17]_INST_0_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_18 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .I2(DataL[7]),
        .I3(DataR[7]),
        .O(\PACKET_OUT[17]_INST_0_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_19 
       (.I0(DataR[4]),
        .I1(DataL[4]),
        .I2(DataL[5]),
        .I3(DataR[5]),
        .O(\PACKET_OUT[17]_INST_0_i_19_n_0 ));
  CARRY4 \PACKET_OUT[17]_INST_0_i_2 
       (.CI(\PACKET_OUT[17]_INST_0_i_4_n_0 ),
        .CO({\NLW_PACKET_OUT[17]_INST_0_i_2_CO_UNCONNECTED [3:1],\PACKET_OUT[17]_INST_0_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_PACKET_OUT[17]_INST_0_i_2_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,1'b0,1'b1}));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_20 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .I2(DataL[3]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[17]_INST_0_i_20_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_21 
       (.I0(DataR[0]),
        .I1(DataL[0]),
        .I2(DataL[1]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[17]_INST_0_i_21_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_22 
       (.I0(DataL[7]),
        .I1(DataR[7]),
        .I2(DataL[6]),
        .I3(DataR[6]),
        .O(\PACKET_OUT[17]_INST_0_i_22_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_23 
       (.I0(DataL[5]),
        .I1(DataR[5]),
        .I2(DataL[4]),
        .I3(DataR[4]),
        .O(\PACKET_OUT[17]_INST_0_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_24 
       (.I0(DataL[3]),
        .I1(DataR[3]),
        .I2(DataL[2]),
        .I3(DataR[2]),
        .O(\PACKET_OUT[17]_INST_0_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_25 
       (.I0(DataL[1]),
        .I1(DataR[1]),
        .I2(DataL[0]),
        .I3(DataR[0]),
        .O(\PACKET_OUT[17]_INST_0_i_25_n_0 ));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \PACKET_OUT[17]_INST_0_i_3 
       (.CI(\PACKET_OUT[17]_INST_0_i_5_n_0 ),
        .CO({ALU1__0,\NLW_PACKET_OUT[17]_INST_0_i_3_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\PACKET_OUT[17]_INST_0_i_6_n_0 ,\PACKET_OUT[17]_INST_0_i_7_n_0 ,\PACKET_OUT[17]_INST_0_i_8_n_0 ,\PACKET_OUT[17]_INST_0_i_9_n_0 }),
        .O(\NLW_PACKET_OUT[17]_INST_0_i_3_O_UNCONNECTED [3:0]),
        .S({\PACKET_OUT[17]_INST_0_i_10_n_0 ,\PACKET_OUT[17]_INST_0_i_11_n_0 ,\PACKET_OUT[17]_INST_0_i_12_n_0 ,\PACKET_OUT[17]_INST_0_i_13_n_0 }));
  CARRY4 \PACKET_OUT[17]_INST_0_i_4 
       (.CI(\PACKET_OUT[11]_INST_0_i_4_n_0 ),
        .CO({\PACKET_OUT[17]_INST_0_i_4_n_0 ,\NLW_PACKET_OUT[17]_INST_0_i_4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[15:12]),
        .O({\PACKET_OUT[17]_INST_0_i_4_n_4 ,\PACKET_OUT[17]_INST_0_i_4_n_5 ,\PACKET_OUT[17]_INST_0_i_4_n_6 ,\PACKET_OUT[17]_INST_0_i_4_n_7 }),
        .S({\PACKET_OUT[17]_INST_0_i_14_n_0 ,\PACKET_OUT[17]_INST_0_i_15_n_0 ,\PACKET_OUT[17]_INST_0_i_16_n_0 ,\PACKET_OUT[17]_INST_0_i_17_n_0 }));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \PACKET_OUT[17]_INST_0_i_5 
       (.CI(1'b0),
        .CO({\PACKET_OUT[17]_INST_0_i_5_n_0 ,\NLW_PACKET_OUT[17]_INST_0_i_5_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\PACKET_OUT[17]_INST_0_i_18_n_0 ,\PACKET_OUT[17]_INST_0_i_19_n_0 ,\PACKET_OUT[17]_INST_0_i_20_n_0 ,\PACKET_OUT[17]_INST_0_i_21_n_0 }),
        .O(\NLW_PACKET_OUT[17]_INST_0_i_5_O_UNCONNECTED [3:0]),
        .S({\PACKET_OUT[17]_INST_0_i_22_n_0 ,\PACKET_OUT[17]_INST_0_i_23_n_0 ,\PACKET_OUT[17]_INST_0_i_24_n_0 ,\PACKET_OUT[17]_INST_0_i_25_n_0 }));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_6 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .I2(DataL[15]),
        .I3(DataR[15]),
        .O(\PACKET_OUT[17]_INST_0_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_7 
       (.I0(DataR[12]),
        .I1(DataL[12]),
        .I2(DataL[13]),
        .I3(DataR[13]),
        .O(\PACKET_OUT[17]_INST_0_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_8 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .I2(DataL[11]),
        .I3(DataR[11]),
        .O(\PACKET_OUT[17]_INST_0_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_9 
       (.I0(DataR[8]),
        .I1(DataL[8]),
        .I2(DataL[9]),
        .I3(DataR[9]),
        .O(\PACKET_OUT[17]_INST_0_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hFE00)) 
    \PACKET_OUT[18]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(CPY),
        .O(PACKET_OUT[18]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \PACKET_OUT[19]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(BR),
        .O(PACKET_OUT[19]));
  MUXF7 \PACKET_OUT[1]_INST_0 
       (.I0(\PACKET_OUT[1]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[1]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[1]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[1]_INST_0_i_1 
       (.I0(\PACKET_OUT[1]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_6 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[1]),
        .O(\PACKET_OUT[1]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[1]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[1]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[1]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[1]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[1]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[1]_INST_0_i_3 
       (.I0(data5[2]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[1]),
        .I4(DataR[1]),
        .O(\PACKET_OUT[1]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[1]_INST_0_i_4 
       (.I0(data9[2]),
        .I1(DataL[1]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[2]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[2]),
        .O(\PACKET_OUT[1]_INST_0_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB800B800FF000000)) 
    \PACKET_OUT[1]_INST_0_i_5 
       (.I0(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I4(\PACKET_OUT[1]_INST_0_i_7_n_0 ),
        .I5(DataR[0]),
        .O(data7[2]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \PACKET_OUT[1]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[1]_INST_0_i_8_n_0 ),
        .O(data6[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[1]_INST_0_i_7 
       (.I0(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_91_n_0 ),
        .O(\PACKET_OUT[1]_INST_0_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000B08)) 
    \PACKET_OUT[1]_INST_0_i_8 
       (.I0(DataL[0]),
        .I1(DataR[0]),
        .I2(DataR[2]),
        .I3(DataL[1]),
        .I4(DataR[3]),
        .I5(DataR[1]),
        .O(\PACKET_OUT[1]_INST_0_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF00000800)) 
    \PACKET_OUT[20]_INST_0 
       (.I0(\PACKET_OUT[20]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(LR2[0]),
        .O(PACKET_OUT[20]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[20]_INST_0_i_1 
       (.I0(LR2[1]),
        .I1(Z),
        .I2(LR2[0]),
        .O(\PACKET_OUT[20]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF00000800)) 
    \PACKET_OUT[21]_INST_0 
       (.I0(\PACKET_OUT[21]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(LR2[1]),
        .O(PACKET_OUT[21]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[21]_INST_0_i_1 
       (.I0(LR2[0]),
        .I1(Z),
        .I2(LR2[1]),
        .O(\PACKET_OUT[21]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[22]_INST_0 
       (.I0(Z),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[0]),
        .O(PACKET_OUT[22]));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[23]_INST_0 
       (.I0(\PACKET_OUT[23]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[1]),
        .O(PACKET_OUT[23]));
  LUT2 #(
    .INIT(4'h8)) 
    \PACKET_OUT[23]_INST_0_i_1 
       (.I0(Z),
        .I1(dest[0]),
        .O(\PACKET_OUT[23]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[24]_INST_0 
       (.I0(\PACKET_OUT[24]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[2]),
        .O(PACKET_OUT[24]));
  LUT3 #(
    .INIT(8'h80)) 
    \PACKET_OUT[24]_INST_0_i_1 
       (.I0(dest[1]),
        .I1(dest[0]),
        .I2(Z),
        .O(\PACKET_OUT[24]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[25]_INST_0 
       (.I0(\PACKET_OUT[25]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[3]),
        .O(PACKET_OUT[25]));
  LUT4 #(
    .INIT(16'h8000)) 
    \PACKET_OUT[25]_INST_0_i_1 
       (.I0(dest[2]),
        .I1(Z),
        .I2(dest[0]),
        .I3(dest[1]),
        .O(\PACKET_OUT[25]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[26]_INST_0 
       (.I0(\PACKET_OUT[26]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[4]),
        .O(PACKET_OUT[26]));
  LUT5 #(
    .INIT(32'h80000000)) 
    \PACKET_OUT[26]_INST_0_i_1 
       (.I0(dest[3]),
        .I1(dest[1]),
        .I2(dest[0]),
        .I3(Z),
        .I4(dest[2]),
        .O(\PACKET_OUT[26]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[27]_INST_0 
       (.I0(\PACKET_OUT[27]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[5]),
        .O(PACKET_OUT[27]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \PACKET_OUT[27]_INST_0_i_1 
       (.I0(dest[4]),
        .I1(dest[2]),
        .I2(Z),
        .I3(dest[0]),
        .I4(dest[1]),
        .I5(dest[3]),
        .O(\PACKET_OUT[27]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF00000800)) 
    \PACKET_OUT[28]_INST_0 
       (.I0(\PACKET_OUT[28]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[6]),
        .O(PACKET_OUT[28]));
  LUT3 #(
    .INIT(8'h78)) 
    \PACKET_OUT[28]_INST_0_i_1 
       (.I0(\PACKET_OUT[27]_INST_0_i_1_n_0 ),
        .I1(dest[5]),
        .I2(dest[6]),
        .O(\PACKET_OUT[28]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h3FFFBCFFC0008000)) 
    \PACKET_OUT[29]_INST_0 
       (.I0(\PACKET_OUT[29]_INST_0_i_1_n_7 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[0]),
        .O(PACKET_OUT[29]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[29]_INST_0_i_1 
       (.CI(1'b0),
        .CO({\PACKET_OUT[29]_INST_0_i_1_n_0 ,\NLW_PACKET_OUT[29]_INST_0_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(gen[3:0]),
        .O({\PACKET_OUT[29]_INST_0_i_1_n_4 ,\PACKET_OUT[29]_INST_0_i_1_n_5 ,\PACKET_OUT[29]_INST_0_i_1_n_6 ,\PACKET_OUT[29]_INST_0_i_1_n_7 }),
        .S({\PACKET_OUT[29]_INST_0_i_2_n_0 ,\PACKET_OUT[29]_INST_0_i_3_n_0 ,\PACKET_OUT[29]_INST_0_i_4_n_0 ,\PACKET_OUT[29]_INST_0_i_5_n_0 }));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[29]_INST_0_i_2 
       (.I0(gen[3]),
        .I1(DataR[3]),
        .O(\PACKET_OUT[29]_INST_0_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[29]_INST_0_i_3 
       (.I0(gen[2]),
        .I1(DataR[2]),
        .O(\PACKET_OUT[29]_INST_0_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[29]_INST_0_i_4 
       (.I0(gen[1]),
        .I1(DataR[1]),
        .O(\PACKET_OUT[29]_INST_0_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[29]_INST_0_i_5 
       (.I0(gen[0]),
        .I1(DataR[0]),
        .O(\PACKET_OUT[29]_INST_0_i_5_n_0 ));
  MUXF7 \PACKET_OUT[2]_INST_0 
       (.I0(\PACKET_OUT[2]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[2]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[2]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[2]_INST_0_i_1 
       (.I0(\PACKET_OUT[2]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_5 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[2]),
        .O(\PACKET_OUT[2]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[2]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[2]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[2]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[2]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[2]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[2]_INST_0_i_3 
       (.I0(data5[3]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[2]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[2]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[2]_INST_0_i_4 
       (.I0(data9[3]),
        .I1(DataL[2]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[3]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[3]),
        .O(\PACKET_OUT[2]_INST_0_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFF00B8000000B800)) 
    \PACKET_OUT[2]_INST_0_i_5 
       (.I0(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I4(DataR[0]),
        .I5(\PACKET_OUT[3]_INST_0_i_22_n_0 ),
        .O(data7[3]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[2]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_61_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_62_n_0 ),
        .O(data6[3]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[2]_INST_0_i_7 
       (.I0(DataL[8]),
        .I1(DataR[2]),
        .I2(DataL[12]),
        .I3(DataR[3]),
        .I4(DataL[4]),
        .O(\PACKET_OUT[2]_INST_0_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[2]_INST_0_i_8 
       (.I0(DataL[14]),
        .I1(DataL[6]),
        .I2(DataR[2]),
        .I3(DataL[10]),
        .I4(DataR[3]),
        .I5(DataL[2]),
        .O(\PACKET_OUT[2]_INST_0_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[30]_INST_0 
       (.I0(\PACKET_OUT[30]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[1]),
        .O(PACKET_OUT[30]));
  LUT4 #(
    .INIT(16'h9F90)) 
    \PACKET_OUT[30]_INST_0_i_1 
       (.I0(gen[0]),
        .I1(gen[1]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[29]_INST_0_i_1_n_6 ),
        .O(\PACKET_OUT[30]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[31]_INST_0 
       (.I0(\PACKET_OUT[31]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[2]),
        .O(PACKET_OUT[31]));
  LUT5 #(
    .INIT(32'hE1FFE100)) 
    \PACKET_OUT[31]_INST_0_i_1 
       (.I0(gen[1]),
        .I1(gen[0]),
        .I2(gen[2]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(\PACKET_OUT[29]_INST_0_i_1_n_5 ),
        .O(\PACKET_OUT[31]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[32]_INST_0 
       (.I0(\PACKET_OUT[32]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[3]),
        .O(PACKET_OUT[32]));
  LUT6 #(
    .INIT(64'hFE01FFFFFE010000)) 
    \PACKET_OUT[32]_INST_0_i_1 
       (.I0(gen[2]),
        .I1(gen[0]),
        .I2(gen[1]),
        .I3(gen[3]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(\PACKET_OUT[29]_INST_0_i_1_n_4 ),
        .O(\PACKET_OUT[32]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[33]_INST_0 
       (.I0(\PACKET_OUT[33]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[4]),
        .O(PACKET_OUT[33]));
  LUT4 #(
    .INIT(16'h9F90)) 
    \PACKET_OUT[33]_INST_0_i_1 
       (.I0(\PACKET_OUT[33]_INST_0_i_2_n_0 ),
        .I1(gen[4]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[36]_INST_0_i_3_n_7 ),
        .O(\PACKET_OUT[33]_INST_0_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[33]_INST_0_i_2 
       (.I0(gen[2]),
        .I1(gen[0]),
        .I2(gen[1]),
        .I3(gen[3]),
        .O(\PACKET_OUT[33]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[34]_INST_0 
       (.I0(\PACKET_OUT[34]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[5]),
        .O(PACKET_OUT[34]));
  LUT4 #(
    .INIT(16'h9F90)) 
    \PACKET_OUT[34]_INST_0_i_1 
       (.I0(\PACKET_OUT[34]_INST_0_i_2_n_0 ),
        .I1(gen[5]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[36]_INST_0_i_3_n_6 ),
        .O(\PACKET_OUT[34]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[34]_INST_0_i_2 
       (.I0(gen[3]),
        .I1(gen[1]),
        .I2(gen[0]),
        .I3(gen[2]),
        .I4(gen[4]),
        .O(\PACKET_OUT[34]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[35]_INST_0 
       (.I0(\PACKET_OUT[35]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[6]),
        .O(PACKET_OUT[35]));
  LUT4 #(
    .INIT(16'h9F90)) 
    \PACKET_OUT[35]_INST_0_i_1 
       (.I0(\PACKET_OUT[36]_INST_0_i_2_n_0 ),
        .I1(gen[6]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[36]_INST_0_i_3_n_5 ),
        .O(\PACKET_OUT[35]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[36]_INST_0 
       (.I0(\PACKET_OUT[36]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[7]),
        .O(PACKET_OUT[36]));
  LUT5 #(
    .INIT(32'hE1FFE100)) 
    \PACKET_OUT[36]_INST_0_i_1 
       (.I0(gen[6]),
        .I1(\PACKET_OUT[36]_INST_0_i_2_n_0 ),
        .I2(gen[7]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(\PACKET_OUT[36]_INST_0_i_3_n_4 ),
        .O(\PACKET_OUT[36]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \PACKET_OUT[36]_INST_0_i_2 
       (.I0(gen[4]),
        .I1(gen[2]),
        .I2(gen[0]),
        .I3(gen[1]),
        .I4(gen[3]),
        .I5(gen[5]),
        .O(\PACKET_OUT[36]_INST_0_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[36]_INST_0_i_3 
       (.CI(\PACKET_OUT[29]_INST_0_i_1_n_0 ),
        .CO({\PACKET_OUT[36]_INST_0_i_3_n_0 ,\NLW_PACKET_OUT[36]_INST_0_i_3_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\PACKET_OUT[36]_INST_0_i_4_n_0 ,gen[6:4]}),
        .O({\PACKET_OUT[36]_INST_0_i_3_n_4 ,\PACKET_OUT[36]_INST_0_i_3_n_5 ,\PACKET_OUT[36]_INST_0_i_3_n_6 ,\PACKET_OUT[36]_INST_0_i_3_n_7 }),
        .S({\PACKET_OUT[36]_INST_0_i_5_n_0 ,\PACKET_OUT[36]_INST_0_i_6_n_0 ,\PACKET_OUT[36]_INST_0_i_7_n_0 ,\PACKET_OUT[36]_INST_0_i_8_n_0 }));
  LUT1 #(
    .INIT(2'h1)) 
    \PACKET_OUT[36]_INST_0_i_4 
       (.I0(DataR[7]),
        .O(\PACKET_OUT[36]_INST_0_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[36]_INST_0_i_5 
       (.I0(DataR[7]),
        .I1(gen[7]),
        .O(\PACKET_OUT[36]_INST_0_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[36]_INST_0_i_6 
       (.I0(gen[6]),
        .I1(DataR[6]),
        .O(\PACKET_OUT[36]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[36]_INST_0_i_7 
       (.I0(gen[5]),
        .I1(DataR[5]),
        .O(\PACKET_OUT[36]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[36]_INST_0_i_8 
       (.I0(gen[4]),
        .I1(DataR[4]),
        .O(\PACKET_OUT[36]_INST_0_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFBCBF80808080)) 
    \PACKET_OUT[37]_INST_0 
       (.I0(\PACKET_OUT[37]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(color[0]),
        .O(PACKET_OUT[37]));
  LUT5 #(
    .INIT(32'hFCBB3088)) 
    \PACKET_OUT[37]_INST_0_i_1 
       (.I0(\PACKET_OUT[39]_INST_0_i_5_n_7 ),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(color[0]),
        .O(\PACKET_OUT[37]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFBCBF80808080)) 
    \PACKET_OUT[38]_INST_0 
       (.I0(\PACKET_OUT[38]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(color[1]),
        .O(PACKET_OUT[38]));
  LUT5 #(
    .INIT(32'hFCBB3088)) 
    \PACKET_OUT[38]_INST_0_i_1 
       (.I0(\PACKET_OUT[39]_INST_0_i_5_n_6 ),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(DataR[1]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(color[1]),
        .O(\PACKET_OUT[38]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFBCBF80808080)) 
    \PACKET_OUT[39]_INST_0 
       (.I0(\PACKET_OUT[39]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(color[2]),
        .O(PACKET_OUT[39]));
  LUT5 #(
    .INIT(32'hFCBB3088)) 
    \PACKET_OUT[39]_INST_0_i_1 
       (.I0(\PACKET_OUT[39]_INST_0_i_5_n_5 ),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(DataR[2]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(color[2]),
        .O(\PACKET_OUT[39]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h55545500)) 
    \PACKET_OUT[39]_INST_0_i_2 
       (.I0(OPC[4]),
        .I1(OPC[1]),
        .I2(OPC[0]),
        .I3(OPC[2]),
        .I4(OPC[5]),
        .O(\PACKET_OUT[39]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEFEFEEEEFFEFE)) 
    \PACKET_OUT[39]_INST_0_i_3 
       (.I0(OPC[4]),
        .I1(OPC[1]),
        .I2(OPC[5]),
        .I3(OPC[3]),
        .I4(OPC[0]),
        .I5(OPC[2]),
        .O(\PACKET_OUT[39]_INST_0_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h30F430C3)) 
    \PACKET_OUT[39]_INST_0_i_4 
       (.I0(OPC[1]),
        .I1(OPC[0]),
        .I2(OPC[2]),
        .I3(OPC[4]),
        .I4(OPC[3]),
        .O(\PACKET_OUT[39]_INST_0_i_4_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[39]_INST_0_i_5 
       (.CI(\PACKET_OUT[36]_INST_0_i_3_n_0 ),
        .CO(\NLW_PACKET_OUT[39]_INST_0_i_5_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,DataR[8:7]}),
        .O({\NLW_PACKET_OUT[39]_INST_0_i_5_O_UNCONNECTED [3],\PACKET_OUT[39]_INST_0_i_5_n_5 ,\PACKET_OUT[39]_INST_0_i_5_n_6 ,\PACKET_OUT[39]_INST_0_i_5_n_7 }),
        .S({1'b0,\PACKET_OUT[39]_INST_0_i_6_n_0 ,\PACKET_OUT[39]_INST_0_i_7_n_0 ,\PACKET_OUT[39]_INST_0_i_8_n_0 }));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[39]_INST_0_i_6 
       (.I0(DataR[9]),
        .I1(DataR[10]),
        .O(\PACKET_OUT[39]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[39]_INST_0_i_7 
       (.I0(DataR[8]),
        .I1(DataR[9]),
        .O(\PACKET_OUT[39]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[39]_INST_0_i_8 
       (.I0(DataR[7]),
        .I1(DataR[8]),
        .O(\PACKET_OUT[39]_INST_0_i_8_n_0 ));
  MUXF7 \PACKET_OUT[3]_INST_0 
       (.I0(\PACKET_OUT[3]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[3]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[3]_INST_0_i_1 
       (.I0(\PACKET_OUT[3]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_4 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[3]),
        .O(\PACKET_OUT[3]_INST_0_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_10 
       (.I0(DataR[0]),
        .I1(DataL[0]),
        .O(\PACKET_OUT[3]_INST_0_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[3]_INST_0_i_11 
       (.I0(DataL[3]),
        .I1(DataR[3]),
        .O(\PACKET_OUT[3]_INST_0_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[3]_INST_0_i_12 
       (.I0(DataL[2]),
        .I1(DataR[2]),
        .O(\PACKET_OUT[3]_INST_0_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[3]_INST_0_i_13 
       (.I0(DataL[1]),
        .I1(DataR[1]),
        .O(\PACKET_OUT[3]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[3]_INST_0_i_14 
       (.I0(DataL[0]),
        .I1(DataR[0]),
        .O(\PACKET_OUT[3]_INST_0_i_14_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[3]_INST_0_i_15 
       (.CI(1'b0),
        .CO({\PACKET_OUT[3]_INST_0_i_15_n_0 ,\NLW_PACKET_OUT[3]_INST_0_i_15_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[3:0]),
        .O({data9[4:2],\NLW_PACKET_OUT[3]_INST_0_i_15_O_UNCONNECTED [0]}),
        .S({\PACKET_OUT[3]_INST_0_i_18_n_0 ,\PACKET_OUT[3]_INST_0_i_19_n_0 ,\PACKET_OUT[3]_INST_0_i_20_n_0 ,\PACKET_OUT[3]_INST_0_i_21_n_0 }));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[3]_INST_0_i_16 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_22_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_38_n_0 ),
        .O(data7[4]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[3]_INST_0_i_17 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_55_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_61_n_0 ),
        .O(data6[4]));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_18 
       (.I0(DataR[3]),
        .I1(DataL[3]),
        .O(\PACKET_OUT[3]_INST_0_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_19 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .O(\PACKET_OUT[3]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[3]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[3]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[3]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[3]_INST_0_i_6_n_0 ),
        .O(\PACKET_OUT[3]_INST_0_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_20 
       (.I0(DataR[1]),
        .I1(DataL[1]),
        .O(\PACKET_OUT[3]_INST_0_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_21 
       (.I0(DataR[0]),
        .I1(DataL[0]),
        .O(\PACKET_OUT[3]_INST_0_i_21_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[3]_INST_0_i_22 
       (.I0(\PACKET_OUT[16]_INST_0_i_86_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .O(\PACKET_OUT[3]_INST_0_i_22_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[3]_INST_0_i_3 
       (.I0(data5[4]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[3]),
        .I4(DataR[3]),
        .O(\PACKET_OUT[3]_INST_0_i_3_n_0 ));
  CARRY4 \PACKET_OUT[3]_INST_0_i_4 
       (.CI(1'b0),
        .CO({\PACKET_OUT[3]_INST_0_i_4_n_0 ,\NLW_PACKET_OUT[3]_INST_0_i_4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[3:0]),
        .O({\PACKET_OUT[3]_INST_0_i_4_n_4 ,\PACKET_OUT[3]_INST_0_i_4_n_5 ,\PACKET_OUT[3]_INST_0_i_4_n_6 ,\PACKET_OUT[3]_INST_0_i_4_n_7 }),
        .S({\PACKET_OUT[3]_INST_0_i_7_n_0 ,\PACKET_OUT[3]_INST_0_i_8_n_0 ,\PACKET_OUT[3]_INST_0_i_9_n_0 ,\PACKET_OUT[3]_INST_0_i_10_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[3]_INST_0_i_5 
       (.CI(1'b0),
        .CO({\PACKET_OUT[3]_INST_0_i_5_n_0 ,\NLW_PACKET_OUT[3]_INST_0_i_5_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI(DataL[3:0]),
        .O(p_0_in__0[3:0]),
        .S({\PACKET_OUT[3]_INST_0_i_11_n_0 ,\PACKET_OUT[3]_INST_0_i_12_n_0 ,\PACKET_OUT[3]_INST_0_i_13_n_0 ,\PACKET_OUT[3]_INST_0_i_14_n_0 }));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[3]_INST_0_i_6 
       (.I0(data9[4]),
        .I1(DataL[3]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[4]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[4]),
        .O(\PACKET_OUT[3]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_7 
       (.I0(DataR[3]),
        .I1(DataL[3]),
        .O(\PACKET_OUT[3]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_8 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .O(\PACKET_OUT[3]_INST_0_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_9 
       (.I0(DataR[1]),
        .I1(DataL[1]),
        .O(\PACKET_OUT[3]_INST_0_i_9_n_0 ));
  MUXF7 \PACKET_OUT[4]_INST_0 
       (.I0(\PACKET_OUT[4]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[4]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[4]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[4]_INST_0_i_1 
       (.I0(\PACKET_OUT[4]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_7 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[4]),
        .O(\PACKET_OUT[4]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[4]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[4]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[4]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[4]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[4]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[4]_INST_0_i_3 
       (.I0(data5[5]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[4]),
        .I4(DataR[4]),
        .O(\PACKET_OUT[4]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[4]_INST_0_i_4 
       (.I0(data9[5]),
        .I1(DataL[4]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[5]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[5]),
        .O(\PACKET_OUT[4]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[4]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_38_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_40_n_0 ),
        .O(data7[5]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[4]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_56_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_55_n_0 ),
        .O(data6[5]));
  MUXF7 \PACKET_OUT[5]_INST_0 
       (.I0(\PACKET_OUT[5]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[5]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[5]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[5]_INST_0_i_1 
       (.I0(\PACKET_OUT[5]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_6 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[5]),
        .O(\PACKET_OUT[5]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[5]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[5]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[5]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[5]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[5]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[5]_INST_0_i_3 
       (.I0(data5[6]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[5]),
        .I4(DataR[5]),
        .O(\PACKET_OUT[5]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[5]_INST_0_i_4 
       (.I0(data9[6]),
        .I1(DataL[5]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[6]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[6]),
        .O(\PACKET_OUT[5]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[5]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_40_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_39_n_0 ),
        .O(data7[6]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[5]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_57_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_56_n_0 ),
        .O(data6[6]));
  MUXF7 \PACKET_OUT[6]_INST_0 
       (.I0(\PACKET_OUT[6]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[6]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[6]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[6]_INST_0_i_1 
       (.I0(\PACKET_OUT[6]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_5 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[6]),
        .O(\PACKET_OUT[6]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[6]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[6]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[6]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[6]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[6]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[6]_INST_0_i_3 
       (.I0(data5[7]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[6]),
        .I4(DataR[6]),
        .O(\PACKET_OUT[6]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[6]_INST_0_i_4 
       (.I0(data9[7]),
        .I1(DataL[6]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[7]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[7]),
        .O(\PACKET_OUT[6]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[6]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_39_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_43_n_0 ),
        .O(data7[7]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[6]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_58_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_57_n_0 ),
        .O(data6[7]));
  MUXF7 \PACKET_OUT[7]_INST_0 
       (.I0(\PACKET_OUT[7]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[7]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[7]_INST_0_i_1 
       (.I0(\PACKET_OUT[7]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_4 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[7]),
        .O(\PACKET_OUT[7]_INST_0_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_10 
       (.I0(DataR[4]),
        .I1(DataL[4]),
        .O(\PACKET_OUT[7]_INST_0_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[7]_INST_0_i_11 
       (.I0(DataL[7]),
        .I1(DataR[7]),
        .O(\PACKET_OUT[7]_INST_0_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[7]_INST_0_i_12 
       (.I0(DataL[6]),
        .I1(DataR[6]),
        .O(\PACKET_OUT[7]_INST_0_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[7]_INST_0_i_13 
       (.I0(DataL[5]),
        .I1(DataR[5]),
        .O(\PACKET_OUT[7]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[7]_INST_0_i_14 
       (.I0(DataL[4]),
        .I1(DataR[4]),
        .O(\PACKET_OUT[7]_INST_0_i_14_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[7]_INST_0_i_15 
       (.CI(\PACKET_OUT[3]_INST_0_i_15_n_0 ),
        .CO({\PACKET_OUT[7]_INST_0_i_15_n_0 ,\NLW_PACKET_OUT[7]_INST_0_i_15_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[7:4]),
        .O(data9[8:5]),
        .S({\PACKET_OUT[7]_INST_0_i_18_n_0 ,\PACKET_OUT[7]_INST_0_i_19_n_0 ,\PACKET_OUT[7]_INST_0_i_20_n_0 ,\PACKET_OUT[7]_INST_0_i_21_n_0 }));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[7]_INST_0_i_16 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_43_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_42_n_0 ),
        .O(data7[8]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[7]_INST_0_i_17 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_59_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_58_n_0 ),
        .O(data6[8]));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_18 
       (.I0(DataR[7]),
        .I1(DataL[7]),
        .O(\PACKET_OUT[7]_INST_0_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_19 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .O(\PACKET_OUT[7]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[7]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[7]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[7]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[7]_INST_0_i_6_n_0 ),
        .O(\PACKET_OUT[7]_INST_0_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_20 
       (.I0(DataR[5]),
        .I1(DataL[5]),
        .O(\PACKET_OUT[7]_INST_0_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_21 
       (.I0(DataR[4]),
        .I1(DataL[4]),
        .O(\PACKET_OUT[7]_INST_0_i_21_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[7]_INST_0_i_3 
       (.I0(data5[8]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[7]),
        .I4(DataR[7]),
        .O(\PACKET_OUT[7]_INST_0_i_3_n_0 ));
  CARRY4 \PACKET_OUT[7]_INST_0_i_4 
       (.CI(\PACKET_OUT[3]_INST_0_i_4_n_0 ),
        .CO({\PACKET_OUT[7]_INST_0_i_4_n_0 ,\NLW_PACKET_OUT[7]_INST_0_i_4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[7:4]),
        .O({\PACKET_OUT[7]_INST_0_i_4_n_4 ,\PACKET_OUT[7]_INST_0_i_4_n_5 ,\PACKET_OUT[7]_INST_0_i_4_n_6 ,\PACKET_OUT[7]_INST_0_i_4_n_7 }),
        .S({\PACKET_OUT[7]_INST_0_i_7_n_0 ,\PACKET_OUT[7]_INST_0_i_8_n_0 ,\PACKET_OUT[7]_INST_0_i_9_n_0 ,\PACKET_OUT[7]_INST_0_i_10_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[7]_INST_0_i_5 
       (.CI(\PACKET_OUT[3]_INST_0_i_5_n_0 ),
        .CO({\PACKET_OUT[7]_INST_0_i_5_n_0 ,\NLW_PACKET_OUT[7]_INST_0_i_5_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[7:4]),
        .O(p_0_in__0[7:4]),
        .S({\PACKET_OUT[7]_INST_0_i_11_n_0 ,\PACKET_OUT[7]_INST_0_i_12_n_0 ,\PACKET_OUT[7]_INST_0_i_13_n_0 ,\PACKET_OUT[7]_INST_0_i_14_n_0 }));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[7]_INST_0_i_6 
       (.I0(data9[8]),
        .I1(DataL[7]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[8]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[8]),
        .O(\PACKET_OUT[7]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_7 
       (.I0(DataR[7]),
        .I1(DataL[7]),
        .O(\PACKET_OUT[7]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_8 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .O(\PACKET_OUT[7]_INST_0_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_9 
       (.I0(DataR[5]),
        .I1(DataL[5]),
        .O(\PACKET_OUT[7]_INST_0_i_9_n_0 ));
  MUXF7 \PACKET_OUT[8]_INST_0 
       (.I0(\PACKET_OUT[8]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[8]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[8]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[8]_INST_0_i_1 
       (.I0(\PACKET_OUT[8]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_7 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[8]),
        .O(\PACKET_OUT[8]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[8]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[8]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[8]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[8]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[8]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[8]_INST_0_i_3 
       (.I0(data5[9]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[8]),
        .I4(DataR[8]),
        .O(\PACKET_OUT[8]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[8]_INST_0_i_4 
       (.I0(data9[9]),
        .I1(DataL[8]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[9]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[9]),
        .O(\PACKET_OUT[8]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[8]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_42_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_53_n_0 ),
        .O(data7[9]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[8]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_67_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_59_n_0 ),
        .O(data6[9]));
  MUXF7 \PACKET_OUT[9]_INST_0 
       (.I0(\PACKET_OUT[9]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[9]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[9]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[9]_INST_0_i_1 
       (.I0(\PACKET_OUT[9]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_6 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[9]),
        .O(\PACKET_OUT[9]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[9]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[9]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[9]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[9]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[9]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[9]_INST_0_i_3 
       (.I0(data5[10]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[9]),
        .I4(DataR[9]),
        .O(\PACKET_OUT[9]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[9]_INST_0_i_4 
       (.I0(data9[10]),
        .I1(DataL[9]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[10]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[10]),
        .O(\PACKET_OUT[9]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[9]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_53_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_52_n_0 ),
        .O(data7[10]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[9]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_68_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_67_n_0 ),
        .O(data6[10]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[0]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[0]),
        .O(WRITE_DATA[0]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[10]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[10]),
        .O(WRITE_DATA[10]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[11]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[11]),
        .O(WRITE_DATA[11]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[12]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[12]),
        .O(WRITE_DATA[12]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[13]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[13]),
        .O(WRITE_DATA[13]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[14]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[14]),
        .O(WRITE_DATA[14]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[15]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[15]),
        .O(WRITE_DATA[15]));
  LUT5 #(
    .INIT(32'h0A0AABEE)) 
    \WRITE_DATA[15]_INST_0_i_1 
       (.I0(OPC[5]),
        .I1(OPC[3]),
        .I2(OPC[0]),
        .I3(OPC[4]),
        .I4(OPC[1]),
        .O(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFAAEEFB)) 
    \WRITE_DATA[15]_INST_0_i_2 
       (.I0(OPC[2]),
        .I1(OPC[0]),
        .I2(OPC[3]),
        .I3(OPC[5]),
        .I4(OPC[1]),
        .I5(OPC[4]),
        .O(\WRITE_DATA[15]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5555FFFF50504054)) 
    \WRITE_DATA[15]_INST_0_i_3 
       (.I0(OPC[4]),
        .I1(OPC[1]),
        .I2(OPC[5]),
        .I3(OPC[3]),
        .I4(OPC[0]),
        .I5(OPC[2]),
        .O(\WRITE_DATA[15]_INST_0_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[1]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[1]),
        .O(WRITE_DATA[1]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[2]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[2]),
        .O(WRITE_DATA[2]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[3]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[3]),
        .O(WRITE_DATA[3]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[4]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[4]),
        .O(WRITE_DATA[4]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[5]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[5]),
        .O(WRITE_DATA[5]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[6]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[6]),
        .O(WRITE_DATA[6]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[7]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[7]),
        .O(WRITE_DATA[7]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[8]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[8]),
        .O(WRITE_DATA[8]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[9]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[9]),
        .O(WRITE_DATA[9]));
  LUT6 #(
    .INIT(64'h0000000000020000)) 
    WRITE_EN_INST_0
       (.I0(OPC[5]),
        .I1(OPC[3]),
        .I2(OPC[4]),
        .I3(OPC[2]),
        .I4(OPC[0]),
        .I5(OPC[1]),
        .O(WRITE_EN));
  (* DONT_TOUCH *) 
  CE ce
       (.CE_Ack_in(Ack_in),
        .CE_Ack_out(Ack_out),
        .CE_CP(CP),
        .CE_Send_in(Send_in),
        .CE_Send_out(Send_out),
        .Exb(DEL),
        .MR(MR));
endmodule

(* ECO_CHECKSUM = "dc494980" *) (* POWER_OPT_BRAM_CDC = "10" *) (* POWER_OPT_BRAM_SR_ADDR = "2" *) 
(* POWER_OPT_LOOPED_NET_PERCENTAGE = "3" *) (* dont_touch = "true" *) 
(* NotValidForBitStream *)
(* \DesignAttr:ENABLE_NOC_NETLIST_VIEW  *) 
(* \DesignAttr:ENABLE_AIE_NETLIST_VIEW  *) 
module JOIN_DDP
   (MR,
    Send_in,
    Ack_in,
    PACKET_IN,
    Send_out,
    Ack_out,
    PACKET_OUT);
  input MR;
  input Send_in;
  input Ack_in;
  input [37:0]PACKET_IN;
  output Send_out;
  output Ack_out;
  output [37:0]PACKET_OUT;

  (* DONT_TOUCH *) wire [5:0]ADDR;
  wire Ack_in;
  wire Ack_in_IBUF;
  wire Ack_out;
  wire Ack_out_OBUF;
  (* DONT_TOUCH *) wire B_Ack_out;
  (* DONT_TOUCH *) wire [37:0]B_PACKET_OUT;
  (* DONT_TOUCH *) wire B_Send_out_EXTERNAL;
  (* DONT_TOUCH *) wire B_Send_out_INTERNAL;
  (* DONT_TOUCH *) wire COPY_Ack_out;
  (* DONT_TOUCH *) wire [37:0]COPY_PACKET_OUT;
  (* DONT_TOUCH *) wire COPY_Send_out;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire C_Ack_out;
  wire DEL;
  (* DONT_TOUCH *) wire [37:0]DL;
  (* DONT_TOUCH *) wire FP_Ack_out;
  (* DONT_TOUCH *) wire [39:0]FP_PACKET_OUT;
  (* DONT_TOUCH *) wire FP_Send_out;
  wire LOAD_FLG;
  (* DONT_TOUCH *) wire MA_Ack_out;
  (* DONT_TOUCH *) wire [39:0]MA_PACKET_OUT;
  (* DONT_TOUCH *) wire MA_Send_out;
  (* DONT_TOUCH *) wire MMCAM_Ack_out;
  (* DONT_TOUCH *) wire [37:0]MMCAM_PACKET_OUT;
  (* DONT_TOUCH *) wire MMCAM_Send_out;
  (* DONT_TOUCH *) wire MMRAM_Ack_out;
  (* DONT_TOUCH *) wire [51:0]MMRAM_PACKET_OUT;
  (* DONT_TOUCH *) wire MMRAM_Send_out;
  wire MR;
  wire MR_IBUF;
  (* DONT_TOUCH *) wire M_Ack_out;
  wire M_Ack_out_IN;
  (* DONT_TOUCH *) wire [37:0]M_PACKET_OUT;
  (* DONT_TOUCH *) wire M_Send_out;
  wire [37:0]PACKET_IN;
  wire [37:0]PACKET_IN_IBUF;
  wire [37:0]PACKET_OUT;
  (* DONT_TOUCH *) wire PS_Ack_out;
  wire PS_DEL;
  (* DONT_TOUCH *) wire [61:0]PS_PACKET_OUT;
  (* DONT_TOUCH *) wire PS_Send_out;
  wire Send_in;
  wire Send_in_IBUF;
  wire Send_out;
  wire Send_out_OBUF;
  wire WRITE_DATA;
  wire WRITE_EN;
  wire WR_E;
  wire [15:1]NLW_FP_WRITE_DATA_UNCONNECTED;

initial begin
 $sdf_annotate("JOIN_DDP_SIM_time_impl.sdf",,,,"tool_control");
end
  IBUF Ack_in_IBUF_inst
       (.I(Ack_in),
        .O(Ack_in_IBUF));
  OBUF Ack_out_OBUF_inst
       (.I(Ack_out_OBUF),
        .O(Ack_out));
  (* DONT_TOUCH *) 
  B_Stage B
       (.Ack_in_a(M_Ack_out_IN),
        .Ack_in_b(C_Ack_out),
        .Ack_out(B_Ack_out),
        .MR(MR_IBUF),
        .PACKET_IN(COPY_PACKET_OUT),
        .PACKET_OUT(B_PACKET_OUT),
        .Send_in(COPY_Send_out),
        .Send_out_a(B_Send_out_INTERNAL),
        .Send_out_b(B_Send_out_EXTERNAL));
  (* DONT_TOUCH *) 
  COPY_Stage COPY
       (.Ack_in(B_Ack_out),
        .Ack_out(COPY_Ack_out),
        .MR(MR_IBUF),
        .PACKET_IN(MA_PACKET_OUT),
        .PACKET_OUT(COPY_PACKET_OUT),
        .Send_in(MA_Send_out),
        .Send_out(COPY_Send_out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  FP_Stage FP
       (.Ack_in(MA_Ack_out),
        .Ack_out(FP_Ack_out),
        .DEL(PS_DEL),
        .LOAD_FLG(LOAD_FLG),
        .MR(MR_IBUF),
        .PACKET_IN(PS_PACKET_OUT),
        .PACKET_OUT(FP_PACKET_OUT),
        .Send_in(PS_Send_out),
        .Send_out(FP_Send_out),
        .WRITE_DATA({NLW_FP_WRITE_DATA_UNCONNECTED[15:1],WRITE_DATA}),
        .WRITE_EN(WRITE_EN));
  (* DONT_TOUCH *) 
  M_Stage M
       (.Ack_in(MMCAM_Ack_out),
        .Ack_out_EX(Ack_out_OBUF),
        .Ack_out_IN(M_Ack_out_IN),
        .MR(MR_IBUF),
        .PACKET_IN_EXTERNAL(PACKET_IN_IBUF),
        .PACKET_IN_INTERNAL(B_PACKET_OUT),
        .PACKET_OUT(M_PACKET_OUT),
        .Send_in_EX(Send_in_IBUF),
        .Send_in_IN(B_Send_out_INTERNAL),
        .Send_out(M_Send_out));
  (* DONT_TOUCH *) 
  MA_Stage MA
       (.Ack_in(COPY_Ack_out),
        .Ack_out(MA_Ack_out),
        .LOAD_FLG(LOAD_FLG),
        .MR(MR_IBUF),
        .PACKET_IN(FP_PACKET_OUT),
        .PACKET_OUT(MA_PACKET_OUT),
        .Send_in(FP_Send_out),
        .Send_out(MA_Send_out),
        .WRITE_DATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,WRITE_DATA}),
        .WRITE_EN(WRITE_EN));
  (* DONT_TOUCH *) 
  MMCAM_Stage MMCAM
       (.ADDR(ADDR),
        .Ack_in(MMRAM_Ack_out),
        .Ack_out(MMCAM_Ack_out),
        .DEL(DEL),
        .MR(MR_IBUF),
        .PACKET_IN(M_PACKET_OUT),
        .PACKET_OUT(MMCAM_PACKET_OUT),
        .Send_in(M_Send_out),
        .Send_out(MMCAM_Send_out),
        .WR_E(WR_E));
  (* DONT_TOUCH *) 
  MMRAM_Stage MMRAM
       (.ADDR(ADDR),
        .Ack_in(PS_Ack_out),
        .Ack_out(MMRAM_Ack_out),
        .DEL(DEL),
        .MR(MR_IBUF),
        .PACKET_IN(MMCAM_PACKET_OUT),
        .PACKET_OUT(MMRAM_PACKET_OUT),
        .Send_in(MMCAM_Send_out),
        .Send_out(MMRAM_Send_out),
        .WR_E(WR_E));
  IBUF MR_IBUF_inst
       (.I(MR),
        .O(MR_IBUF));
  IBUF \PACKET_IN_IBUF[0]_inst 
       (.I(PACKET_IN[0]),
        .O(PACKET_IN_IBUF[0]));
  IBUF \PACKET_IN_IBUF[10]_inst 
       (.I(PACKET_IN[10]),
        .O(PACKET_IN_IBUF[10]));
  IBUF \PACKET_IN_IBUF[11]_inst 
       (.I(PACKET_IN[11]),
        .O(PACKET_IN_IBUF[11]));
  IBUF \PACKET_IN_IBUF[12]_inst 
       (.I(PACKET_IN[12]),
        .O(PACKET_IN_IBUF[12]));
  IBUF \PACKET_IN_IBUF[13]_inst 
       (.I(PACKET_IN[13]),
        .O(PACKET_IN_IBUF[13]));
  IBUF \PACKET_IN_IBUF[14]_inst 
       (.I(PACKET_IN[14]),
        .O(PACKET_IN_IBUF[14]));
  IBUF \PACKET_IN_IBUF[15]_inst 
       (.I(PACKET_IN[15]),
        .O(PACKET_IN_IBUF[15]));
  IBUF \PACKET_IN_IBUF[16]_inst 
       (.I(PACKET_IN[16]),
        .O(PACKET_IN_IBUF[16]));
  IBUF \PACKET_IN_IBUF[17]_inst 
       (.I(PACKET_IN[17]),
        .O(PACKET_IN_IBUF[17]));
  IBUF \PACKET_IN_IBUF[18]_inst 
       (.I(PACKET_IN[18]),
        .O(PACKET_IN_IBUF[18]));
  IBUF \PACKET_IN_IBUF[19]_inst 
       (.I(PACKET_IN[19]),
        .O(PACKET_IN_IBUF[19]));
  IBUF \PACKET_IN_IBUF[1]_inst 
       (.I(PACKET_IN[1]),
        .O(PACKET_IN_IBUF[1]));
  IBUF \PACKET_IN_IBUF[20]_inst 
       (.I(PACKET_IN[20]),
        .O(PACKET_IN_IBUF[20]));
  IBUF \PACKET_IN_IBUF[21]_inst 
       (.I(PACKET_IN[21]),
        .O(PACKET_IN_IBUF[21]));
  IBUF \PACKET_IN_IBUF[22]_inst 
       (.I(PACKET_IN[22]),
        .O(PACKET_IN_IBUF[22]));
  IBUF \PACKET_IN_IBUF[23]_inst 
       (.I(PACKET_IN[23]),
        .O(PACKET_IN_IBUF[23]));
  IBUF \PACKET_IN_IBUF[24]_inst 
       (.I(PACKET_IN[24]),
        .O(PACKET_IN_IBUF[24]));
  IBUF \PACKET_IN_IBUF[25]_inst 
       (.I(PACKET_IN[25]),
        .O(PACKET_IN_IBUF[25]));
  IBUF \PACKET_IN_IBUF[26]_inst 
       (.I(PACKET_IN[26]),
        .O(PACKET_IN_IBUF[26]));
  IBUF \PACKET_IN_IBUF[27]_inst 
       (.I(PACKET_IN[27]),
        .O(PACKET_IN_IBUF[27]));
  IBUF \PACKET_IN_IBUF[28]_inst 
       (.I(PACKET_IN[28]),
        .O(PACKET_IN_IBUF[28]));
  IBUF \PACKET_IN_IBUF[29]_inst 
       (.I(PACKET_IN[29]),
        .O(PACKET_IN_IBUF[29]));
  IBUF \PACKET_IN_IBUF[2]_inst 
       (.I(PACKET_IN[2]),
        .O(PACKET_IN_IBUF[2]));
  IBUF \PACKET_IN_IBUF[30]_inst 
       (.I(PACKET_IN[30]),
        .O(PACKET_IN_IBUF[30]));
  IBUF \PACKET_IN_IBUF[31]_inst 
       (.I(PACKET_IN[31]),
        .O(PACKET_IN_IBUF[31]));
  IBUF \PACKET_IN_IBUF[32]_inst 
       (.I(PACKET_IN[32]),
        .O(PACKET_IN_IBUF[32]));
  IBUF \PACKET_IN_IBUF[33]_inst 
       (.I(PACKET_IN[33]),
        .O(PACKET_IN_IBUF[33]));
  IBUF \PACKET_IN_IBUF[34]_inst 
       (.I(PACKET_IN[34]),
        .O(PACKET_IN_IBUF[34]));
  IBUF \PACKET_IN_IBUF[35]_inst 
       (.I(PACKET_IN[35]),
        .O(PACKET_IN_IBUF[35]));
  IBUF \PACKET_IN_IBUF[36]_inst 
       (.I(PACKET_IN[36]),
        .O(PACKET_IN_IBUF[36]));
  IBUF \PACKET_IN_IBUF[37]_inst 
       (.I(PACKET_IN[37]),
        .O(PACKET_IN_IBUF[37]));
  IBUF \PACKET_IN_IBUF[3]_inst 
       (.I(PACKET_IN[3]),
        .O(PACKET_IN_IBUF[3]));
  IBUF \PACKET_IN_IBUF[4]_inst 
       (.I(PACKET_IN[4]),
        .O(PACKET_IN_IBUF[4]));
  IBUF \PACKET_IN_IBUF[5]_inst 
       (.I(PACKET_IN[5]),
        .O(PACKET_IN_IBUF[5]));
  IBUF \PACKET_IN_IBUF[6]_inst 
       (.I(PACKET_IN[6]),
        .O(PACKET_IN_IBUF[6]));
  IBUF \PACKET_IN_IBUF[7]_inst 
       (.I(PACKET_IN[7]),
        .O(PACKET_IN_IBUF[7]));
  IBUF \PACKET_IN_IBUF[8]_inst 
       (.I(PACKET_IN[8]),
        .O(PACKET_IN_IBUF[8]));
  IBUF \PACKET_IN_IBUF[9]_inst 
       (.I(PACKET_IN[9]),
        .O(PACKET_IN_IBUF[9]));
  OBUF \PACKET_OUT_OBUF[0]_inst 
       (.I(DL[0]),
        .O(PACKET_OUT[0]));
  OBUF \PACKET_OUT_OBUF[10]_inst 
       (.I(DL[10]),
        .O(PACKET_OUT[10]));
  OBUF \PACKET_OUT_OBUF[11]_inst 
       (.I(DL[11]),
        .O(PACKET_OUT[11]));
  OBUF \PACKET_OUT_OBUF[12]_inst 
       (.I(DL[12]),
        .O(PACKET_OUT[12]));
  OBUF \PACKET_OUT_OBUF[13]_inst 
       (.I(DL[13]),
        .O(PACKET_OUT[13]));
  OBUF \PACKET_OUT_OBUF[14]_inst 
       (.I(DL[14]),
        .O(PACKET_OUT[14]));
  OBUF \PACKET_OUT_OBUF[15]_inst 
       (.I(DL[15]),
        .O(PACKET_OUT[15]));
  OBUF \PACKET_OUT_OBUF[16]_inst 
       (.I(DL[16]),
        .O(PACKET_OUT[16]));
  OBUF \PACKET_OUT_OBUF[17]_inst 
       (.I(DL[17]),
        .O(PACKET_OUT[17]));
  OBUF \PACKET_OUT_OBUF[18]_inst 
       (.I(DL[18]),
        .O(PACKET_OUT[18]));
  OBUF \PACKET_OUT_OBUF[19]_inst 
       (.I(DL[19]),
        .O(PACKET_OUT[19]));
  OBUF \PACKET_OUT_OBUF[1]_inst 
       (.I(DL[1]),
        .O(PACKET_OUT[1]));
  OBUF \PACKET_OUT_OBUF[20]_inst 
       (.I(DL[20]),
        .O(PACKET_OUT[20]));
  OBUF \PACKET_OUT_OBUF[21]_inst 
       (.I(DL[21]),
        .O(PACKET_OUT[21]));
  OBUF \PACKET_OUT_OBUF[22]_inst 
       (.I(DL[22]),
        .O(PACKET_OUT[22]));
  OBUF \PACKET_OUT_OBUF[23]_inst 
       (.I(DL[23]),
        .O(PACKET_OUT[23]));
  OBUF \PACKET_OUT_OBUF[24]_inst 
       (.I(DL[24]),
        .O(PACKET_OUT[24]));
  OBUF \PACKET_OUT_OBUF[25]_inst 
       (.I(DL[25]),
        .O(PACKET_OUT[25]));
  OBUF \PACKET_OUT_OBUF[26]_inst 
       (.I(DL[26]),
        .O(PACKET_OUT[26]));
  OBUF \PACKET_OUT_OBUF[27]_inst 
       (.I(DL[27]),
        .O(PACKET_OUT[27]));
  OBUF \PACKET_OUT_OBUF[28]_inst 
       (.I(DL[28]),
        .O(PACKET_OUT[28]));
  OBUF \PACKET_OUT_OBUF[29]_inst 
       (.I(DL[29]),
        .O(PACKET_OUT[29]));
  OBUF \PACKET_OUT_OBUF[2]_inst 
       (.I(DL[2]),
        .O(PACKET_OUT[2]));
  OBUF \PACKET_OUT_OBUF[30]_inst 
       (.I(DL[30]),
        .O(PACKET_OUT[30]));
  OBUF \PACKET_OUT_OBUF[31]_inst 
       (.I(DL[31]),
        .O(PACKET_OUT[31]));
  OBUF \PACKET_OUT_OBUF[32]_inst 
       (.I(DL[32]),
        .O(PACKET_OUT[32]));
  OBUF \PACKET_OUT_OBUF[33]_inst 
       (.I(DL[33]),
        .O(PACKET_OUT[33]));
  OBUF \PACKET_OUT_OBUF[34]_inst 
       (.I(DL[34]),
        .O(PACKET_OUT[34]));
  OBUF \PACKET_OUT_OBUF[35]_inst 
       (.I(DL[35]),
        .O(PACKET_OUT[35]));
  OBUF \PACKET_OUT_OBUF[36]_inst 
       (.I(DL[36]),
        .O(PACKET_OUT[36]));
  OBUF \PACKET_OUT_OBUF[37]_inst 
       (.I(DL[37]),
        .O(PACKET_OUT[37]));
  OBUF \PACKET_OUT_OBUF[3]_inst 
       (.I(DL[3]),
        .O(PACKET_OUT[3]));
  OBUF \PACKET_OUT_OBUF[4]_inst 
       (.I(DL[4]),
        .O(PACKET_OUT[4]));
  OBUF \PACKET_OUT_OBUF[5]_inst 
       (.I(DL[5]),
        .O(PACKET_OUT[5]));
  OBUF \PACKET_OUT_OBUF[6]_inst 
       (.I(DL[6]),
        .O(PACKET_OUT[6]));
  OBUF \PACKET_OUT_OBUF[7]_inst 
       (.I(DL[7]),
        .O(PACKET_OUT[7]));
  OBUF \PACKET_OUT_OBUF[8]_inst 
       (.I(DL[8]),
        .O(PACKET_OUT[8]));
  OBUF \PACKET_OUT_OBUF[9]_inst 
       (.I(DL[9]),
        .O(PACKET_OUT[9]));
  (* ABSORB = "6'b111111" *) 
  (* ADD = "6'b000000" *) 
  (* ADDC = "6'b000001" *) 
  (* ADDGEN = "6'b101010" *) 
  (* AND = "6'b000100" *) 
  (* BC = "6'b010010" *) 
  (* BNC = "6'b010011" *) 
  (* BNZ = "6'b010001" *) 
  (* BNZL = "6'b011000" *) 
  (* BZ = "6'b010000" *) 
  (* BZL = "6'b011000" *) 
  (* CHGCOL = "6'b101001" *) 
  (* CHGDEST = "6'b110000" *) 
  (* DECGEN = "6'b101100" *) 
  (* DONT_TOUCH *) 
  (* LDM = "6'b100000" *) 
  (* MUL = "6'b000111" *) 
  (* OR = "6'b000101" *) 
  (* ROL = "6'b001010" *) 
  (* ROR = "6'b001011" *) 
  (* SHL = "6'b001000" *) 
  (* SHR = "6'b001001" *) 
  (* STM = "6'b100001" *) 
  (* SUB = "6'b000010" *) 
  (* SUBC = "6'b000011" *) 
  (* XOR = "6'b000110" *) 
  PS_Stage PS
       (.Ack_in(FP_Ack_out),
        .Ack_out(PS_Ack_out),
        .DEL(PS_DEL),
        .MR(MR_IBUF),
        .PACKET_IN(MMRAM_PACKET_OUT),
        .PACKET_OUT(PS_PACKET_OUT),
        .Send_in(MMRAM_Send_out),
        .Send_out(PS_Send_out));
  IBUF Send_in_IBUF_inst
       (.I(Send_in),
        .O(Send_in_IBUF));
  OBUF Send_out_OBUF_inst
       (.I(Send_out_OBUF),
        .O(Send_out));
  (* DONT_TOUCH *) 
  C c
       (.Ack_in(Ack_in_IBUF),
        .Ack_out(C_Ack_out),
        .CP(CP),
        .MR(MR_IBUF),
        .Send_in(B_Send_out_EXTERNAL),
        .Send_out(Send_out_OBUF));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(M_Ack_out));
endmodule

(* dont_touch = "true" *) 
module MA_Stage
   (WRITE_EN,
    LOAD_FLG,
    Send_in,
    Ack_in,
    MR,
    WRITE_DATA,
    PACKET_IN,
    Send_out,
    Ack_out,
    PACKET_OUT);
  input WRITE_EN;
  input LOAD_FLG;
  input Send_in;
  input Ack_in;
  input MR;
  input [15:0]WRITE_DATA;
  input [39:0]PACKET_IN;
  output Send_out;
  output Ack_out;
  output [39:0]PACKET_OUT;

  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire [40:0]DL;
  (* DONT_TOUCH *) wire [15:0]LOAD_DATA;
  wire LOAD_FLG;
  (* DONT_TOUCH *) wire [39:0]MERGE_DATA;
  wire MR;
  (* DONT_TOUCH *) wire [23:0]OTHER_DATA;
  wire [39:16]\^PACKET_IN ;
  wire [39:0]PACKET_OUT;
  (* DONT_TOUCH *) wire [16:0]ResultData;
  wire Send_in;
  wire Send_out;
  wire [15:0]WRITE_DATA;
  wire WRITE_EN;

  assign ResultData[15:0] = PACKET_IN[15:0];
  assign \^PACKET_IN [39:16] = PACKET_IN[39:16];
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst
       (.I0(DL[39]),
        .O(OTHER_DATA[23]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__0
       (.I0(DL[38]),
        .O(OTHER_DATA[22]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__1
       (.I0(DL[37]),
        .O(OTHER_DATA[21]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__10
       (.I0(DL[28]),
        .O(OTHER_DATA[12]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__11
       (.I0(DL[27]),
        .O(OTHER_DATA[11]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__12
       (.I0(DL[26]),
        .O(OTHER_DATA[10]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__13
       (.I0(DL[25]),
        .O(OTHER_DATA[9]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__14
       (.I0(DL[24]),
        .O(OTHER_DATA[8]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__15
       (.I0(DL[23]),
        .O(OTHER_DATA[7]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__16
       (.I0(DL[22]),
        .O(OTHER_DATA[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__17
       (.I0(DL[21]),
        .O(OTHER_DATA[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__18
       (.I0(DL[20]),
        .O(OTHER_DATA[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__19
       (.I0(DL[19]),
        .O(OTHER_DATA[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__2
       (.I0(DL[36]),
        .O(OTHER_DATA[20]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__20
       (.I0(DL[18]),
        .O(OTHER_DATA[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__21
       (.I0(DL[17]),
        .O(OTHER_DATA[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__22
       (.I0(DL[16]),
        .O(OTHER_DATA[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__3
       (.I0(DL[35]),
        .O(OTHER_DATA[19]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__4
       (.I0(DL[34]),
        .O(OTHER_DATA[18]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__5
       (.I0(DL[33]),
        .O(OTHER_DATA[17]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__6
       (.I0(DL[32]),
        .O(OTHER_DATA[16]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__7
       (.I0(DL[31]),
        .O(OTHER_DATA[15]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__8
       (.I0(DL[30]),
        .O(OTHER_DATA[14]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__9
       (.I0(DL[29]),
        .O(OTHER_DATA[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[38] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [38]),
        .Q(DL[38]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[39] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [39]),
        .Q(DL[39]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[40] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(LOAD_FLG),
        .Q(DL[40]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[9]),
        .Q(DL[9]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst
       (.I0(LOAD_DATA[15]),
        .O(MERGE_DATA[15]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__0
       (.I0(LOAD_DATA[14]),
        .O(MERGE_DATA[14]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__1
       (.I0(LOAD_DATA[13]),
        .O(MERGE_DATA[13]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__10
       (.I0(LOAD_DATA[4]),
        .O(MERGE_DATA[4]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__11
       (.I0(LOAD_DATA[3]),
        .O(MERGE_DATA[3]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__12
       (.I0(LOAD_DATA[2]),
        .O(MERGE_DATA[2]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__13
       (.I0(LOAD_DATA[1]),
        .O(MERGE_DATA[1]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__14
       (.I0(LOAD_DATA[0]),
        .O(MERGE_DATA[0]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__2
       (.I0(LOAD_DATA[12]),
        .O(MERGE_DATA[12]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__3
       (.I0(LOAD_DATA[11]),
        .O(MERGE_DATA[11]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__4
       (.I0(LOAD_DATA[10]),
        .O(MERGE_DATA[10]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__5
       (.I0(LOAD_DATA[9]),
        .O(MERGE_DATA[9]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__6
       (.I0(LOAD_DATA[8]),
        .O(MERGE_DATA[8]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__7
       (.I0(LOAD_DATA[7]),
        .O(MERGE_DATA[7]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__8
       (.I0(LOAD_DATA[6]),
        .O(MERGE_DATA[6]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__9
       (.I0(LOAD_DATA[5]),
        .O(MERGE_DATA[5]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst
       (.I0(OTHER_DATA[23]),
        .O(MERGE_DATA[39]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__0
       (.I0(OTHER_DATA[22]),
        .O(MERGE_DATA[38]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__1
       (.I0(OTHER_DATA[21]),
        .O(MERGE_DATA[37]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__10
       (.I0(OTHER_DATA[12]),
        .O(MERGE_DATA[28]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__11
       (.I0(OTHER_DATA[11]),
        .O(MERGE_DATA[27]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__12
       (.I0(OTHER_DATA[10]),
        .O(MERGE_DATA[26]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__13
       (.I0(OTHER_DATA[9]),
        .O(MERGE_DATA[25]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__14
       (.I0(OTHER_DATA[8]),
        .O(MERGE_DATA[24]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__15
       (.I0(OTHER_DATA[7]),
        .O(MERGE_DATA[23]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__16
       (.I0(OTHER_DATA[6]),
        .O(MERGE_DATA[22]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__17
       (.I0(OTHER_DATA[5]),
        .O(MERGE_DATA[21]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__18
       (.I0(OTHER_DATA[4]),
        .O(MERGE_DATA[20]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__19
       (.I0(OTHER_DATA[3]),
        .O(MERGE_DATA[19]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__2
       (.I0(OTHER_DATA[20]),
        .O(MERGE_DATA[36]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__20
       (.I0(OTHER_DATA[2]),
        .O(MERGE_DATA[18]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__21
       (.I0(OTHER_DATA[1]),
        .O(MERGE_DATA[17]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__22
       (.I0(OTHER_DATA[0]),
        .O(MERGE_DATA[16]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__3
       (.I0(OTHER_DATA[19]),
        .O(MERGE_DATA[35]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__4
       (.I0(OTHER_DATA[18]),
        .O(MERGE_DATA[34]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__5
       (.I0(OTHER_DATA[17]),
        .O(MERGE_DATA[33]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__6
       (.I0(OTHER_DATA[16]),
        .O(MERGE_DATA[32]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__7
       (.I0(OTHER_DATA[15]),
        .O(MERGE_DATA[31]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__8
       (.I0(OTHER_DATA[14]),
        .O(MERGE_DATA[30]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__9
       (.I0(OTHER_DATA[13]),
        .O(MERGE_DATA[29]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[0]_INST_0 
       (.I0(MERGE_DATA[0]),
        .I1(DL[40]),
        .I2(DL[0]),
        .O(PACKET_OUT[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[10]_INST_0 
       (.I0(MERGE_DATA[10]),
        .I1(DL[40]),
        .I2(DL[10]),
        .O(PACKET_OUT[10]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[11]_INST_0 
       (.I0(MERGE_DATA[11]),
        .I1(DL[40]),
        .I2(DL[11]),
        .O(PACKET_OUT[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[12]_INST_0 
       (.I0(MERGE_DATA[12]),
        .I1(DL[40]),
        .I2(DL[12]),
        .O(PACKET_OUT[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[13]_INST_0 
       (.I0(MERGE_DATA[13]),
        .I1(DL[40]),
        .I2(DL[13]),
        .O(PACKET_OUT[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[14]_INST_0 
       (.I0(MERGE_DATA[14]),
        .I1(DL[40]),
        .I2(DL[14]),
        .O(PACKET_OUT[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[15]_INST_0 
       (.I0(MERGE_DATA[15]),
        .I1(DL[40]),
        .I2(DL[15]),
        .O(PACKET_OUT[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0 
       (.I0(MERGE_DATA[16]),
        .I1(DL[40]),
        .I2(OTHER_DATA[0]),
        .O(PACKET_OUT[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[17]_INST_0 
       (.I0(MERGE_DATA[17]),
        .I1(DL[40]),
        .I2(OTHER_DATA[1]),
        .O(PACKET_OUT[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[18]_INST_0 
       (.I0(MERGE_DATA[18]),
        .I1(DL[40]),
        .I2(OTHER_DATA[2]),
        .O(PACKET_OUT[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[19]_INST_0 
       (.I0(MERGE_DATA[19]),
        .I1(DL[40]),
        .I2(OTHER_DATA[3]),
        .O(PACKET_OUT[19]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[1]_INST_0 
       (.I0(MERGE_DATA[1]),
        .I1(DL[40]),
        .I2(DL[1]),
        .O(PACKET_OUT[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[20]_INST_0 
       (.I0(MERGE_DATA[20]),
        .I1(DL[40]),
        .I2(OTHER_DATA[4]),
        .O(PACKET_OUT[20]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[21]_INST_0 
       (.I0(MERGE_DATA[21]),
        .I1(DL[40]),
        .I2(OTHER_DATA[5]),
        .O(PACKET_OUT[21]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[22]_INST_0 
       (.I0(MERGE_DATA[22]),
        .I1(DL[40]),
        .I2(OTHER_DATA[6]),
        .O(PACKET_OUT[22]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[23]_INST_0 
       (.I0(MERGE_DATA[23]),
        .I1(DL[40]),
        .I2(OTHER_DATA[7]),
        .O(PACKET_OUT[23]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[24]_INST_0 
       (.I0(MERGE_DATA[24]),
        .I1(DL[40]),
        .I2(OTHER_DATA[8]),
        .O(PACKET_OUT[24]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[25]_INST_0 
       (.I0(MERGE_DATA[25]),
        .I1(DL[40]),
        .I2(OTHER_DATA[9]),
        .O(PACKET_OUT[25]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[26]_INST_0 
       (.I0(MERGE_DATA[26]),
        .I1(DL[40]),
        .I2(OTHER_DATA[10]),
        .O(PACKET_OUT[26]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[27]_INST_0 
       (.I0(MERGE_DATA[27]),
        .I1(DL[40]),
        .I2(OTHER_DATA[11]),
        .O(PACKET_OUT[27]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[28]_INST_0 
       (.I0(MERGE_DATA[28]),
        .I1(DL[40]),
        .I2(OTHER_DATA[12]),
        .O(PACKET_OUT[28]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[29]_INST_0 
       (.I0(MERGE_DATA[29]),
        .I1(DL[40]),
        .I2(OTHER_DATA[13]),
        .O(PACKET_OUT[29]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[2]_INST_0 
       (.I0(MERGE_DATA[2]),
        .I1(DL[40]),
        .I2(DL[2]),
        .O(PACKET_OUT[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[30]_INST_0 
       (.I0(MERGE_DATA[30]),
        .I1(DL[40]),
        .I2(OTHER_DATA[14]),
        .O(PACKET_OUT[30]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[31]_INST_0 
       (.I0(MERGE_DATA[31]),
        .I1(DL[40]),
        .I2(OTHER_DATA[15]),
        .O(PACKET_OUT[31]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[32]_INST_0 
       (.I0(MERGE_DATA[32]),
        .I1(DL[40]),
        .I2(OTHER_DATA[16]),
        .O(PACKET_OUT[32]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[33]_INST_0 
       (.I0(MERGE_DATA[33]),
        .I1(DL[40]),
        .I2(OTHER_DATA[17]),
        .O(PACKET_OUT[33]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[34]_INST_0 
       (.I0(MERGE_DATA[34]),
        .I1(DL[40]),
        .I2(OTHER_DATA[18]),
        .O(PACKET_OUT[34]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[35]_INST_0 
       (.I0(MERGE_DATA[35]),
        .I1(DL[40]),
        .I2(OTHER_DATA[19]),
        .O(PACKET_OUT[35]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[36]_INST_0 
       (.I0(MERGE_DATA[36]),
        .I1(DL[40]),
        .I2(OTHER_DATA[20]),
        .O(PACKET_OUT[36]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[37]_INST_0 
       (.I0(MERGE_DATA[37]),
        .I1(DL[40]),
        .I2(OTHER_DATA[21]),
        .O(PACKET_OUT[37]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[38]_INST_0 
       (.I0(MERGE_DATA[38]),
        .I1(DL[40]),
        .I2(OTHER_DATA[22]),
        .O(PACKET_OUT[38]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[39]_INST_0 
       (.I0(MERGE_DATA[39]),
        .I1(DL[40]),
        .I2(OTHER_DATA[23]),
        .O(PACKET_OUT[39]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[3]_INST_0 
       (.I0(MERGE_DATA[3]),
        .I1(DL[40]),
        .I2(DL[3]),
        .O(PACKET_OUT[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[4]_INST_0 
       (.I0(MERGE_DATA[4]),
        .I1(DL[40]),
        .I2(DL[4]),
        .O(PACKET_OUT[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[5]_INST_0 
       (.I0(MERGE_DATA[5]),
        .I1(DL[40]),
        .I2(DL[5]),
        .O(PACKET_OUT[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[6]_INST_0 
       (.I0(MERGE_DATA[6]),
        .I1(DL[40]),
        .I2(DL[6]),
        .O(PACKET_OUT[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[7]_INST_0 
       (.I0(MERGE_DATA[7]),
        .I1(DL[40]),
        .I2(DL[7]),
        .O(PACKET_OUT[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[8]_INST_0 
       (.I0(MERGE_DATA[8]),
        .I1(DL[40]),
        .I2(DL[8]),
        .O(PACKET_OUT[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[9]_INST_0 
       (.I0(MERGE_DATA[9]),
        .I1(DL[40]),
        .I2(DL[9]),
        .O(PACKET_OUT[9]));
  (* DONT_TOUCH *) 
  C__3 c
       (.Ack_in(Ack_in),
        .Ack_out(Ack_out),
        .CP(CP),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(Send_out));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/DMEM/DMEM.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  DMEM dmem
       (.addra(ResultData[4:0]),
        .clka(CP),
        .dina(WRITE_DATA),
        .douta(LOAD_DATA),
        .wea(WRITE_EN));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(ResultData[16]));
endmodule

(* dont_touch = "true" *) 
module MMCAM_Stage
   (MR,
    Send_in,
    Ack_in,
    PACKET_IN,
    PACKET_OUT,
    WR_E,
    DEL,
    Ack_out,
    Send_out,
    ADDR);
  input MR;
  input Send_in;
  input Ack_in;
  input [37:0]PACKET_IN;
  output [37:0]PACKET_OUT;
  output WR_E;
  output DEL;
  output Ack_out;
  output Send_out;
  output [5:0]ADDR;

  wire [5:0]ADDR;
  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  wire DEL;
  (* DONT_TOUCH *) wire [37:0]DL;
  (* DONT_TOUCH *) wire [19:0]EN;
  (* DONT_TOUCH *) wire [19:0]FIRE;
  wire MR;
  wire [37:0]PACKET_IN;
  wire Send_in;
  wire Send_out;
  (* DONT_TOUCH *) wire [19:0]VALID;
  wire WR_E;

  assign PACKET_OUT[37:0] = DL;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  C__1 c
       (.Ack_in(Ack_in),
        .Ack_out(Ack_out),
        .CP(CP),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(Send_out));
  (* DONT_TOUCH *) 
  ENTRY_FD__1 \entry_fd_loop[0].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[0]),
        .FIRE(FIRE[0]),
        .MR(MR),
        .VALID(VALID[0]));
  (* DONT_TOUCH *) 
  ENTRY_FD__11 \entry_fd_loop[10].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[10]),
        .FIRE(FIRE[10]),
        .MR(MR),
        .VALID(VALID[10]));
  (* DONT_TOUCH *) 
  ENTRY_FD__12 \entry_fd_loop[11].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[11]),
        .FIRE(FIRE[11]),
        .MR(MR),
        .VALID(VALID[11]));
  (* DONT_TOUCH *) 
  ENTRY_FD__13 \entry_fd_loop[12].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[12]),
        .FIRE(FIRE[12]),
        .MR(MR),
        .VALID(VALID[12]));
  (* DONT_TOUCH *) 
  ENTRY_FD__14 \entry_fd_loop[13].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[13]),
        .FIRE(FIRE[13]),
        .MR(MR),
        .VALID(VALID[13]));
  (* DONT_TOUCH *) 
  ENTRY_FD__15 \entry_fd_loop[14].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[14]),
        .FIRE(FIRE[14]),
        .MR(MR),
        .VALID(VALID[14]));
  (* DONT_TOUCH *) 
  ENTRY_FD__16 \entry_fd_loop[15].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[15]),
        .FIRE(FIRE[15]),
        .MR(MR),
        .VALID(VALID[15]));
  (* DONT_TOUCH *) 
  ENTRY_FD__17 \entry_fd_loop[16].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[16]),
        .FIRE(FIRE[16]),
        .MR(MR),
        .VALID(VALID[16]));
  (* DONT_TOUCH *) 
  ENTRY_FD__18 \entry_fd_loop[17].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[17]),
        .FIRE(FIRE[17]),
        .MR(MR),
        .VALID(VALID[17]));
  (* DONT_TOUCH *) 
  ENTRY_FD__19 \entry_fd_loop[18].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[18]),
        .FIRE(FIRE[18]),
        .MR(MR),
        .VALID(VALID[18]));
  (* DONT_TOUCH *) 
  ENTRY_FD \entry_fd_loop[19].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[19]),
        .FIRE(FIRE[19]),
        .MR(MR),
        .VALID(VALID[19]));
  (* DONT_TOUCH *) 
  ENTRY_FD__2 \entry_fd_loop[1].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[1]),
        .FIRE(FIRE[1]),
        .MR(MR),
        .VALID(VALID[1]));
  (* DONT_TOUCH *) 
  ENTRY_FD__3 \entry_fd_loop[2].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[2]),
        .FIRE(FIRE[2]),
        .MR(MR),
        .VALID(VALID[2]));
  (* DONT_TOUCH *) 
  ENTRY_FD__4 \entry_fd_loop[3].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[3]),
        .FIRE(FIRE[3]),
        .MR(MR),
        .VALID(VALID[3]));
  (* DONT_TOUCH *) 
  ENTRY_FD__5 \entry_fd_loop[4].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[4]),
        .FIRE(FIRE[4]),
        .MR(MR),
        .VALID(VALID[4]));
  (* DONT_TOUCH *) 
  ENTRY_FD__6 \entry_fd_loop[5].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[5]),
        .FIRE(FIRE[5]),
        .MR(MR),
        .VALID(VALID[5]));
  (* DONT_TOUCH *) 
  ENTRY_FD__7 \entry_fd_loop[6].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[6]),
        .FIRE(FIRE[6]),
        .MR(MR),
        .VALID(VALID[6]));
  (* DONT_TOUCH *) 
  ENTRY_FD__8 \entry_fd_loop[7].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[7]),
        .FIRE(FIRE[7]),
        .MR(MR),
        .VALID(VALID[7]));
  (* DONT_TOUCH *) 
  ENTRY_FD__9 \entry_fd_loop[8].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[8]),
        .FIRE(FIRE[8]),
        .MR(MR),
        .VALID(VALID[8]));
  (* DONT_TOUCH *) 
  ENTRY_FD__10 \entry_fd_loop[9].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[9]),
        .FIRE(FIRE[9]),
        .MR(MR),
        .VALID(VALID[9]));
  (* DONT_TOUCH *) 
  OR_AM_MA oam
       (.ADDR(ADDR),
        .CP(CP),
        .DEL(DEL),
        .EN(EN),
        .FIRE(FIRE),
        .MF(PACKET_IN[18]),
        .MR(MR),
        .VALID(VALID),
        .WR_E(WR_E));
endmodule

(* CHECK_LICENSE_TYPE = "MMRAM,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module MMRAM
   (clka,
    wea,
    addra,
    dina,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [19:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [19:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [19:0]dina;
  wire [19:0]douta;
  wire [0:0]wea;
  wire NLW_U0_clkb_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_ena_UNCONNECTED;
  wire NLW_U0_enb_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [4:0]NLW_U0_addrb_UNCONNECTED;
  wire [19:0]NLW_U0_dinb_UNCONNECTED;
  wire [19:19]NLW_U0_douta_UNCONNECTED;
  wire [19:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [19:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [19:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_web_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     3.03925 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "MMRAM.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "0" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "20" *) 
  (* C_READ_WIDTH_B = "20" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "20" *) 
  (* C_WRITE_WIDTH_B = "20" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  MMRAM_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb(NLW_U0_addrb_UNCONNECTED[4:0]),
        .clka(clka),
        .clkb(NLW_U0_clkb_UNCONNECTED),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(dina),
        .dinb(NLW_U0_dinb_UNCONNECTED[19:0]),
        .douta({NLW_U0_douta_UNCONNECTED[19],douta[18:0]}),
        .doutb(NLW_U0_doutb_UNCONNECTED[19:0]),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(NLW_U0_ena_UNCONNECTED),
        .enb(NLW_U0_enb_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[19:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[19:0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(wea),
        .web(NLW_U0_web_UNCONNECTED[0]));
endmodule

(* dont_touch = "true" *) 
module MMRAM_Stage
   (WR_E,
    DEL,
    MR,
    Send_in,
    Ack_in,
    ADDR,
    PACKET_IN,
    PACKET_OUT,
    Send_out,
    Ack_out);
  input WR_E;
  input DEL;
  input MR;
  input Send_in;
  input Ack_in;
  input [5:0]ADDR;
  input [37:0]PACKET_IN;
  output [51:0]PACKET_OUT;
  output Send_out;
  output Ack_out;

  wire [5:0]ADDR;
  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire [15:0]CST_DATA;
  (* DONT_TOUCH *) wire [19:0]DATA_IN;
  (* DONT_TOUCH *) wire [19:0]DATA_OUT;
  wire DEL;
  (* DONT_TOUCH *) wire [37:0]DL;
  (* DONT_TOUCH *) wire [53:0]MERGE2_OUT;
  (* DONT_TOUCH *) wire MF;
  wire MR;
  (* DONT_TOUCH *) wire [53:0]MUX_OUT;
  wire [37:27]\^PACKET_IN ;
  wire [31:0]\^PACKET_OUT ;
  wire Send_in;
  wire Send_out;
  wire WR_E;
  (* DONT_TOUCH *) wire [6:0]dest;
  wire NLW_MERGE1_OUT_inferred_i_1_O_UNCONNECTED;
  wire NLW_MERGE1_OUT_inferred_i_2_O_UNCONNECTED;
  wire NLW_MERGE1_OUT_inferred_i_3_O_UNCONNECTED;

  assign DATA_IN = PACKET_IN[19:0];
  assign PACKET_OUT[51:34] = MUX_OUT[53:36];
  assign PACKET_OUT[33:32] = MUX_OUT[33:32];
  assign PACKET_OUT[31:0] = \^PACKET_OUT [31:0];
  assign \^PACKET_IN [37:27] = PACKET_IN[37:27];
  assign dest = PACKET_IN[26:20];
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst
       (.I0(CST_DATA[15]),
        .O(MERGE2_OUT[15]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__0
       (.I0(CST_DATA[14]),
        .O(MERGE2_OUT[14]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__1
       (.I0(CST_DATA[13]),
        .O(MERGE2_OUT[13]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__10
       (.I0(CST_DATA[4]),
        .O(MERGE2_OUT[4]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__11
       (.I0(CST_DATA[3]),
        .O(MERGE2_OUT[3]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__12
       (.I0(CST_DATA[2]),
        .O(MERGE2_OUT[2]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__13
       (.I0(CST_DATA[1]),
        .O(MERGE2_OUT[1]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__14
       (.I0(CST_DATA[0]),
        .O(MERGE2_OUT[0]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__2
       (.I0(CST_DATA[12]),
        .O(MERGE2_OUT[12]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__3
       (.I0(CST_DATA[11]),
        .O(MERGE2_OUT[11]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__4
       (.I0(CST_DATA[10]),
        .O(MERGE2_OUT[10]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__5
       (.I0(CST_DATA[9]),
        .O(MERGE2_OUT[9]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__6
       (.I0(CST_DATA[8]),
        .O(MERGE2_OUT[8]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__7
       (.I0(CST_DATA[7]),
        .O(MERGE2_OUT[7]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__8
       (.I0(CST_DATA[6]),
        .O(MERGE2_OUT[6]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__9
       (.I0(CST_DATA[5]),
        .O(MERGE2_OUT[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst
       (.I0(DL[37]),
        .O(MERGE2_OUT[53]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__0
       (.I0(DL[36]),
        .O(MERGE2_OUT[52]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__1
       (.I0(DL[35]),
        .O(MERGE2_OUT[51]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__10
       (.I0(DL[26]),
        .O(MERGE2_OUT[42]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__11
       (.I0(DL[25]),
        .O(MERGE2_OUT[41]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__12
       (.I0(DL[24]),
        .O(MERGE2_OUT[40]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__13
       (.I0(DL[23]),
        .O(MERGE2_OUT[39]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__14
       (.I0(DL[22]),
        .O(MERGE2_OUT[38]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__15
       (.I0(DL[21]),
        .O(MERGE2_OUT[37]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__16
       (.I0(DL[20]),
        .O(MERGE2_OUT[36]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__17
       (.I0(DL[19]),
        .O(MERGE2_OUT[35]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__18
       (.I0(DL[18]),
        .O(MERGE2_OUT[34]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__19
       (.I0(DL[17]),
        .O(MERGE2_OUT[33]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__2
       (.I0(DL[34]),
        .O(MERGE2_OUT[50]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__20
       (.I0(DL[16]),
        .O(MERGE2_OUT[32]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__21
       (.I0(DL[15]),
        .O(MERGE2_OUT[31]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__22
       (.I0(DL[14]),
        .O(MERGE2_OUT[30]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__23
       (.I0(DL[13]),
        .O(MERGE2_OUT[29]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__24
       (.I0(DL[12]),
        .O(MERGE2_OUT[28]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__25
       (.I0(DL[11]),
        .O(MERGE2_OUT[27]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__26
       (.I0(DL[10]),
        .O(MERGE2_OUT[26]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__27
       (.I0(DL[9]),
        .O(MERGE2_OUT[25]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__28
       (.I0(DL[8]),
        .O(MERGE2_OUT[24]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__29
       (.I0(DL[7]),
        .O(MERGE2_OUT[23]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__3
       (.I0(DL[33]),
        .O(MERGE2_OUT[49]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__30
       (.I0(DL[6]),
        .O(MERGE2_OUT[22]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__31
       (.I0(DL[5]),
        .O(MERGE2_OUT[21]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__32
       (.I0(DL[4]),
        .O(MERGE2_OUT[20]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__33
       (.I0(DL[3]),
        .O(MERGE2_OUT[19]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__34
       (.I0(DL[2]),
        .O(MERGE2_OUT[18]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__35
       (.I0(DL[1]),
        .O(MERGE2_OUT[17]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__36
       (.I0(DL[0]),
        .O(MERGE2_OUT[16]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__4
       (.I0(DL[32]),
        .O(MERGE2_OUT[48]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__5
       (.I0(DL[31]),
        .O(MERGE2_OUT[47]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__6
       (.I0(DL[30]),
        .O(MERGE2_OUT[46]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__7
       (.I0(DL[29]),
        .O(MERGE2_OUT[45]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__8
       (.I0(DL[28]),
        .O(MERGE2_OUT[44]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__9
       (.I0(DL[27]),
        .O(MERGE2_OUT[43]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[0]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[1]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[2]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[3]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[4]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[5]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[6]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[9]),
        .Q(DL[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    MERGE1_OUT_inferred_i_1
       (.I0(MERGE2_OUT[34]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[18]),
        .O(NLW_MERGE1_OUT_inferred_i_1_O_UNCONNECTED));
  LUT3 #(
    .INIT(8'hB8)) 
    MERGE1_OUT_inferred_i_2
       (.I0(MERGE2_OUT[33]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[17]),
        .O(NLW_MERGE1_OUT_inferred_i_2_O_UNCONNECTED));
  LUT3 #(
    .INIT(8'hB8)) 
    MERGE1_OUT_inferred_i_3
       (.I0(MERGE2_OUT[32]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[16]),
        .O(NLW_MERGE1_OUT_inferred_i_3_O_UNCONNECTED));
  LUT1 #(
    .INIT(2'h2)) 
    MF_inst
       (.I0(MERGE2_OUT[34]),
        .O(MF));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_1
       (.I0(MERGE2_OUT[53]),
        .I1(MERGE2_OUT[53]),
        .I2(MF),
        .O(MUX_OUT[53]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_10
       (.I0(MERGE2_OUT[44]),
        .I1(MERGE2_OUT[44]),
        .I2(MF),
        .O(MUX_OUT[44]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_11
       (.I0(MERGE2_OUT[43]),
        .I1(MERGE2_OUT[43]),
        .I2(MF),
        .O(MUX_OUT[43]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_12
       (.I0(MERGE2_OUT[42]),
        .I1(MERGE2_OUT[42]),
        .I2(MF),
        .O(MUX_OUT[42]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_13
       (.I0(MERGE2_OUT[41]),
        .I1(MERGE2_OUT[41]),
        .I2(MF),
        .O(MUX_OUT[41]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_14
       (.I0(MERGE2_OUT[40]),
        .I1(MERGE2_OUT[40]),
        .I2(MF),
        .O(MUX_OUT[40]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_15
       (.I0(MERGE2_OUT[39]),
        .I1(MERGE2_OUT[39]),
        .I2(MF),
        .O(MUX_OUT[39]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_16
       (.I0(MERGE2_OUT[38]),
        .I1(MERGE2_OUT[38]),
        .I2(MF),
        .O(MUX_OUT[38]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_17
       (.I0(MERGE2_OUT[37]),
        .I1(MERGE2_OUT[37]),
        .I2(MF),
        .O(MUX_OUT[37]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_18
       (.I0(MERGE2_OUT[36]),
        .I1(MERGE2_OUT[36]),
        .I2(MF),
        .O(MUX_OUT[36]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_19
       (.I0(MERGE2_OUT[35]),
        .I1(MERGE2_OUT[35]),
        .I2(MF),
        .O(MUX_OUT[35]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_2
       (.I0(MERGE2_OUT[52]),
        .I1(MERGE2_OUT[52]),
        .I2(MF),
        .O(MUX_OUT[52]));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    MUX_OUT_inferred_i_20
       (.I0(MERGE2_OUT[34]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[18]),
        .I3(MERGE2_OUT[34]),
        .I4(MF),
        .O(MUX_OUT[34]));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    MUX_OUT_inferred_i_21
       (.I0(MERGE2_OUT[33]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[17]),
        .I3(MERGE2_OUT[33]),
        .I4(MF),
        .O(MUX_OUT[33]));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    MUX_OUT_inferred_i_22
       (.I0(MERGE2_OUT[32]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[16]),
        .I3(MERGE2_OUT[32]),
        .I4(MF),
        .O(MUX_OUT[32]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_23
       (.I0(MERGE2_OUT[31]),
        .I1(MERGE2_OUT[31]),
        .I2(MF),
        .O(MUX_OUT[31]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_24
       (.I0(MERGE2_OUT[30]),
        .I1(MERGE2_OUT[30]),
        .I2(MF),
        .O(MUX_OUT[30]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_25
       (.I0(MERGE2_OUT[29]),
        .I1(MERGE2_OUT[29]),
        .I2(MF),
        .O(MUX_OUT[29]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_26
       (.I0(MERGE2_OUT[28]),
        .I1(MERGE2_OUT[28]),
        .I2(MF),
        .O(MUX_OUT[28]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_27
       (.I0(MERGE2_OUT[27]),
        .I1(MERGE2_OUT[27]),
        .I2(MF),
        .O(MUX_OUT[27]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_28
       (.I0(MERGE2_OUT[26]),
        .I1(MERGE2_OUT[26]),
        .I2(MF),
        .O(MUX_OUT[26]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_29
       (.I0(MERGE2_OUT[25]),
        .I1(MERGE2_OUT[25]),
        .I2(MF),
        .O(MUX_OUT[25]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_3
       (.I0(MERGE2_OUT[51]),
        .I1(MERGE2_OUT[51]),
        .I2(MF),
        .O(MUX_OUT[51]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_30
       (.I0(MERGE2_OUT[24]),
        .I1(MERGE2_OUT[24]),
        .I2(MF),
        .O(MUX_OUT[24]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_31
       (.I0(MERGE2_OUT[23]),
        .I1(MERGE2_OUT[23]),
        .I2(MF),
        .O(MUX_OUT[23]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_32
       (.I0(MERGE2_OUT[22]),
        .I1(MERGE2_OUT[22]),
        .I2(MF),
        .O(MUX_OUT[22]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_33
       (.I0(MERGE2_OUT[21]),
        .I1(MERGE2_OUT[21]),
        .I2(MF),
        .O(MUX_OUT[21]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_34
       (.I0(MERGE2_OUT[20]),
        .I1(MERGE2_OUT[20]),
        .I2(MF),
        .O(MUX_OUT[20]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_35
       (.I0(MERGE2_OUT[19]),
        .I1(MERGE2_OUT[19]),
        .I2(MF),
        .O(MUX_OUT[19]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_36
       (.I0(MERGE2_OUT[18]),
        .I1(MERGE2_OUT[18]),
        .I2(MF),
        .O(MUX_OUT[18]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_37
       (.I0(MERGE2_OUT[17]),
        .I1(MERGE2_OUT[17]),
        .I2(MF),
        .O(MUX_OUT[17]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_38
       (.I0(MERGE2_OUT[16]),
        .I1(MERGE2_OUT[16]),
        .I2(MF),
        .O(MUX_OUT[16]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_39
       (.I0(DATA_OUT[15]),
        .I1(MERGE2_OUT[15]),
        .I2(MF),
        .O(MUX_OUT[15]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_4
       (.I0(MERGE2_OUT[50]),
        .I1(MERGE2_OUT[50]),
        .I2(MF),
        .O(MUX_OUT[50]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_40
       (.I0(DATA_OUT[14]),
        .I1(MERGE2_OUT[14]),
        .I2(MF),
        .O(MUX_OUT[14]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_41
       (.I0(DATA_OUT[13]),
        .I1(MERGE2_OUT[13]),
        .I2(MF),
        .O(MUX_OUT[13]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_42
       (.I0(DATA_OUT[12]),
        .I1(MERGE2_OUT[12]),
        .I2(MF),
        .O(MUX_OUT[12]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_43
       (.I0(DATA_OUT[11]),
        .I1(MERGE2_OUT[11]),
        .I2(MF),
        .O(MUX_OUT[11]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_44
       (.I0(DATA_OUT[10]),
        .I1(MERGE2_OUT[10]),
        .I2(MF),
        .O(MUX_OUT[10]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_45
       (.I0(DATA_OUT[9]),
        .I1(MERGE2_OUT[9]),
        .I2(MF),
        .O(MUX_OUT[9]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_46
       (.I0(DATA_OUT[8]),
        .I1(MERGE2_OUT[8]),
        .I2(MF),
        .O(MUX_OUT[8]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_47
       (.I0(DATA_OUT[7]),
        .I1(MERGE2_OUT[7]),
        .I2(MF),
        .O(MUX_OUT[7]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_48
       (.I0(DATA_OUT[6]),
        .I1(MERGE2_OUT[6]),
        .I2(MF),
        .O(MUX_OUT[6]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_49
       (.I0(DATA_OUT[5]),
        .I1(MERGE2_OUT[5]),
        .I2(MF),
        .O(MUX_OUT[5]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_5
       (.I0(MERGE2_OUT[49]),
        .I1(MERGE2_OUT[49]),
        .I2(MF),
        .O(MUX_OUT[49]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_50
       (.I0(DATA_OUT[4]),
        .I1(MERGE2_OUT[4]),
        .I2(MF),
        .O(MUX_OUT[4]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_51
       (.I0(DATA_OUT[3]),
        .I1(MERGE2_OUT[3]),
        .I2(MF),
        .O(MUX_OUT[3]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_52
       (.I0(DATA_OUT[2]),
        .I1(MERGE2_OUT[2]),
        .I2(MF),
        .O(MUX_OUT[2]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_53
       (.I0(DATA_OUT[1]),
        .I1(MERGE2_OUT[1]),
        .I2(MF),
        .O(MUX_OUT[1]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_54
       (.I0(DATA_OUT[0]),
        .I1(MERGE2_OUT[0]),
        .I2(MF),
        .O(MUX_OUT[0]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_6
       (.I0(MERGE2_OUT[48]),
        .I1(MERGE2_OUT[48]),
        .I2(MF),
        .O(MUX_OUT[48]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_7
       (.I0(MERGE2_OUT[47]),
        .I1(MERGE2_OUT[47]),
        .I2(MF),
        .O(MUX_OUT[47]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_8
       (.I0(MERGE2_OUT[46]),
        .I1(MERGE2_OUT[46]),
        .I2(MF),
        .O(MUX_OUT[46]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_9
       (.I0(MERGE2_OUT[45]),
        .I1(MERGE2_OUT[45]),
        .I2(MF),
        .O(MUX_OUT[45]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[0]_INST_0 
       (.I0(MUX_OUT[16]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[0]),
        .O(\^PACKET_OUT [0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[10]_INST_0 
       (.I0(MUX_OUT[26]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[10]),
        .O(\^PACKET_OUT [10]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[11]_INST_0 
       (.I0(MUX_OUT[27]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[11]),
        .O(\^PACKET_OUT [11]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[12]_INST_0 
       (.I0(MUX_OUT[28]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[12]),
        .O(\^PACKET_OUT [12]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[13]_INST_0 
       (.I0(MUX_OUT[29]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[13]),
        .O(\^PACKET_OUT [13]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[14]_INST_0 
       (.I0(MUX_OUT[30]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[14]),
        .O(\^PACKET_OUT [14]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[15]_INST_0 
       (.I0(MUX_OUT[31]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[15]),
        .O(\^PACKET_OUT [15]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0 
       (.I0(MUX_OUT[0]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[16]),
        .O(\^PACKET_OUT [16]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[17]_INST_0 
       (.I0(MUX_OUT[1]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[17]),
        .O(\^PACKET_OUT [17]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[18]_INST_0 
       (.I0(MUX_OUT[2]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[18]),
        .O(\^PACKET_OUT [18]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[19]_INST_0 
       (.I0(MUX_OUT[3]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[19]),
        .O(\^PACKET_OUT [19]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[1]_INST_0 
       (.I0(MUX_OUT[17]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[1]),
        .O(\^PACKET_OUT [1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[20]_INST_0 
       (.I0(MUX_OUT[4]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[20]),
        .O(\^PACKET_OUT [20]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[21]_INST_0 
       (.I0(MUX_OUT[5]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[21]),
        .O(\^PACKET_OUT [21]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[22]_INST_0 
       (.I0(MUX_OUT[6]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[22]),
        .O(\^PACKET_OUT [22]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[23]_INST_0 
       (.I0(MUX_OUT[7]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[23]),
        .O(\^PACKET_OUT [23]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[24]_INST_0 
       (.I0(MUX_OUT[8]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[24]),
        .O(\^PACKET_OUT [24]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[25]_INST_0 
       (.I0(MUX_OUT[9]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[25]),
        .O(\^PACKET_OUT [25]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[26]_INST_0 
       (.I0(MUX_OUT[10]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[26]),
        .O(\^PACKET_OUT [26]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[27]_INST_0 
       (.I0(MUX_OUT[11]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[27]),
        .O(\^PACKET_OUT [27]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[28]_INST_0 
       (.I0(MUX_OUT[12]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[28]),
        .O(\^PACKET_OUT [28]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[29]_INST_0 
       (.I0(MUX_OUT[13]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[29]),
        .O(\^PACKET_OUT [29]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[2]_INST_0 
       (.I0(MUX_OUT[18]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[2]),
        .O(\^PACKET_OUT [2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[30]_INST_0 
       (.I0(MUX_OUT[14]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[30]),
        .O(\^PACKET_OUT [30]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[31]_INST_0 
       (.I0(MUX_OUT[15]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[31]),
        .O(\^PACKET_OUT [31]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[3]_INST_0 
       (.I0(MUX_OUT[19]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[3]),
        .O(\^PACKET_OUT [3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[4]_INST_0 
       (.I0(MUX_OUT[20]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[4]),
        .O(\^PACKET_OUT [4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[5]_INST_0 
       (.I0(MUX_OUT[21]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[5]),
        .O(\^PACKET_OUT [5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[6]_INST_0 
       (.I0(MUX_OUT[22]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[6]),
        .O(\^PACKET_OUT [6]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[7]_INST_0 
       (.I0(MUX_OUT[23]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[7]),
        .O(\^PACKET_OUT [7]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[8]_INST_0 
       (.I0(MUX_OUT[24]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[8]),
        .O(\^PACKET_OUT [8]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[9]_INST_0 
       (.I0(MUX_OUT[25]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[9]),
        .O(\^PACKET_OUT [9]));
  (* DONT_TOUCH *) 
  CE__1 ce
       (.CE_Ack_in(Ack_in),
        .CE_Ack_out(Ack_out),
        .CE_CP(CP),
        .CE_Send_in(Send_in),
        .CE_Send_out(Send_out),
        .Exb(DEL),
        .MR(MR));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/CMEM/CMEM.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  CMEM cmem
       (.addra(dest[4:0]),
        .clka(CP),
        .douta(CST_DATA));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/MMRAM/MMRAM.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  MMRAM mmram
       (.addra(ADDR[4:0]),
        .clka(CP),
        .dina(DATA_IN),
        .douta(DATA_OUT),
        .wea(WR_E));
endmodule

(* dont_touch = "true" *) 
module M_Stage
   (MR,
    Send_in_EX,
    Send_in_IN,
    Ack_in,
    PACKET_IN_EXTERNAL,
    PACKET_IN_INTERNAL,
    Ack_out_EX,
    Ack_out_IN,
    Send_out,
    PACKET_OUT);
  input MR;
  input Send_in_EX;
  input Send_in_IN;
  input Ack_in;
  input [37:0]PACKET_IN_EXTERNAL;
  input [37:0]PACKET_IN_INTERNAL;
  output Ack_out_EX;
  output Ack_out_IN;
  output Send_out;
  output [37:0]PACKET_OUT;

  wire AEB;
  wire Ack_in;
  wire Ack_out_EX;
  wire Ack_out_IN;
  (* DONT_TOUCH *) wire CP_EXTERNAL;
  (* DONT_TOUCH *) wire CP_INTERNAL;
  (* DONT_TOUCH *) wire [37:0]DL_EX;
  (* DONT_TOUCH *) wire [37:0]DL_IN;
  wire MR;
  wire [37:0]PACKET_IN_EXTERNAL;
  wire [37:0]PACKET_IN_INTERNAL;
  wire [37:0]PACKET_OUT;
  wire Send_in_EX;
  wire Send_in_IN;
  wire Send_out;

  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[0] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[0]),
        .Q(DL_EX[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[10] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[10]),
        .Q(DL_EX[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[11] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[11]),
        .Q(DL_EX[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[12] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[12]),
        .Q(DL_EX[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[13] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[13]),
        .Q(DL_EX[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[14] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[14]),
        .Q(DL_EX[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[15] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[15]),
        .Q(DL_EX[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[16] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[16]),
        .Q(DL_EX[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[17] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[17]),
        .Q(DL_EX[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[18] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[18]),
        .Q(DL_EX[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[19] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[19]),
        .Q(DL_EX[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[1] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[1]),
        .Q(DL_EX[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[20] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[20]),
        .Q(DL_EX[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[21] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[21]),
        .Q(DL_EX[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[22] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[22]),
        .Q(DL_EX[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[23] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[23]),
        .Q(DL_EX[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[24] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[24]),
        .Q(DL_EX[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[25] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[25]),
        .Q(DL_EX[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[26] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[26]),
        .Q(DL_EX[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[27] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[27]),
        .Q(DL_EX[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[28] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[28]),
        .Q(DL_EX[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[29] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[29]),
        .Q(DL_EX[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[2] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[2]),
        .Q(DL_EX[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[30] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[30]),
        .Q(DL_EX[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[31] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[31]),
        .Q(DL_EX[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[32] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[32]),
        .Q(DL_EX[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[33] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[33]),
        .Q(DL_EX[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[34] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[34]),
        .Q(DL_EX[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[35] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[35]),
        .Q(DL_EX[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[36] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[36]),
        .Q(DL_EX[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[37] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[37]),
        .Q(DL_EX[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[3] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[3]),
        .Q(DL_EX[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[4] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[4]),
        .Q(DL_EX[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[5] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[5]),
        .Q(DL_EX[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[6] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[6]),
        .Q(DL_EX[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[7] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[7]),
        .Q(DL_EX[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[8] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[8]),
        .Q(DL_EX[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[9] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[9]),
        .Q(DL_EX[9]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[0] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[0]),
        .Q(DL_IN[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[10] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[10]),
        .Q(DL_IN[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[11] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[11]),
        .Q(DL_IN[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[12] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[12]),
        .Q(DL_IN[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[13] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[13]),
        .Q(DL_IN[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[14] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[14]),
        .Q(DL_IN[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[15] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[15]),
        .Q(DL_IN[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[16] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[16]),
        .Q(DL_IN[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[17] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[17]),
        .Q(DL_IN[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[18] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[18]),
        .Q(DL_IN[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[19] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[19]),
        .Q(DL_IN[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[1] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[1]),
        .Q(DL_IN[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[20] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[20]),
        .Q(DL_IN[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[21] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[21]),
        .Q(DL_IN[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[22] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[22]),
        .Q(DL_IN[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[23] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[23]),
        .Q(DL_IN[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[24] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[24]),
        .Q(DL_IN[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[25] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[25]),
        .Q(DL_IN[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[26] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[26]),
        .Q(DL_IN[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[27] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[27]),
        .Q(DL_IN[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[28] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[28]),
        .Q(DL_IN[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[29] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[29]),
        .Q(DL_IN[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[2] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[2]),
        .Q(DL_IN[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[30] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[30]),
        .Q(DL_IN[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[31] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[31]),
        .Q(DL_IN[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[32] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[32]),
        .Q(DL_IN[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[33] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[33]),
        .Q(DL_IN[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[34] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[34]),
        .Q(DL_IN[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[35] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[35]),
        .Q(DL_IN[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[36] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[36]),
        .Q(DL_IN[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[37] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[37]),
        .Q(DL_IN[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[3] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[3]),
        .Q(DL_IN[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[4] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[4]),
        .Q(DL_IN[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[5] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[5]),
        .Q(DL_IN[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[6] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[6]),
        .Q(DL_IN[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[7] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[7]),
        .Q(DL_IN[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[8] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[8]),
        .Q(DL_IN[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[9] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[9]),
        .Q(DL_IN[9]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[0]_INST_0 
       (.I0(DL_IN[0]),
        .I1(DL_EX[0]),
        .I2(AEB),
        .O(PACKET_OUT[0]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[10]_INST_0 
       (.I0(DL_IN[10]),
        .I1(DL_EX[10]),
        .I2(AEB),
        .O(PACKET_OUT[10]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[11]_INST_0 
       (.I0(DL_IN[11]),
        .I1(DL_EX[11]),
        .I2(AEB),
        .O(PACKET_OUT[11]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[12]_INST_0 
       (.I0(DL_IN[12]),
        .I1(DL_EX[12]),
        .I2(AEB),
        .O(PACKET_OUT[12]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[13]_INST_0 
       (.I0(DL_IN[13]),
        .I1(DL_EX[13]),
        .I2(AEB),
        .O(PACKET_OUT[13]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[14]_INST_0 
       (.I0(DL_IN[14]),
        .I1(DL_EX[14]),
        .I2(AEB),
        .O(PACKET_OUT[14]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[15]_INST_0 
       (.I0(DL_IN[15]),
        .I1(DL_EX[15]),
        .I2(AEB),
        .O(PACKET_OUT[15]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[16]_INST_0 
       (.I0(DL_IN[16]),
        .I1(DL_EX[16]),
        .I2(AEB),
        .O(PACKET_OUT[16]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[17]_INST_0 
       (.I0(DL_IN[17]),
        .I1(DL_EX[17]),
        .I2(AEB),
        .O(PACKET_OUT[17]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[18]_INST_0 
       (.I0(DL_IN[18]),
        .I1(DL_EX[18]),
        .I2(AEB),
        .O(PACKET_OUT[18]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[19]_INST_0 
       (.I0(DL_IN[19]),
        .I1(DL_EX[19]),
        .I2(AEB),
        .O(PACKET_OUT[19]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[1]_INST_0 
       (.I0(DL_IN[1]),
        .I1(DL_EX[1]),
        .I2(AEB),
        .O(PACKET_OUT[1]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[20]_INST_0 
       (.I0(DL_IN[20]),
        .I1(DL_EX[20]),
        .I2(AEB),
        .O(PACKET_OUT[20]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[21]_INST_0 
       (.I0(DL_IN[21]),
        .I1(DL_EX[21]),
        .I2(AEB),
        .O(PACKET_OUT[21]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[22]_INST_0 
       (.I0(DL_IN[22]),
        .I1(DL_EX[22]),
        .I2(AEB),
        .O(PACKET_OUT[22]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[23]_INST_0 
       (.I0(DL_IN[23]),
        .I1(DL_EX[23]),
        .I2(AEB),
        .O(PACKET_OUT[23]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[24]_INST_0 
       (.I0(DL_IN[24]),
        .I1(DL_EX[24]),
        .I2(AEB),
        .O(PACKET_OUT[24]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[25]_INST_0 
       (.I0(DL_IN[25]),
        .I1(DL_EX[25]),
        .I2(AEB),
        .O(PACKET_OUT[25]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[26]_INST_0 
       (.I0(DL_IN[26]),
        .I1(DL_EX[26]),
        .I2(AEB),
        .O(PACKET_OUT[26]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[27]_INST_0 
       (.I0(DL_IN[27]),
        .I1(DL_EX[27]),
        .I2(AEB),
        .O(PACKET_OUT[27]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[28]_INST_0 
       (.I0(DL_IN[28]),
        .I1(DL_EX[28]),
        .I2(AEB),
        .O(PACKET_OUT[28]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[29]_INST_0 
       (.I0(DL_IN[29]),
        .I1(DL_EX[29]),
        .I2(AEB),
        .O(PACKET_OUT[29]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[2]_INST_0 
       (.I0(DL_IN[2]),
        .I1(DL_EX[2]),
        .I2(AEB),
        .O(PACKET_OUT[2]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[30]_INST_0 
       (.I0(DL_IN[30]),
        .I1(DL_EX[30]),
        .I2(AEB),
        .O(PACKET_OUT[30]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[31]_INST_0 
       (.I0(DL_IN[31]),
        .I1(DL_EX[31]),
        .I2(AEB),
        .O(PACKET_OUT[31]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[32]_INST_0 
       (.I0(DL_IN[32]),
        .I1(DL_EX[32]),
        .I2(AEB),
        .O(PACKET_OUT[32]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[33]_INST_0 
       (.I0(DL_IN[33]),
        .I1(DL_EX[33]),
        .I2(AEB),
        .O(PACKET_OUT[33]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[34]_INST_0 
       (.I0(DL_IN[34]),
        .I1(DL_EX[34]),
        .I2(AEB),
        .O(PACKET_OUT[34]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[35]_INST_0 
       (.I0(DL_IN[35]),
        .I1(DL_EX[35]),
        .I2(AEB),
        .O(PACKET_OUT[35]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[36]_INST_0 
       (.I0(DL_IN[36]),
        .I1(DL_EX[36]),
        .I2(AEB),
        .O(PACKET_OUT[36]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[37]_INST_0 
       (.I0(DL_IN[37]),
        .I1(DL_EX[37]),
        .I2(AEB),
        .O(PACKET_OUT[37]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[3]_INST_0 
       (.I0(DL_IN[3]),
        .I1(DL_EX[3]),
        .I2(AEB),
        .O(PACKET_OUT[3]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[4]_INST_0 
       (.I0(DL_IN[4]),
        .I1(DL_EX[4]),
        .I2(AEB),
        .O(PACKET_OUT[4]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[5]_INST_0 
       (.I0(DL_IN[5]),
        .I1(DL_EX[5]),
        .I2(AEB),
        .O(PACKET_OUT[5]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[6]_INST_0 
       (.I0(DL_IN[6]),
        .I1(DL_EX[6]),
        .I2(AEB),
        .O(PACKET_OUT[6]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[7]_INST_0 
       (.I0(DL_IN[7]),
        .I1(DL_EX[7]),
        .I2(AEB),
        .O(PACKET_OUT[7]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[8]_INST_0 
       (.I0(DL_IN[8]),
        .I1(DL_EX[8]),
        .I2(AEB),
        .O(PACKET_OUT[8]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[9]_INST_0 
       (.I0(DL_IN[9]),
        .I1(DL_EX[9]),
        .I2(AEB),
        .O(PACKET_OUT[9]));
  (* DONT_TOUCH *) 
  CM cm
       (.AEB(AEB),
        .Ack_in(Ack_in),
        .Ack_out_a(Ack_out_EX),
        .Ack_out_b(Ack_out_IN),
        .CP_a(CP_EXTERNAL),
        .CP_b(CP_INTERNAL),
        .MR(MR),
        .Send_in_a(Send_in_EX),
        .Send_in_b(Send_in_IN),
        .Send_out(Send_out));
endmodule

(* dont_touch = "true" *) 
module OR_AM_MA
   (FIRE,
    VALID,
    MF,
    CP,
    MR,
    EN,
    WR_E,
    DEL,
    ADDR);
  input [19:0]FIRE;
  input [19:0]VALID;
  input MF;
  input CP;
  input MR;
  output [19:0]EN;
  output WR_E;
  output DEL;
  output [5:0]ADDR;

  wire [5:0]ADDR;
  wire \ADDR[0]_i_1_n_0 ;
  wire \ADDR[1]_i_1_n_0 ;
  wire \ADDR[2]_i_1_n_0 ;
  wire \ADDR[3]_i_1_n_0 ;
  wire \ADDR[4]_i_1_n_0 ;
  wire \ADDR[5]_i_1_n_0 ;
  wire CP;
  wire DEL;
  wire DEL_i_1_n_0;
  wire [19:0]EN;
  wire \EN[12]_INST_0_i_1_n_0 ;
  wire \EN[17]_INST_0_i_1_n_0 ;
  wire \EN[19]_INST_0_i_1_n_0 ;
  wire \EN[19]_INST_0_i_2_n_0 ;
  wire \EN[8]_INST_0_i_1_n_0 ;
  wire [19:0]FIRE;
  (* DONT_TOUCH *) wire FIRE_OR;
  wire FIRE_OR_inferred_i_2_n_0;
  wire FIRE_OR_inferred_i_3_n_0;
  wire FIRE_OR_inferred_i_4_n_0;
  wire MF;
  wire MR;
  (* DONT_TOUCH *) wire [5:0]R_ADDR;
  wire R_ADDR_inferred_i_10_n_0;
  wire R_ADDR_inferred_i_11_n_0;
  wire R_ADDR_inferred_i_12_n_0;
  wire R_ADDR_inferred_i_13_n_0;
  wire R_ADDR_inferred_i_14_n_0;
  wire R_ADDR_inferred_i_15_n_0;
  wire R_ADDR_inferred_i_16_n_0;
  wire R_ADDR_inferred_i_17_n_0;
  wire R_ADDR_inferred_i_18_n_0;
  wire R_ADDR_inferred_i_6_n_0;
  wire R_ADDR_inferred_i_7_n_0;
  wire R_ADDR_inferred_i_8_n_0;
  wire R_ADDR_inferred_i_9_n_0;
  wire [19:0]VALID;
  wire WR_E;
  wire WR_E0_out;
  (* DONT_TOUCH *) wire [5:0]W_ADDR;
  wire W_ADDR_inferred_i_10_n_0;
  wire W_ADDR_inferred_i_11_n_0;
  wire W_ADDR_inferred_i_12_n_0;
  wire W_ADDR_inferred_i_13_n_0;
  wire W_ADDR_inferred_i_14_n_0;
  wire W_ADDR_inferred_i_15_n_0;
  wire W_ADDR_inferred_i_6_n_0;
  wire W_ADDR_inferred_i_7_n_0;
  wire W_ADDR_inferred_i_8_n_0;
  wire W_ADDR_inferred_i_9_n_0;

  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[0]_i_1 
       (.I0(R_ADDR[0]),
        .I1(FIRE_OR),
        .I2(W_ADDR[0]),
        .O(\ADDR[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[1]_i_1 
       (.I0(R_ADDR[1]),
        .I1(FIRE_OR),
        .I2(W_ADDR[1]),
        .O(\ADDR[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[2]_i_1 
       (.I0(R_ADDR[2]),
        .I1(FIRE_OR),
        .I2(W_ADDR[2]),
        .O(\ADDR[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[3]_i_1 
       (.I0(R_ADDR[3]),
        .I1(FIRE_OR),
        .I2(W_ADDR[3]),
        .O(\ADDR[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[4]_i_1 
       (.I0(R_ADDR[4]),
        .I1(FIRE_OR),
        .I2(W_ADDR[4]),
        .O(\ADDR[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[5]_i_1 
       (.I0(R_ADDR[5]),
        .I1(FIRE_OR),
        .I2(W_ADDR[5]),
        .O(\ADDR[5]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[0] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[0]_i_1_n_0 ),
        .Q(ADDR[0]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[1] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[1]_i_1_n_0 ),
        .Q(ADDR[1]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[2] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[2]_i_1_n_0 ),
        .Q(ADDR[2]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[3] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[3]_i_1_n_0 ),
        .Q(ADDR[3]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[4] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[4]_i_1_n_0 ),
        .Q(ADDR[4]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[5] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[5]_i_1_n_0 ),
        .Q(ADDR[5]));
  LUT2 #(
    .INIT(4'hB)) 
    DEL_i_1
       (.I0(FIRE_OR),
        .I1(MF),
        .O(DEL_i_1_n_0));
  FDPE #(
    .INIT(1'b1)) 
    DEL_reg
       (.C(CP),
        .CE(1'b1),
        .D(DEL_i_1_n_0),
        .PRE(MR),
        .Q(DEL));
  LUT3 #(
    .INIT(8'h02)) 
    \EN[0]_INST_0 
       (.I0(MF),
        .I1(FIRE_OR),
        .I2(VALID[0]),
        .O(EN[0]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \EN[10]_INST_0 
       (.I0(VALID[10]),
        .I1(VALID[8]),
        .I2(VALID[9]),
        .I3(\EN[12]_INST_0_i_1_n_0 ),
        .O(EN[10]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \EN[11]_INST_0 
       (.I0(VALID[8]),
        .I1(VALID[9]),
        .I2(VALID[10]),
        .I3(VALID[11]),
        .I4(\EN[12]_INST_0_i_1_n_0 ),
        .O(EN[11]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \EN[12]_INST_0 
       (.I0(VALID[11]),
        .I1(VALID[10]),
        .I2(VALID[9]),
        .I3(VALID[8]),
        .I4(\EN[12]_INST_0_i_1_n_0 ),
        .I5(VALID[12]),
        .O(EN[12]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \EN[12]_INST_0_i_1 
       (.I0(\EN[8]_INST_0_i_1_n_0 ),
        .I1(VALID[4]),
        .I2(VALID[5]),
        .I3(VALID[6]),
        .I4(VALID[7]),
        .O(\EN[12]_INST_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \EN[13]_INST_0 
       (.I0(VALID[13]),
        .I1(VALID[12]),
        .I2(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[13]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \EN[14]_INST_0 
       (.I0(VALID[14]),
        .I1(VALID[12]),
        .I2(VALID[13]),
        .I3(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[14]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \EN[15]_INST_0 
       (.I0(VALID[12]),
        .I1(VALID[13]),
        .I2(VALID[14]),
        .I3(VALID[15]),
        .I4(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[15]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \EN[16]_INST_0 
       (.I0(VALID[13]),
        .I1(VALID[12]),
        .I2(VALID[15]),
        .I3(VALID[14]),
        .I4(\EN[19]_INST_0_i_2_n_0 ),
        .I5(VALID[16]),
        .O(EN[16]));
  LUT6 #(
    .INIT(64'h0400000000000000)) 
    \EN[17]_INST_0 
       (.I0(VALID[17]),
        .I1(VALID[16]),
        .I2(\EN[17]_INST_0_i_1_n_0 ),
        .I3(VALID[15]),
        .I4(VALID[14]),
        .I5(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[17]));
  LUT2 #(
    .INIT(4'h7)) 
    \EN[17]_INST_0_i_1 
       (.I0(VALID[12]),
        .I1(VALID[13]),
        .O(\EN[17]_INST_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    \EN[18]_INST_0 
       (.I0(VALID[18]),
        .I1(VALID[16]),
        .I2(VALID[17]),
        .I3(\EN[19]_INST_0_i_1_n_0 ),
        .I4(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[18]));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \EN[19]_INST_0 
       (.I0(VALID[16]),
        .I1(VALID[17]),
        .I2(VALID[18]),
        .I3(VALID[19]),
        .I4(\EN[19]_INST_0_i_1_n_0 ),
        .I5(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[19]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \EN[19]_INST_0_i_1 
       (.I0(VALID[13]),
        .I1(VALID[12]),
        .I2(VALID[15]),
        .I3(VALID[14]),
        .O(\EN[19]_INST_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \EN[19]_INST_0_i_2 
       (.I0(\EN[12]_INST_0_i_1_n_0 ),
        .I1(VALID[8]),
        .I2(VALID[9]),
        .I3(VALID[10]),
        .I4(VALID[11]),
        .O(\EN[19]_INST_0_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0040)) 
    \EN[1]_INST_0 
       (.I0(FIRE_OR),
        .I1(MF),
        .I2(VALID[0]),
        .I3(VALID[1]),
        .O(EN[1]));
  LUT5 #(
    .INIT(32'h00000080)) 
    \EN[2]_INST_0 
       (.I0(VALID[1]),
        .I1(VALID[0]),
        .I2(MF),
        .I3(FIRE_OR),
        .I4(VALID[2]),
        .O(EN[2]));
  LUT6 #(
    .INIT(64'h0000000040000000)) 
    \EN[3]_INST_0 
       (.I0(VALID[3]),
        .I1(VALID[2]),
        .I2(VALID[1]),
        .I3(VALID[0]),
        .I4(MF),
        .I5(FIRE_OR),
        .O(EN[3]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \EN[4]_INST_0 
       (.I0(\EN[8]_INST_0_i_1_n_0 ),
        .I1(VALID[4]),
        .O(EN[4]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \EN[5]_INST_0 
       (.I0(VALID[5]),
        .I1(VALID[4]),
        .I2(\EN[8]_INST_0_i_1_n_0 ),
        .O(EN[5]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \EN[6]_INST_0 
       (.I0(VALID[6]),
        .I1(VALID[4]),
        .I2(VALID[5]),
        .I3(\EN[8]_INST_0_i_1_n_0 ),
        .O(EN[6]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \EN[7]_INST_0 
       (.I0(VALID[4]),
        .I1(VALID[5]),
        .I2(VALID[6]),
        .I3(VALID[7]),
        .I4(\EN[8]_INST_0_i_1_n_0 ),
        .O(EN[7]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \EN[8]_INST_0 
       (.I0(VALID[7]),
        .I1(VALID[6]),
        .I2(VALID[5]),
        .I3(VALID[4]),
        .I4(\EN[8]_INST_0_i_1_n_0 ),
        .I5(VALID[8]),
        .O(EN[8]));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \EN[8]_INST_0_i_1 
       (.I0(VALID[1]),
        .I1(VALID[0]),
        .I2(MF),
        .I3(FIRE_OR),
        .I4(VALID[3]),
        .I5(VALID[2]),
        .O(\EN[8]_INST_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \EN[9]_INST_0 
       (.I0(VALID[9]),
        .I1(VALID[8]),
        .I2(\EN[12]_INST_0_i_1_n_0 ),
        .O(EN[9]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    FIRE_OR_inferred_i_1
       (.I0(FIRE[17]),
        .I1(FIRE[16]),
        .I2(FIRE[19]),
        .I3(FIRE[18]),
        .I4(FIRE_OR_inferred_i_2_n_0),
        .I5(FIRE_OR_inferred_i_3_n_0),
        .O(FIRE_OR));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    FIRE_OR_inferred_i_2
       (.I0(FIRE[10]),
        .I1(FIRE[11]),
        .I2(FIRE[8]),
        .I3(FIRE[9]),
        .I4(FIRE_OR_inferred_i_4_n_0),
        .O(FIRE_OR_inferred_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    FIRE_OR_inferred_i_3
       (.I0(FIRE[1]),
        .I1(FIRE[5]),
        .I2(FIRE[3]),
        .I3(FIRE[7]),
        .I4(R_ADDR_inferred_i_6_n_0),
        .O(FIRE_OR_inferred_i_3_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    FIRE_OR_inferred_i_4
       (.I0(FIRE[13]),
        .I1(FIRE[12]),
        .I2(FIRE[15]),
        .I3(FIRE[14]),
        .O(FIRE_OR_inferred_i_4_n_0));
  LUT6 #(
    .INIT(64'h0000000055555554)) 
    R_ADDR_inferred_i_1
       (.I0(FIRE_OR_inferred_i_2_n_0),
        .I1(FIRE[17]),
        .I2(FIRE[16]),
        .I3(FIRE[19]),
        .I4(FIRE[18]),
        .I5(FIRE_OR_inferred_i_3_n_0),
        .O(R_ADDR[4]));
  LUT6 #(
    .INIT(64'h000A000A000A000E)) 
    R_ADDR_inferred_i_10
       (.I0(FIRE[5]),
        .I1(R_ADDR_inferred_i_14_n_0),
        .I2(R_ADDR_inferred_i_15_n_0),
        .I3(FIRE[4]),
        .I4(FIRE[6]),
        .I5(FIRE[8]),
        .O(R_ADDR_inferred_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    R_ADDR_inferred_i_11
       (.I0(FIRE[9]),
        .I1(FIRE[8]),
        .I2(FIRE[11]),
        .I3(FIRE[10]),
        .O(R_ADDR_inferred_i_11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'hE)) 
    R_ADDR_inferred_i_12
       (.I0(FIRE[1]),
        .I1(FIRE[5]),
        .O(R_ADDR_inferred_i_12_n_0));
  LUT6 #(
    .INIT(64'h00000000EEEEEEFE)) 
    R_ADDR_inferred_i_13
       (.I0(FIRE[10]),
        .I1(FIRE[11]),
        .I2(R_ADDR_inferred_i_16_n_0),
        .I3(FIRE[13]),
        .I4(FIRE[12]),
        .I5(R_ADDR_inferred_i_17_n_0),
        .O(R_ADDR_inferred_i_13_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF55551110)) 
    R_ADDR_inferred_i_14
       (.I0(FIRE[10]),
        .I1(FIRE[12]),
        .I2(R_ADDR_inferred_i_18_n_0),
        .I3(FIRE[13]),
        .I4(FIRE[11]),
        .I5(FIRE[9]),
        .O(R_ADDR_inferred_i_14_n_0));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'hE)) 
    R_ADDR_inferred_i_15
       (.I0(FIRE[0]),
        .I1(FIRE[2]),
        .O(R_ADDR_inferred_i_15_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF1110)) 
    R_ADDR_inferred_i_16
       (.I0(FIRE[16]),
        .I1(FIRE[17]),
        .I2(FIRE[18]),
        .I3(FIRE[19]),
        .I4(FIRE[15]),
        .I5(FIRE[14]),
        .O(R_ADDR_inferred_i_16_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    R_ADDR_inferred_i_17
       (.I0(FIRE[8]),
        .I1(FIRE[9]),
        .O(R_ADDR_inferred_i_17_n_0));
  LUT6 #(
    .INIT(64'h00000000AAAAEEFE)) 
    R_ADDR_inferred_i_18
       (.I0(FIRE[15]),
        .I1(FIRE[17]),
        .I2(FIRE[19]),
        .I3(FIRE[18]),
        .I4(FIRE[16]),
        .I5(FIRE[14]),
        .O(R_ADDR_inferred_i_18_n_0));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    R_ADDR_inferred_i_2
       (.I0(FIRE_OR_inferred_i_2_n_0),
        .I1(R_ADDR_inferred_i_6_n_0),
        .I2(FIRE[7]),
        .I3(FIRE[3]),
        .I4(FIRE[5]),
        .I5(FIRE[1]),
        .O(R_ADDR[3]));
  LUT5 #(
    .INIT(32'h00010000)) 
    R_ADDR_inferred_i_3
       (.I0(FIRE[0]),
        .I1(FIRE[2]),
        .I2(FIRE[1]),
        .I3(FIRE[3]),
        .I4(R_ADDR_inferred_i_7_n_0),
        .O(R_ADDR[2]));
  LUT5 #(
    .INIT(32'hFFFF000E)) 
    R_ADDR_inferred_i_4
       (.I0(FIRE[2]),
        .I1(FIRE[3]),
        .I2(FIRE[0]),
        .I3(FIRE[1]),
        .I4(R_ADDR_inferred_i_8_n_0),
        .O(R_ADDR[1]));
  LUT4 #(
    .INIT(16'hFFF2)) 
    R_ADDR_inferred_i_5
       (.I0(FIRE[1]),
        .I1(FIRE[0]),
        .I2(R_ADDR_inferred_i_9_n_0),
        .I3(R_ADDR_inferred_i_10_n_0),
        .O(R_ADDR[0]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    R_ADDR_inferred_i_6
       (.I0(FIRE[6]),
        .I1(FIRE[4]),
        .I2(FIRE[2]),
        .I3(FIRE[0]),
        .O(R_ADDR_inferred_i_6_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF4)) 
    R_ADDR_inferred_i_7
       (.I0(R_ADDR_inferred_i_11_n_0),
        .I1(FIRE_OR_inferred_i_4_n_0),
        .I2(FIRE[4]),
        .I3(FIRE[6]),
        .I4(FIRE[5]),
        .I5(FIRE[7]),
        .O(R_ADDR_inferred_i_7_n_0));
  LUT6 #(
    .INIT(64'h0101010101010100)) 
    R_ADDR_inferred_i_8
       (.I0(R_ADDR_inferred_i_12_n_0),
        .I1(FIRE[0]),
        .I2(FIRE[4]),
        .I3(FIRE[6]),
        .I4(FIRE[7]),
        .I5(R_ADDR_inferred_i_13_n_0),
        .O(R_ADDR_inferred_i_8_n_0));
  LUT6 #(
    .INIT(64'h000000AB000000AA)) 
    R_ADDR_inferred_i_9
       (.I0(FIRE[3]),
        .I1(FIRE[6]),
        .I2(FIRE[4]),
        .I3(FIRE[2]),
        .I4(FIRE[0]),
        .I5(FIRE[7]),
        .O(R_ADDR_inferred_i_9_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    WR_E_i_1
       (.I0(MF),
        .I1(FIRE_OR),
        .O(WR_E0_out));
  FDCE #(
    .INIT(1'b0)) 
    WR_E_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(WR_E0_out),
        .Q(WR_E));
  LUT6 #(
    .INIT(64'h000000007FFF0000)) 
    W_ADDR_inferred_i_1
       (.I0(VALID[16]),
        .I1(VALID[17]),
        .I2(VALID[18]),
        .I3(VALID[19]),
        .I4(\EN[19]_INST_0_i_2_n_0 ),
        .I5(\EN[19]_INST_0_i_1_n_0 ),
        .O(W_ADDR[4]));
  LUT6 #(
    .INIT(64'hF777555500000000)) 
    W_ADDR_inferred_i_10
       (.I0(VALID[5]),
        .I1(VALID[7]),
        .I2(W_ADDR_inferred_i_13_n_0),
        .I3(VALID[8]),
        .I4(VALID[6]),
        .I5(VALID[4]),
        .O(W_ADDR_inferred_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h7)) 
    W_ADDR_inferred_i_11
       (.I0(VALID[8]),
        .I1(VALID[9]),
        .O(W_ADDR_inferred_i_11_n_0));
  LUT6 #(
    .INIT(64'h0000000077777FFF)) 
    W_ADDR_inferred_i_12
       (.I0(VALID[14]),
        .I1(VALID[15]),
        .I2(VALID[19]),
        .I3(VALID[18]),
        .I4(W_ADDR_inferred_i_14_n_0),
        .I5(\EN[17]_INST_0_i_1_n_0 ),
        .O(W_ADDR_inferred_i_12_n_0));
  LUT6 #(
    .INIT(64'h8088AAAAFFFFFFFF)) 
    W_ADDR_inferred_i_13
       (.I0(VALID[10]),
        .I1(VALID[12]),
        .I2(W_ADDR_inferred_i_15_n_0),
        .I3(VALID[13]),
        .I4(VALID[11]),
        .I5(VALID[9]),
        .O(W_ADDR_inferred_i_13_n_0));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h7)) 
    W_ADDR_inferred_i_14
       (.I0(VALID[16]),
        .I1(VALID[17]),
        .O(W_ADDR_inferred_i_14_n_0));
  LUT6 #(
    .INIT(64'h77F7555500000000)) 
    W_ADDR_inferred_i_15
       (.I0(VALID[15]),
        .I1(VALID[17]),
        .I2(VALID[18]),
        .I3(VALID[19]),
        .I4(VALID[16]),
        .I5(VALID[14]),
        .O(W_ADDR_inferred_i_15_n_0));
  LUT6 #(
    .INIT(64'hFFFF00007FFF0000)) 
    W_ADDR_inferred_i_2
       (.I0(VALID[11]),
        .I1(VALID[10]),
        .I2(VALID[9]),
        .I3(VALID[8]),
        .I4(\EN[12]_INST_0_i_1_n_0 ),
        .I5(\EN[19]_INST_0_i_1_n_0 ),
        .O(W_ADDR[3]));
  LUT6 #(
    .INIT(64'hF700F700FF00F700)) 
    W_ADDR_inferred_i_3
       (.I0(VALID[7]),
        .I1(VALID[6]),
        .I2(W_ADDR_inferred_i_6_n_0),
        .I3(\EN[8]_INST_0_i_1_n_0 ),
        .I4(\EN[19]_INST_0_i_1_n_0 ),
        .I5(W_ADDR_inferred_i_7_n_0),
        .O(W_ADDR[2]));
  LUT6 #(
    .INIT(64'hF700770077007700)) 
    W_ADDR_inferred_i_4
       (.I0(VALID[2]),
        .I1(VALID[3]),
        .I2(W_ADDR_inferred_i_8_n_0),
        .I3(W_ADDR_inferred_i_9_n_0),
        .I4(VALID[5]),
        .I5(VALID[4]),
        .O(W_ADDR[1]));
  LUT6 #(
    .INIT(64'h00DF000000550000)) 
    W_ADDR_inferred_i_5
       (.I0(VALID[1]),
        .I1(W_ADDR_inferred_i_10_n_0),
        .I2(VALID[3]),
        .I3(DEL_i_1_n_0),
        .I4(VALID[0]),
        .I5(VALID[2]),
        .O(W_ADDR[0]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h7)) 
    W_ADDR_inferred_i_6
       (.I0(VALID[4]),
        .I1(VALID[5]),
        .O(W_ADDR_inferred_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    W_ADDR_inferred_i_7
       (.I0(VALID[11]),
        .I1(VALID[10]),
        .I2(VALID[9]),
        .I3(VALID[8]),
        .O(W_ADDR_inferred_i_7_n_0));
  LUT6 #(
    .INIT(64'h4555FFFFFFFFFFFF)) 
    W_ADDR_inferred_i_8
       (.I0(W_ADDR_inferred_i_11_n_0),
        .I1(W_ADDR_inferred_i_12_n_0),
        .I2(VALID[11]),
        .I3(VALID[10]),
        .I4(VALID[7]),
        .I5(VALID[6]),
        .O(W_ADDR_inferred_i_8_n_0));
  LUT4 #(
    .INIT(16'h4000)) 
    W_ADDR_inferred_i_9
       (.I0(FIRE_OR),
        .I1(MF),
        .I2(VALID[0]),
        .I3(VALID[1]),
        .O(W_ADDR_inferred_i_9_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(W_ADDR[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(R_ADDR[5]));
endmodule

(* CHECK_LICENSE_TYPE = "PS,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module PS
   (clka,
    addra,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [16:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [16:0]douta;
  wire NLW_U0_clkb_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_ena_UNCONNECTED;
  wire NLW_U0_enb_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [4:0]NLW_U0_addrb_UNCONNECTED;
  wire [16:0]NLW_U0_dina_UNCONNECTED;
  wire [16:0]NLW_U0_dinb_UNCONNECTED;
  wire [16:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [16:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [16:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_wea_UNCONNECTED;
  wire [0:0]NLW_U0_web_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.751199 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "PS.mem" *) 
  (* C_INIT_FILE_NAME = "PS.mif" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "1" *) 
  (* C_MEM_TYPE = "3" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "17" *) 
  (* C_READ_WIDTH_B = "17" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "17" *) 
  (* C_WRITE_WIDTH_B = "17" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  PS_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb(NLW_U0_addrb_UNCONNECTED[4:0]),
        .clka(clka),
        .clkb(NLW_U0_clkb_UNCONNECTED),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(NLW_U0_dina_UNCONNECTED[16:0]),
        .dinb(NLW_U0_dinb_UNCONNECTED[16:0]),
        .douta(douta),
        .doutb(NLW_U0_doutb_UNCONNECTED[16:0]),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(NLW_U0_ena_UNCONNECTED),
        .enb(NLW_U0_enb_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[16:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[16:0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(NLW_U0_wea_UNCONNECTED[0]),
        .web(NLW_U0_web_UNCONNECTED[0]));
endmodule

(* ABSORB = "6'b111111" *) (* ADD = "6'b000000" *) (* ADDC = "6'b000001" *) 
(* ADDGEN = "6'b101010" *) (* AND = "6'b000100" *) (* BC = "6'b010010" *) 
(* BNC = "6'b010011" *) (* BNZ = "6'b010001" *) (* BNZL = "6'b011000" *) 
(* BZ = "6'b010000" *) (* BZL = "6'b011000" *) (* CHGCOL = "6'b101001" *) 
(* CHGDEST = "6'b110000" *) (* DECGEN = "6'b101100" *) (* LDM = "6'b100000" *) 
(* MUL = "6'b000111" *) (* OR = "6'b000101" *) (* ROL = "6'b001010" *) 
(* ROR = "6'b001011" *) (* SHL = "6'b001000" *) (* SHR = "6'b001001" *) 
(* STM = "6'b100001" *) (* SUB = "6'b000010" *) (* SUBC = "6'b000011" *) 
(* XOR = "6'b000110" *) (* dont_touch = "true" *) 
module PS_Stage
   (Send_in,
    Ack_in,
    MR,
    PACKET_IN,
    PACKET_OUT,
    DEL,
    Send_out,
    Ack_out);
  input Send_in;
  input Ack_in;
  input MR;
  input [51:0]PACKET_IN;
  output [61:0]PACKET_OUT;
  output DEL;
  output Send_out;
  output Ack_out;

  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  wire DEL;
  (* DONT_TOUCH *) wire [51:0]DL;
  wire MR;
  wire [51:0]\^PACKET_IN ;
  (* DONT_TOUCH *) wire [16:0]PSData;
  wire Send_in;
  wire Send_out;
  (* DONT_TOUCH *) wire [6:0]dest;

  assign PACKET_OUT[61:51] = DL[51:41];
  assign PACKET_OUT[50:34] = PSData;
  assign PACKET_OUT[33:0] = DL[33:0];
  assign \^PACKET_IN [51:41] = PACKET_IN[51:41];
  assign \^PACKET_IN [33:0] = PACKET_IN[33:0];
  assign dest = PACKET_IN[40:34];
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    DEL_INST_0
       (.I0(PSData[5]),
        .I1(PSData[4]),
        .I2(PSData[1]),
        .I3(PSData[0]),
        .I4(PSData[3]),
        .I5(PSData[2]),
        .O(DEL));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[0]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[1]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[2]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[3]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[38] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[4]),
        .Q(DL[38]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[39] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[5]),
        .Q(DL[39]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[40] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[6]),
        .Q(DL[40]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[41] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [41]),
        .Q(DL[41]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[42] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [42]),
        .Q(DL[42]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[43] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [43]),
        .Q(DL[43]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[44] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [44]),
        .Q(DL[44]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[45] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [45]),
        .Q(DL[45]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[46] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [46]),
        .Q(DL[46]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[47] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [47]),
        .Q(DL[47]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[48] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [48]),
        .Q(DL[48]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[49] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [49]),
        .Q(DL[49]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[50] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [50]),
        .Q(DL[50]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[51] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [51]),
        .Q(DL[51]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  C__2 c
       (.Ack_in(Ack_in),
        .Ack_out(Ack_out),
        .CP(CP),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(Send_out));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/PS/PS.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  PS ps
       (.addra(dest[4:0]),
        .clka(CP),
        .douta(PSData));
endmodule

(* CHECK_LICENSE_TYPE = "SubPS,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module SubPS
   (clka,
    addra,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [0:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [0:0]douta;
  wire NLW_U0_clkb_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_ena_UNCONNECTED;
  wire NLW_U0_enb_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [4:0]NLW_U0_addrb_UNCONNECTED;
  wire [0:0]NLW_U0_dina_UNCONNECTED;
  wire [0:0]NLW_U0_dinb_UNCONNECTED;
  wire [0:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_wea_UNCONNECTED;
  wire [0:0]NLW_U0_web_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     1.903721 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "SubPS.mem" *) 
  (* C_INIT_FILE_NAME = "SubPS.mif" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "1" *) 
  (* C_MEM_TYPE = "3" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  SubPS_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb(NLW_U0_addrb_UNCONNECTED[4:0]),
        .clka(clka),
        .clkb(NLW_U0_clkb_UNCONNECTED),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(NLW_U0_dina_UNCONNECTED[0]),
        .dinb(NLW_U0_dinb_UNCONNECTED[0]),
        .douta(douta),
        .doutb(NLW_U0_doutb_UNCONNECTED[0]),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(NLW_U0_ena_UNCONNECTED),
        .enb(NLW_U0_enb_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(NLW_U0_wea_UNCONNECTED[0]),
        .web(NLW_U0_web_UNCONNECTED[0]));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2024.1"
`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
RSqbsRZSIb+QlYJMfFv1T7uHQ7PiCEXQkl687MHGm2LgPB15GIYcPmqKUSXgtkLsIFes91PTAyyB
9H9cyY4ZUxedcRg/9ZOB5pm3zPqAbcvGPmg1ivMhr/MlS19t5lYKM2tQo+0Yd+arJXlVZu2BMnvn
+I3G9t9tJuWUIWKjI+I=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
VRSQ05ZaB6bIhFIQ823mTvlJaG9+5iW5C3+KxGjq0sq9ziCshKOLpOGPDMmOWDqA4uBaxC5IKISr
w8+A8mqbYjXo5m1g8sGjNaETS0HKJsK+l5Y++tN4IEUs+DwxgrPR/+LWtChuOzVkfC7BG3LVUEMj
zM3GAyGcXGJ3sdBItZAfsevyiy7kr4Fw+nk2hWytGteu1NZk3VzPE7KQHLkOlHBPXf6P0j8LpKcr
2oNDgQ/WaEmg6OOvFeJuaWDaee8Sn6wKP/caMyoGdSeczsPtRrJeoSRlbNHlxhCv7zg+Cn2AgwrR
PTqGsMrkhv9U0sq+waS0CmwChsk4WB7RspGYUg==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
tNziOjCznlvIl4dadmB9r23Duf+HQHWOuHmupEU3PJxrazHVtZdNKspG9sRXhF9mjbpnSiKYCdFK
Jr9W/dxUid36faFIPKQazVTuOiE0hkzVQAGpYxXjT/ITB/9EFBvgvP5L3EAhHv32x6MA1vkFSI7x
HrZ09YNFEF6T7DPTZE4=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
QCYfxgkUHlX1cre1q9aS3sVDIOX36YBK4ZwJXAVUwA6f1OQ77XibjpWJHt5FK9F0PcYp/j21pqzO
BRdkDcFLVAjxER4J5t5iMVhoeMk+3fpiKfYrm4WFl1ygsJsfFJP0jqO1OkjC8iFBtm3n6b7CTl1o
cjBbcBp8UgW6E8rf5inXA0dRqybnyxKJSnMFYLinvpVU6QEc4OKO7mi/i/s9p/efiP+CdQf0yDRU
Fw7o7x0D7tjBv943g5L+4wGZ2JYU+ISqn4Ajxy/bWTTJDe6T/15evhngS61MC8Xjamzc4YLZBP8o
ShfSLoeZeO+Hk5n3xzJRghM0DQ6Sj7NqXFY68w==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Uy8FDDy3dZQGAnMQV0HBesEs+/oZdaq35Kj1PGhy9J/+EBZm0nhhQgYtku8tWABW2jKAC1GtNTvo
uReQyr1hteMxTbD5OIuqv86eb1hXZVENlZ7ichG8auUjkeHAkaSYNbHOuDLIhSqHEL67XbcZ9zPG
1JOY3+VONSww0KYPcQbGSo/2DaC5C0Y+mZODRfJ4+b0WXjce6UaJetilBc3VtqqmodIM2d3HDawF
R0xVJfHj86rXmUkY+SNUw60zsV6raCY6G3k/rXpei1d6zn8tCThkKG5fwiWY8zA7kRdTFIlVKP9h
fb6kfzRBRT/BgVQ8d4RgEcEVV8m3u/Mf4KIlTw==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2023_11", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Pk1GeRlkUK9lt6DVXYVdtOABlzDEWQDcBsP/p+Wo5HaglDLG5b8gk08xTP3IcJ1RKcfuARPMGO2s
/VqFbnVADV90T1rhjIuWMcBnzYQK/ALUvwv11Uju9Gn0fvPIz52l3QBnpjHI1nlsFB7WeqkzVfHZ
tg9gO9bPHjHLjVd9BzH6McrEWY5RkZ0UBy0Fmh/SownJX1b0YGE7LdwKydEMEpyvb28bwTOwfEv/
4RtsfYtEvTjo6e1ZBm66D9IQmKUu32wzTfn5bFZHdyjZg6+HcTzvHMtQX2+AggXfP6FsO2/83qkb
0bfj226fnLhr32dJxtsaJS5OR63GYtzDJ05ITA==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
LCfWqKmUoUSVOTKNAl5p8n1hfz7SMU2kDOUMBjsDncgSFqiu2zUy1I6GSDrVnF/2umJG5/mWcpvi
rQaFJOlrJ8DNctSuavdlopRAwTMsVi6dAlNGrAawSiDIxtI3tN3MDVdMiH5H+pJMqMt59yXneyCf
2RRSRz2sUQK/aj0lXlqKjVJzVbk8HaBQ8akBJF4iWSMK4foIzJ6iO1EupYovuW6uEiO7jQRWezlW
pbbDenOHHWbfinuX5cbkjpTKHGsEKct65q+ZXJp60m3sconSK3Y2eLQxusuJ1FHDJ4GGKO8mEzCv
3cfGdXX3pVL81OfGO/JD1aMs9H98CO5ssbHqlw==

`pragma protect key_keyowner="Atrenta", key_keyname="ATR-SG-RSA-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=384)
`pragma protect key_block
A4S1e3DHcTeWzaDVuWDRb3Yf1BjiEsR1RtAeL0BJ7J/oPWMNj96MeGsUiHtZoiYqteTZxqax2cyZ
PV0cMLoBK4Ya8CyM+BTnkFA2ablsGt5Es4TgG/nFS9VEhmeKxu8boAsqW5697aiqOATJf/LucQh5
GOnPXHAuPrDj0A/fu8N2QduqGyysWUSc1KsoJ0/0noJYvLJ2yOhFi4uIUYQfG5LOuOrca5P43pqA
iwUKW/RrFXal2acJdFeXIKffZpKanSV97urdzKyBvf9EPV/M8g9uPFJJ1z6aS+FbknhVPs0pt6eD
+J/qib4gVp/HGnRo4YlxauUMv6Yv9wxiaObY6ttDfYf5p3uzWZMlf3i7YOzZwcd4aS/6+vkD28LG
L9piBIpLx2dvQy74RdvCVdvaP1LC6RMju9RfuXJhuX4ZAmDxRi0zQyRda838ikzwYeOCSKLIvRPb
nuJ8Zx2ot8EFqSeGaaRFaEMU6Zf5SptCUuVMHvSkinBewcwrLB5uiJTJ

`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="CDS_RSA_KEY_VER_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
gj+uMxV+tK4Di7pgSOE82FOBeWmUB1A7OKFOSMUW3qrmQ4/YhryfHMlWPxfAq8avQL7tnBTnRFEg
czbErdIcNzYjrM7Qq00QC/mTqmeQX4/apbqGvN+rwK4RR5oj22wfTib/UQNEQX6fbpi6PtmAeUR9
eShsfq+YWcf7z2Zw4Q+o4+E6m4/3CzU68vglNpzNsJ8S9/8XpdIrvAA/WRAX6OEOC4wlNIKDZsq/
+zMbFgSzN1rP844I/CDmxYM0NIzBWWhYBkPfJyQyigmUoXb84lDip0/Dmnq4EHvu7D/tZNnDl5st
JpftRfEpT6S8e/5MBeKUuhbfg6etHo/oFZvPKQ==

`pragma protect key_keyowner="Synplicity", key_keyname="SYNP15_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
aWTy3xv6SqKsldtLS2gY4KrTS8U+KtFNRHS314f6EYZy1MHE9t7oICJ8eNB8up8A+odoE23N3fJb
1alhaadeRWU2GjlIiK1LjZ5PQw+jb1u1GWtRiY+TcTlD75XUlqwykVBrCDfm565DmgZjZle9T3/t
WEfLo+m/8GfBe8trVnoftsk/XI00BMFXRzw8doPGDhNECS1NUrLebryb9iO5Hf4A/40dtslTARsR
nicN0KoIIyiQ+QzliqyXU/8VjS45inON8R0Kv9Qx46EXUp7bds5uQ7QycRhpLG0IPnMIweudU67w
eQmpHJzvZKBCZks/R0OafZx44H6Jib2+QazBCw==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-PREC-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
UGdPiChIPj1lSozqzCQx17Bi+8FWSuMUMzXUkDLH5zcP1t8tZLzh4CU4WAR8lmJxn8gH763fLp5c
RYU6zA0yxHzl2ksc5YRU1XEfQQT9ha8fQnz+18wVKcsa5UIOfMbGDwnS9yfX59ntG8CB0uF8bJKE
y1CS6U/1Stfs1w2mF94iDxI2n2GJlb1UPtWpmxMBI88hY0GktTPXP2Y7JKl8zRl/Lq0wIF8pHwXk
B4nOgKm6hfzPj0xZ6E/TuER/JE3fy8RSm24IlL/CUgpReEslEOYjQ4EKKZRG9/fxg26utQWW9p+G
fWVU53qrFGzBhKQ96Paj1ROkv6hDHyUb6n7uSw==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 78480)
`pragma protect data_block
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
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
