// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2024.1 (win64) Build 5076996 Wed May 22 18:37:14 MDT 2024
// Date        : Wed Oct 16 14:50:58 2024
// Host        : DESKTOP-B2190GF running 64-bit major release  (build 9200)
// Command     : write_verilog -mode timesim -nolib -sdf_anno true -force -file
//               C:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.sim/sim_1/impl/timing/xsim/JOIN_DDP_SIM_time_impl.v
// Design      : JOIN_DDP
// Purpose     : This verilog netlist is a timing simulation representation of the design and should not be modified or
//               synthesized. Please ensure that this netlist is used with the corresponding SDF file.
// Device      : xc7z010clg400-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps
`define XIL_TIMING

module FDCP_UNIQ_BASE_
   (Q,
    C,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(VCC_1),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(VCC_1),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_UNIQ_BASE_
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1138
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1139
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1140
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1141
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1142
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1143
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1144
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1145
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1146
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1147
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1148
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1149
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1150
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1151
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1152
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1153
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1154
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1155
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1156
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1157
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1158
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1159
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1160
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1161
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1162
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1163
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1164
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1165
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1166
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1167
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1168
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1169
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1170
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1171
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1172
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1173
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1174
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1175
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1176
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1177
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1178
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1179
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1180
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1181
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1182
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1183
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1184
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1185
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1186
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1187
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1188
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1189
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1190
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1191
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1192
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1193
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1194
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1195
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1196
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1197
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1198
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1199
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1200
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1201
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1202
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1203
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1204
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1205
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1206
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1207
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1208
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1209
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1210
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1211
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1212
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1213
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1214
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1215
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1216
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1217
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1218
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1219
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1220
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1221
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1222
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1223
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1224
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1225
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1226
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1227
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1228
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1229
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1230
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1231
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1232
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1233
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1234
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1235
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1236
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1237
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1238
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1239
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1240
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1241
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1242
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1243
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1244
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1245
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1246
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1247
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1248
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1249
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1250
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1251
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1252
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1253
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1254
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1255
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1256
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1257
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1258
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1259
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1260
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1261
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1262
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1263
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1264
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1265
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1266
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1267
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1268
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1269
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1270
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1271
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1272
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1273
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1274
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1275
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1276
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1277
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1278
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1279
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1280
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1281
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1282
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1283
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1284
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1285
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1286
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1287
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1288
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1289
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1290
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1291
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1292
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1293
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1294
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1295
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1296
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1297
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1298
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1299
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1300
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1301
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1302
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1303
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1304
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1305
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1306
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1307
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1308
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1309
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1310
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1311
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1312
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1313
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1314
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1315
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1316
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1317
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1318
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1319
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1320
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1321
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1322
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1323
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1324
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1325
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1326
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1327
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1328
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1329
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1330
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1331
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1332
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1333
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1334
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1335
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1336
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1337
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1338
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1339
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1340
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1341
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1342
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1343
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1344
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1345
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1346
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1347
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1348
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1349
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1350
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1351
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1352
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1353
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1354
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1355
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1356
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1357
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1358
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1359
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1360
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1361
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1362
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1363
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1364
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1365
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1366
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1367
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1368
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1369
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1370
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1371
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1372
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1373
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1374
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1375
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1376
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1377
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1378
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1379
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1380
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1381
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1382
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1383
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1384
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1385
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1386
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1387
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1388
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1389
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1390
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1391
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1392
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1393
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1394
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1395
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1396
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1397
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1398
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1399
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1400
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1401
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1402
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1403
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1404
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1405
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1406
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1407
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1408
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1409
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1410
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1411
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1412
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1413
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1414
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1415
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1416
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1417
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1418
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1419
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1420
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1421
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1422
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1423
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1424
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1425
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1426
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1427
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1428
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1429
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1430
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1431
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1432
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1433
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1434
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1435
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1436
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1437
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1438
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1439
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1440
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1441
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1442
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1443
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1444
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1445
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1446
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1447
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1448
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1449
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1450
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1451
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1452
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1453
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1454
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1455
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1456
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1457
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1458
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1459
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1460
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1461
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1462
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1463
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1464
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1465
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1466
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1467
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1468
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1469
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1470
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1471
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1472
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1473
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1474
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1475
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1476
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1477
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1478
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1479
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1480
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1481
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1482
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1483
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1484
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1485
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1486
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1487
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1488
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1489
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1490
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1491
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1492
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1493
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1494
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1495
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1496
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1497
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1498
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1499
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1500
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1501
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1502
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1503
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1504
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1505
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1506
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1507
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1508
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1509
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1510
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1511
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1512
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1513
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1514
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1515
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1516
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

(* dont_touch = "true" *) 
module ARB
   (ARB_Send_in_a,
    ARB_Ack_out_a,
    ARB_Send_in_b,
    ARB_Ack_out_b,
    ARB_Za,
    ARB_Zb,
    MR,
    ARB_Ga,
    ARB_Gb);
  input ARB_Send_in_a;
  input ARB_Ack_out_a;
  input ARB_Send_in_b;
  input ARB_Ack_out_b;
  input ARB_Za;
  input ARB_Zb;
  input MR;
  output ARB_Ga;
  output ARB_Gb;

  wire ARB_Ack_out_a;
  wire ARB_Ack_out_b;
  wire ARB_Send_in_a;
  wire ARB_Send_in_b;
  wire ARB_Za;
  wire ARB_Zb;
  wire MR;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire nand6_out;
  (* DONT_TOUCH *) wire nand7_out;
  (* DONT_TOUCH *) wire nand8_out;

  assign ARB_Ga = nand8_out;
  assign ARB_Gb = nand7_out;
  LUT3 #(
    .INIT(8'h7F)) 
    nand1_out_inferred_i_1
       (.I0(ARB_Send_in_a),
        .I1(nand2_out),
        .I2(ARB_Ack_out_a),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'hDF)) 
    nand2_out_inferred_i_1
       (.I0(ARB_Za),
        .I1(MR),
        .I2(nand1_out),
        .O(nand2_out));
  LUT3 #(
    .INIT(8'hDF)) 
    nand3_out_inferred_i_1
       (.I0(nand4_out),
        .I1(MR),
        .I2(ARB_Zb),
        .O(nand3_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(ARB_Ack_out_b),
        .I2(ARB_Send_in_b),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'hBF)) 
    nand5_out_inferred_i_1
       (.I0(MR),
        .I1(nand6_out),
        .I2(nand2_out),
        .O(nand5_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand6_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand6_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand7_out_inferred_i_1
       (.I0(nand8_out),
        .I1(nand5_out),
        .O(nand7_out));
  LUT3 #(
    .INIT(8'hBF)) 
    nand8_out_inferred_i_1
       (.I0(MR),
        .I1(nand6_out),
        .I2(nand7_out),
        .O(nand8_out));
endmodule

(* dont_touch = "true" *) 
module B_Stage
   (PACKET_IN,
    Send_in,
    Ack_in_a,
    Ack_in_b,
    MR,
    Send_out_a,
    Send_out_b,
    Ack_out,
    PACKET_OUT);
  input [37:0]PACKET_IN;
  input Send_in;
  input Ack_in_a;
  input Ack_in_b;
  input MR;
  output Send_out_a;
  output Send_out_b;
  output Ack_out;
  output [37:0]PACKET_OUT;

  wire Ack_in_a;
  wire Ack_in_b;
  wire Ack_out;
  (* DONT_TOUCH *) wire BR;
  wire CP;
  (* DONT_TOUCH *) wire [37:0]DL;
  (* DONT_TOUCH *) wire MF;
  wire MR;
  wire [37:0]\^PACKET_IN ;
  wire Send_in;
  wire Send_out_a;
  wire Send_out_b;
  (* DONT_TOUCH *) wire [6:0]dest;

  assign BR = PACKET_IN[18];
  assign PACKET_OUT[37:19] = DL[37:19];
  assign PACKET_OUT[18] = MF;
  assign PACKET_OUT[17:0] = DL[17:0];
  assign \^PACKET_IN [37:27] = PACKET_IN[37:27];
  assign \^PACKET_IN [19] = PACKET_IN[19];
  assign \^PACKET_IN [17:0] = PACKET_IN[17:0];
  assign dest = PACKET_IN[26:20];
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(BR),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[0]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[1]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[2]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[3]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[4]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[5]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[6]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  CB cb
       (.BR(BR),
        .CB_Ack_in_a(Ack_in_a),
        .CB_Ack_in_b(Ack_in_b),
        .CB_Ack_out(Ack_out),
        .CB_CP(CP),
        .CB_Send_in(Send_in),
        .CB_Send_out_a(Send_out_a),
        .CB_Send_out_b(Send_out_b),
        .MR(MR));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/SubPS/SubPS.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  SubPS subps
       (.addra(dest[4:0]),
        .clka(CP),
        .douta(MF));
endmodule

(* dont_touch = "true" *) 
module C
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__5 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__6 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__7 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__8 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* dont_touch = "true" *) 
module CB
   (CB_Send_in,
    CB_Ack_in_a,
    CB_Ack_in_b,
    MR,
    BR,
    CB_Ack_out,
    CB_Send_out_a,
    CB_Send_out_b,
    CB_CP);
  input CB_Send_in;
  input CB_Ack_in_a;
  input CB_Ack_in_b;
  input MR;
  input BR;
  output CB_Ack_out;
  output CB_Send_out_a;
  output CB_Send_out_b;
  output CB_CP;

  wire BR;
  wire CB_Ack_in_a;
  wire CB_Ack_in_b;
  wire CB_Send_in;
  wire CB_Send_out_a;
  wire CB_Send_out_b;
  (* DONT_TOUCH *) wire DL;
  wire MR;
  (* DONT_TOUCH *) wire and_1;
  (* DONT_TOUCH *) wire cf_ack_out;
  (* DONT_TOUCH *) wire cf_send_out;
  (* DONT_TOUCH *) wire cp;

  assign CB_Ack_out = cf_ack_out;
  assign CB_CP = cp;
  LUT2 #(
    .INIT(4'hE)) 
    CB_Send_out_a_INST_0
       (.I0(cf_send_out),
        .I1(DL),
        .O(CB_Send_out_a));
  LUT2 #(
    .INIT(4'hB)) 
    CB_Send_out_b_INST_0
       (.I0(cf_send_out),
        .I1(DL),
        .O(CB_Send_out_b));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b1)) 
    DL_reg
       (.C(cp),
        .CE(1'b1),
        .CLR(MR),
        .D(BR),
        .Q(DL));
  LUT2 #(
    .INIT(4'h8)) 
    and_1_inferred_i_1
       (.I0(CB_Ack_in_a),
        .I1(CB_Ack_in_b),
        .O(and_1));
  (* DONT_TOUCH *) 
  CF cf
       (.Ack_in(and_1),
        .Ack_out(cf_ack_out),
        .CP(cp),
        .MR(MR),
        .Send_in(CB_Send_in),
        .Send_out(cf_send_out));
endmodule

(* dont_touch = "true" *) 
module CE
   (CE_Send_in,
    CE_Ack_in,
    MR,
    Exb,
    CE_Ack_out,
    CE_Send_out,
    CE_CP);
  input CE_Send_in;
  input CE_Ack_in;
  input MR;
  input Exb;
  output CE_Ack_out;
  output CE_Send_out;
  output CE_CP;

  wire CE_Ack_in;
  wire CE_Send_in;
  (* DONT_TOUCH *) wire DL;
  wire Exb;
  wire MR;
  (* DONT_TOUCH *) wire and_1;
  (* DONT_TOUCH *) wire cf_ack_out;
  (* DONT_TOUCH *) wire cf_send_out;
  (* DONT_TOUCH *) wire cp;
  (* DONT_TOUCH *) wire or_1;
  (* DONT_TOUCH *) wire or_2;

  assign CE_Ack_out = cf_ack_out;
  assign CE_CP = cp;
  assign CE_Send_out = or_1;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    DL_reg
       (.C(cp),
        .CE(1'b1),
        .D(Exb),
        .Q(DL),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    and_1_inferred_i_1
       (.I0(or_2),
        .I1(CE_Ack_in),
        .O(and_1));
  (* DONT_TOUCH *) 
  CF__1 cf
       (.Ack_in(and_1),
        .Ack_out(cf_ack_out),
        .CP(cp),
        .MR(MR),
        .Send_in(CE_Send_in),
        .Send_out(cf_send_out));
  LUT2 #(
    .INIT(4'hB)) 
    or_1_inferred_i_1
       (.I0(cf_send_out),
        .I1(DL),
        .O(or_1));
  LUT2 #(
    .INIT(4'hE)) 
    or_2_inferred_i_1
       (.I0(DL),
        .I1(cf_send_out),
        .O(or_2));
endmodule

(* ORIG_REF_NAME = "CE" *) (* dont_touch = "true" *) 
module CE__1
   (CE_Send_in,
    CE_Ack_in,
    MR,
    Exb,
    CE_Ack_out,
    CE_Send_out,
    CE_CP);
  input CE_Send_in;
  input CE_Ack_in;
  input MR;
  input Exb;
  output CE_Ack_out;
  output CE_Send_out;
  output CE_CP;

  wire CE_Ack_in;
  wire CE_Send_in;
  (* DONT_TOUCH *) wire DL;
  wire Exb;
  wire MR;
  (* DONT_TOUCH *) wire and_1;
  (* DONT_TOUCH *) wire cf_ack_out;
  (* DONT_TOUCH *) wire cf_send_out;
  (* DONT_TOUCH *) wire cp;
  (* DONT_TOUCH *) wire or_1;
  (* DONT_TOUCH *) wire or_2;

  assign CE_Ack_out = cf_ack_out;
  assign CE_CP = cp;
  assign CE_Send_out = or_1;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    DL_reg
       (.C(cp),
        .CE(1'b1),
        .D(Exb),
        .Q(DL),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    and_1_inferred_i_1
       (.I0(or_2),
        .I1(CE_Ack_in),
        .O(and_1));
  (* DONT_TOUCH *) 
  CF__4 cf
       (.Ack_in(and_1),
        .Ack_out(cf_ack_out),
        .CP(cp),
        .MR(MR),
        .Send_in(CE_Send_in),
        .Send_out(cf_send_out));
  LUT2 #(
    .INIT(4'hB)) 
    or_1_inferred_i_1
       (.I0(cf_send_out),
        .I1(DL),
        .O(or_1));
  LUT2 #(
    .INIT(4'hE)) 
    or_2_inferred_i_1
       (.I0(DL),
        .I1(cf_send_out),
        .O(or_2));
endmodule

(* dont_touch = "true" *) 
module CF
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__9 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_2ns__1 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CF" *) (* dont_touch = "true" *) 
module CF__1
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__23 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_2ns__3 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__22 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns__2 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CF" *) (* dont_touch = "true" *) 
module CF__2
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__25 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_2ns__5 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__24 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns__4 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CF" *) (* dont_touch = "true" *) 
module CF__3
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__27 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_2ns__7 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__26 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns__6 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CF" *) (* dont_touch = "true" *) 
module CF__4
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__29 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_2ns__9 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__28 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns__8 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* dont_touch = "true" *) 
module CJ
   (Send_in,
    Ack_in,
    MR,
    G,
    Z_1,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  input G;
  input Z_1;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  wire G;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  wire Send_out;
  wire Z_1;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  LUT1 #(
    .INIT(2'h1)) 
    Send_out_INST_0
       (.I0(LD_out),
        .O(Send_out));
  (* DONT_TOUCH *) 
  Delay_4ns__1 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__2 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__3 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__4 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    nand3_out_inferred_i_1
       (.I0(Z_1),
        .I1(Send_in),
        .I2(Ack_in),
        .I3(LA_out),
        .I4(G),
        .I5(LC_out),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CJ" *) (* dont_touch = "true" *) 
module CJ__1
   (Send_in,
    Ack_in,
    MR,
    G,
    Z_1,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  input G;
  input Z_1;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  wire G;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  wire Send_out;
  wire Z_1;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  LUT1 #(
    .INIT(2'h1)) 
    Send_out_INST_0
       (.I0(LD_out),
        .O(Send_out));
  (* DONT_TOUCH *) 
  Delay_4ns__33 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__32 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__31 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__30 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    nand3_out_inferred_i_1
       (.I0(Z_1),
        .I1(Send_in),
        .I2(Ack_in),
        .I3(LA_out),
        .I4(G),
        .I5(LC_out),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* dont_touch = "true" *) 
module CM
   (Send_in_a,
    Send_in_b,
    Ack_in,
    MR,
    Ack_out_a,
    Ack_out_b,
    Send_out,
    CP_a,
    CP_b,
    AEB);
  input Send_in_a;
  input Send_in_b;
  input Ack_in;
  input MR;
  output Ack_out_a;
  output Ack_out_b;
  output Send_out;
  output CP_a;
  output CP_b;
  output AEB;

  wire Ack_in;
  wire MR;
  wire Send_in_a;
  wire Send_in_b;
  (* DONT_TOUCH *) wire ack_out_a;
  (* DONT_TOUCH *) wire ack_out_b;
  wire cj_a_i_1_n_0;
  wire cj_b_i_1_n_0;
  (* DONT_TOUCH *) wire cp_a;
  (* DONT_TOUCH *) wire cp_b;
  (* DONT_TOUCH *) wire ga;
  (* DONT_TOUCH *) wire gb;
  (* DONT_TOUCH *) wire nor1;
  (* DONT_TOUCH *) wire nor2;
  (* DONT_TOUCH *) wire nor3;
  (* DONT_TOUCH *) wire send_in_b;
  (* DONT_TOUCH *) wire send_out_a;
  wire send_out_b;

  assign AEB = nor2;
  assign Ack_out_a = ack_out_a;
  assign Ack_out_b = ack_out_b;
  assign CP_a = cp_a;
  assign CP_b = cp_b;
  assign Send_out = nor1;
  (* DONT_TOUCH *) 
  ARB arb
       (.ARB_Ack_out_a(ack_out_a),
        .ARB_Ack_out_b(ack_out_b),
        .ARB_Ga(ga),
        .ARB_Gb(gb),
        .ARB_Send_in_a(Send_in_a),
        .ARB_Send_in_b(Send_in_b),
        .ARB_Za(cj_b_i_1_n_0),
        .ARB_Zb(cj_a_i_1_n_0),
        .MR(MR));
  (* DONT_TOUCH *) 
  CJ__1 cj_a
       (.Ack_in(Ack_in),
        .Ack_out(ack_out_a),
        .CP(cp_a),
        .G(ga),
        .MR(MR),
        .Send_in(Send_in_a),
        .Send_out(send_out_a),
        .Z_1(cj_a_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    cj_a_i_1
       (.I0(cp_b),
        .O(cj_a_i_1_n_0));
  (* DONT_TOUCH *) 
  CJ cj_b
       (.Ack_in(Ack_in),
        .Ack_out(ack_out_b),
        .CP(cp_b),
        .G(gb),
        .MR(MR),
        .Send_in(Send_in_b),
        .Send_out(send_out_b),
        .Z_1(cj_b_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    cj_b_i_1
       (.I0(cp_a),
        .O(cj_b_i_1_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(send_in_b));
  LUT2 #(
    .INIT(4'h1)) 
    nor1_inferred_i_1
       (.I0(send_out_a),
        .I1(send_out_b),
        .O(nor1));
  LUT2 #(
    .INIT(4'h1)) 
    nor2_inferred_i_1
       (.I0(cp_a),
        .I1(nor3),
        .O(nor2));
  LUT3 #(
    .INIT(8'h01)) 
    nor3_inferred_i_1
       (.I0(cp_b),
        .I1(nor2),
        .I2(MR),
        .O(nor3));
endmodule

(* CHECK_LICENSE_TYPE = "CMEM,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module CMEM
   (clka,
    addra,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [15:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [15:0]douta;
  wire NLW_U0_clkb_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_ena_UNCONNECTED;
  wire NLW_U0_enb_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [4:0]NLW_U0_addrb_UNCONNECTED;
  wire [15:0]NLW_U0_dina_UNCONNECTED;
  wire [15:0]NLW_U0_dinb_UNCONNECTED;
  wire [15:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [15:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [15:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_wea_UNCONNECTED;
  wire [0:0]NLW_U0_web_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.7096 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "CMEM.mem" *) 
  (* C_INIT_FILE_NAME = "CMEM.mif" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "1" *) 
  (* C_MEM_TYPE = "3" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "16" *) 
  (* C_READ_WIDTH_B = "16" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "16" *) 
  (* C_WRITE_WIDTH_B = "16" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  CMEM_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb(NLW_U0_addrb_UNCONNECTED[4:0]),
        .clka(clka),
        .clkb(NLW_U0_clkb_UNCONNECTED),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(NLW_U0_dina_UNCONNECTED[15:0]),
        .dinb(NLW_U0_dinb_UNCONNECTED[15:0]),
        .douta(douta),
        .doutb(NLW_U0_doutb_UNCONNECTED[15:0]),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(NLW_U0_ena_UNCONNECTED),
        .enb(NLW_U0_enb_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[15:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[15:0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(NLW_U0_wea_UNCONNECTED[0]),
        .web(NLW_U0_web_UNCONNECTED[0]));
endmodule

(* dont_touch = "true" *) 
module COPY_Stage
   (Send_in,
    Ack_in,
    MR,
    PACKET_IN,
    Send_out,
    Ack_out,
    PACKET_OUT);
  input Send_in;
  input Ack_in;
  input MR;
  input [39:0]PACKET_IN;
  output Send_out;
  output Ack_out;
  output [37:0]PACKET_OUT;

  (* DONT_TOUCH *) wire [6:0]ADDER;
  wire ADDER_inferred_i_8_n_0;
  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire [39:0]DL;
  (* DONT_TOUCH *) wire EXB;
  (* DONT_TOUCH *) wire FEB;
  wire MR;
  wire [39:0]PACKET_IN;
  wire Send_in;
  wire Send_out;
  (* DONT_TOUCH *) wire [6:0]dest;
  (* DONT_TOUCH *) wire [6:0]mux1;
  (* DONT_TOUCH *) wire mux2;

  assign PACKET_OUT[37:27] = DL[39:29];
  assign PACKET_OUT[26:20] = mux1;
  assign PACKET_OUT[19] = mux2;
  assign PACKET_OUT[18] = DL[19];
  assign PACKET_OUT[17:0] = DL[17:0];
  LUT3 #(
    .INIT(8'h78)) 
    ADDER_inferred_i_1
       (.I0(ADDER_inferred_i_8_n_0),
        .I1(dest[5]),
        .I2(dest[6]),
        .O(ADDER[6]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    ADDER_inferred_i_2
       (.I0(dest[3]),
        .I1(dest[1]),
        .I2(dest[0]),
        .I3(dest[2]),
        .I4(dest[4]),
        .I5(dest[5]),
        .O(ADDER[5]));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    ADDER_inferred_i_3
       (.I0(dest[2]),
        .I1(dest[0]),
        .I2(dest[1]),
        .I3(dest[3]),
        .I4(dest[4]),
        .O(ADDER[4]));
  LUT4 #(
    .INIT(16'h7F80)) 
    ADDER_inferred_i_4
       (.I0(dest[1]),
        .I1(dest[0]),
        .I2(dest[2]),
        .I3(dest[3]),
        .O(ADDER[3]));
  LUT3 #(
    .INIT(8'h78)) 
    ADDER_inferred_i_5
       (.I0(dest[0]),
        .I1(dest[1]),
        .I2(dest[2]),
        .O(ADDER[2]));
  LUT2 #(
    .INIT(4'h6)) 
    ADDER_inferred_i_6
       (.I0(dest[0]),
        .I1(dest[1]),
        .O(ADDER[1]));
  LUT1 #(
    .INIT(2'h1)) 
    ADDER_inferred_i_7
       (.I0(dest[0]),
        .O(ADDER[0]));
  LUT5 #(
    .INIT(32'h80000000)) 
    ADDER_inferred_i_8
       (.I0(dest[4]),
        .I1(dest[2]),
        .I2(dest[0]),
        .I3(dest[1]),
        .I4(dest[3]),
        .O(ADDER_inferred_i_8_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst
       (.I0(DL[28]),
        .O(dest[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__0
       (.I0(DL[27]),
        .O(dest[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__1
       (.I0(DL[26]),
        .O(dest[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__2
       (.I0(DL[25]),
        .O(dest[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__3
       (.I0(DL[24]),
        .O(dest[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__4
       (.I0(DL[23]),
        .O(dest[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__5
       (.I0(DL[22]),
        .O(dest[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[38] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[38]),
        .Q(DL[38]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[39] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[39]),
        .Q(DL[39]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  CX2 cx2
       (.Ack_in(Ack_in),
        .Ack_out(Ack_out),
        .CP(CP),
        .CPY(PACKET_IN[18]),
        .EXB(EXB),
        .FEB(FEB),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(Send_out));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(EXB));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_1
       (.I0(ADDER[6]),
        .I1(dest[6]),
        .I2(FEB),
        .O(mux1[6]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_2
       (.I0(ADDER[5]),
        .I1(dest[5]),
        .I2(FEB),
        .O(mux1[5]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_3
       (.I0(ADDER[4]),
        .I1(dest[4]),
        .I2(FEB),
        .O(mux1[4]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_4
       (.I0(ADDER[3]),
        .I1(dest[3]),
        .I2(FEB),
        .O(mux1[3]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_5
       (.I0(ADDER[2]),
        .I1(dest[2]),
        .I2(FEB),
        .O(mux1[2]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_6
       (.I0(ADDER[1]),
        .I1(dest[1]),
        .I2(FEB),
        .O(mux1[1]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_7
       (.I0(ADDER[0]),
        .I1(dest[0]),
        .I2(FEB),
        .O(mux1[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    mux2_inferred_i_1
       (.I0(DL[20]),
        .I1(FEB),
        .I2(DL[21]),
        .O(mux2));
endmodule

(* dont_touch = "true" *) 
module CX2
   (Send_in,
    Ack_in,
    CPY,
    EXB,
    MR,
    Ack_out,
    Send_out,
    CP,
    FEB);
  input Send_in;
  input Ack_in;
  input CPY;
  input EXB;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;
  output FEB;

  wire Ack_in;
  wire CPY;
  (* DONT_TOUCH *) wire DL1S;
  wire DL1S_reg_C_n_0;
  wire DL1S_reg_LDC_n_0;
  wire DL1S_reg_P_n_0;
  (* DONT_TOUCH *) wire DL_cpy;
  (* DONT_TOUCH *) wire DL_exb;
  wire EXB;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire and1_out;
  (* DONT_TOUCH *) wire and2_out;
  (* DONT_TOUCH *) wire cd;
  (* DONT_TOUCH *) wire cf1_ack_out;
  (* DONT_TOUCH *) wire cf1_cp;
  (* DONT_TOUCH *) wire cf1_send_out;
  (* DONT_TOUCH *) wire cf2_ack_out;
  (* DONT_TOUCH *) wire cf2_cp;
  (* DONT_TOUCH *) wire cf2_send_out;
  (* DONT_TOUCH *) wire cp3;
  (* DONT_TOUCH *) wire d;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nor1_out;
  (* DONT_TOUCH *) wire nor2_out;
  (* DONT_TOUCH *) wire or1_out;
  (* DONT_TOUCH *) wire or2_out;
  (* DONT_TOUCH *) wire sd;
  wire NLW_DL1S_reg_Q_UNCONNECTED;

  assign Ack_out = cf1_ack_out;
  assign CP = cf1_cp;
  assign FEB = nor2_out;
  assign Send_out = and1_out;
  LUT3 #(
    .INIT(8'hB8)) 
    DL1S_inferred_i_1
       (.I0(DL1S_reg_P_n_0),
        .I1(DL1S_reg_LDC_n_0),
        .I2(DL1S_reg_C_n_0),
        .O(DL1S));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCP_UNIQ_BASE_ DL1S_reg
       (.C(cp3),
        .CLR(MR),
        .D(d),
        .PRE(sd),
        .Q(NLW_DL1S_reg_Q_UNCONNECTED));
  FDCE #(
    .INIT(1'b0)) 
    DL1S_reg_C
       (.C(cp3),
        .CE(1'b1),
        .CLR(MR),
        .D(d),
        .Q(DL1S_reg_C_n_0));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    DL1S_reg_LDC
       (.CLR(MR),
        .D(1'b1),
        .G(sd),
        .GE(1'b1),
        .Q(DL1S_reg_LDC_n_0));
  FDPE #(
    .INIT(1'b1)) 
    DL1S_reg_P
       (.C(cp3),
        .CE(1'b1),
        .D(d),
        .PRE(sd),
        .Q(DL1S_reg_P_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    DL_cpy_reg
       (.C(cf1_cp),
        .CE(1'b1),
        .CLR(MR),
        .D(CPY),
        .Q(DL_cpy));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    DL_exb_reg
       (.C(cf1_cp),
        .CE(1'b1),
        .D(EXB),
        .PRE(MR),
        .Q(DL_exb));
  LUT2 #(
    .INIT(4'h8)) 
    and1_out_inferred_i_1
       (.I0(nand2_out),
        .I1(cf2_send_out),
        .O(and1_out));
  LUT3 #(
    .INIT(8'h20)) 
    and2_out_inferred_i_1
       (.I0(or1_out),
        .I1(DL1S),
        .I2(Ack_in),
        .O(and2_out));
  LUT1 #(
    .INIT(2'h1)) 
    cd_inferred_i_1
       (.I0(MR),
        .O(cd));
  (* DONT_TOUCH *) 
  CF__2 cf1
       (.Ack_in(and2_out),
        .Ack_out(cf1_ack_out),
        .CP(cf1_cp),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(cf1_send_out));
  (* DONT_TOUCH *) 
  CF__3 cf2
       (.Ack_in(Ack_in),
        .Ack_out(cf2_ack_out),
        .CP(cf2_cp),
        .MR(MR),
        .Send_in(nand1_out),
        .Send_out(cf2_send_out));
  LUT1 #(
    .INIT(2'h1)) 
    cp3_inferred_i_1
       (.I0(cf2_cp),
        .O(cp3));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(d));
  LUT3 #(
    .INIT(8'hBF)) 
    nand1_out_inferred_i_1
       (.I0(cf1_send_out),
        .I1(DL_exb),
        .I2(DL_cpy),
        .O(nand1_out));
  LUT2 #(
    .INIT(4'hB)) 
    nand2_out_inferred_i_1
       (.I0(cf1_send_out),
        .I1(DL_exb),
        .O(nand2_out));
  LUT2 #(
    .INIT(4'h1)) 
    nor1_out_inferred_i_1
       (.I0(cf2_cp),
        .I1(nor2_out),
        .O(nor1_out));
  LUT2 #(
    .INIT(4'h1)) 
    nor2_out_inferred_i_1
       (.I0(cf1_cp),
        .I1(nor1_out),
        .O(nor2_out));
  LUT2 #(
    .INIT(4'hE)) 
    or1_out_inferred_i_1
       (.I0(DL_exb),
        .I1(cf1_send_out),
        .O(or1_out));
  LUT2 #(
    .INIT(4'hE)) 
    or2_out_inferred_i_1
       (.I0(cf2_ack_out),
        .I1(Ack_in),
        .O(or2_out));
  LUT1 #(
    .INIT(2'h1)) 
    sd_inferred_i_1
       (.I0(or2_out),
        .O(sd));
endmodule

(* ORIG_REF_NAME = "C" *) (* dont_touch = "true" *) 
module C__1
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__13 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__12 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__11 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__10 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "C" *) (* dont_touch = "true" *) 
module C__2
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__17 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__16 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__15 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__14 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "C" *) (* dont_touch = "true" *) 
module C__3
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__21 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__20 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__19 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__18 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* CHECK_LICENSE_TYPE = "DMEM,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module DMEM
   (clka,
    wea,
    addra,
    dina,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [15:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [15:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [15:0]dina;
  wire [15:0]douta;
  wire [0:0]wea;
  wire NLW_U0_clkb_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_ena_UNCONNECTED;
  wire NLW_U0_enb_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [4:0]NLW_U0_addrb_UNCONNECTED;
  wire [15:0]NLW_U0_dinb_UNCONNECTED;
  wire [15:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [15:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [15:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_web_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.87285 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "DMEM.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "0" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "16" *) 
  (* C_READ_WIDTH_B = "16" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "16" *) 
  (* C_WRITE_WIDTH_B = "16" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  DMEM_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb(NLW_U0_addrb_UNCONNECTED[4:0]),
        .clka(clka),
        .clkb(NLW_U0_clkb_UNCONNECTED),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(dina),
        .dinb(NLW_U0_dinb_UNCONNECTED[15:0]),
        .douta(douta),
        .doutb(NLW_U0_doutb_UNCONNECTED[15:0]),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(NLW_U0_ena_UNCONNECTED),
        .enb(NLW_U0_enb_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[15:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[15:0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(wea),
        .web(NLW_U0_web_UNCONNECTED[0]));
endmodule

(* dont_touch = "true" *) 
module Delay_2ns
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(t04));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(t05));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__1
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(t04));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(t05));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__2
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(t04));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(t05));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__3
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(t04));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(t05));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__4
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(t04));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(t05));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__5
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(t04));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(t05));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__6
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(t04));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(t05));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__7
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(t04));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(t05));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__8
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(t04));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(t05));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__9
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(t04));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(t05));
endmodule

(* dont_touch = "true" *) 
module Delay_4ns
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__1
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__10
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__11
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__12
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__13
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__14
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__15
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__16
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__17
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__18
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__19
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__2
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__20
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__21
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__22
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__23
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__24
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__25
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__26
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__27
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__28
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__29
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__3
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__30
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__31
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__32
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__33
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__4
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__5
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__6
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__7
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__8
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__9
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;
  (* DONT_TOUCH *) wire t08;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(t08));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_09
       (.I0(t08),
        .O(dout));
endmodule

(* dont_touch = "true" *) 
module ENTRY_FD
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1327 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1328 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1329 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1330 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1331 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1332 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1333 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1334 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1335 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1336 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1337 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1338 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1339 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1340 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1341 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1342 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1343 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1344 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1345 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__1
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_UNIQ_BASE_ \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1138 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1139 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1140 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1141 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1142 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1143 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1144 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1145 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1146 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1147 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1148 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1149 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1150 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1151 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1152 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1153 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1154 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1155 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__10
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1498 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1499 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1500 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1501 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1502 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1503 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1504 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1505 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1506 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1507 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1508 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1509 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1510 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1511 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1512 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1513 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1514 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1515 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1516 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__11
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1156 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1157 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1158 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1159 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1160 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1161 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1162 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1163 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1164 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1165 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1166 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1167 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1168 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1169 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1170 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1171 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1172 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1173 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1174 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__12
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1175 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1176 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1177 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1178 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1179 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1180 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1181 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1182 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1183 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1184 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1185 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1186 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1187 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1188 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1189 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1190 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1191 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1192 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1193 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__13
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1194 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1195 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1196 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1197 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1198 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1199 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1200 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1201 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1202 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1203 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1204 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1205 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1206 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1207 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1208 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1209 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1210 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1211 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1212 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__14
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1213 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1214 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1215 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1216 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1217 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1218 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1219 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1220 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1221 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1222 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1223 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1224 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1225 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1226 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1227 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1228 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1229 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1230 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1231 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__15
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1232 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1233 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1234 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1235 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1236 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1237 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1238 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1239 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1240 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1241 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1242 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1243 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1244 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1245 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1246 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1247 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1248 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1249 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1250 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__16
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1251 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1252 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1253 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1254 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1255 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1256 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1257 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1258 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1259 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1260 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1261 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1262 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1263 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1264 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1265 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1266 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1267 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1268 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1269 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__17
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1270 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1271 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1272 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1273 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1274 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1275 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1276 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1277 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1278 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1279 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1280 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1281 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1282 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1283 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1284 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1285 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1286 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1287 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1288 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__18
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1289 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1290 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1291 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1292 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1293 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1294 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1295 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1296 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1297 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1298 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1299 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1300 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1301 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1302 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1303 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1304 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1305 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1306 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1307 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__19
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1308 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1309 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1310 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1311 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1312 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1313 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1314 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1315 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1316 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1317 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1318 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1319 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1320 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1321 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1322 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1323 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1324 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1325 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1326 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__2
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1346 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1347 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1348 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1349 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1350 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1351 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1352 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1353 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1354 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1355 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1356 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1357 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1358 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1359 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1360 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1361 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1362 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1363 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1364 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__3
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1365 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1366 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1367 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1368 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1369 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1370 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1371 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1372 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1373 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1374 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1375 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1376 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1377 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1378 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1379 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1380 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1381 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1382 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1383 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__4
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1384 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1385 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1386 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1387 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1388 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1389 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1390 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1391 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1392 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1393 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1394 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1395 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1396 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1397 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1398 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1399 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1400 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1401 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1402 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__5
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1403 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1404 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1405 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1406 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1407 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1408 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1409 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1410 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1411 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1412 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1413 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1414 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1415 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1416 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1417 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1418 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1419 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1420 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1421 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__6
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1422 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1423 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1424 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1425 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1426 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1427 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1428 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1429 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1430 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1431 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1432 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1433 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1434 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1435 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1436 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1437 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1438 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1439 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1440 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__7
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1441 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1442 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1443 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1444 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1445 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1446 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1447 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1448 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1449 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1450 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1451 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1452 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1453 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1454 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1455 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1456 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1457 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1458 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1459 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__8
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1460 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1461 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1462 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1463 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1464 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1465 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1466 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1467 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1468 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1469 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1470 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1471 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1472 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1473 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1474 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1475 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1476 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1477 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1478 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__9
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1479 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1480 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1481 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1482 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1483 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1484 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1485 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1486 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1487 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1488 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1489 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1490 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1491 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1492 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1493 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1494 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1495 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1496 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1497 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* dont_touch = "true" *) 
module FP_Stage
   (PACKET_IN,
    DEL,
    Send_in,
    Ack_in,
    MR,
    Send_out,
    Ack_out,
    WRITE_DATA,
    PACKET_OUT,
    WRITE_EN,
    LOAD_FLG);
  input [61:0]PACKET_IN;
  input DEL;
  input Send_in;
  input Ack_in;
  input MR;
  output Send_out;
  output Ack_out;
  output [15:0]WRITE_DATA;
  output [39:0]PACKET_OUT;
  output WRITE_EN;
  output LOAD_FLG;

  wire ALU1__0;
  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire BR;
  (* DONT_TOUCH *) wire C;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire CPY;
  wire DEL;
  (* DONT_TOUCH *) wire [61:0]DL;
  (* DONT_TOUCH *) wire [15:0]DataL;
  (* DONT_TOUCH *) wire [15:0]DataR;
  wire LOAD_FLG;
  (* DONT_TOUCH *) wire [1:0]LR2;
  wire MR;
  (* DONT_TOUCH *) wire [5:0]OPC;
  wire [61:0]PACKET_IN;
  wire [39:0]PACKET_OUT;
  wire \PACKET_OUT[0]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[0]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[0]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[0]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[0]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[10]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[10]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[10]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[10]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_4 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_5 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_6 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_7 ;
  wire \PACKET_OUT[11]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[12]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[12]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[12]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[12]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_16_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_17_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_100_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_101_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_102_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_103_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_104_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_105_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_106_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_16_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_17_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_22_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_23_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_24_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_25_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_26_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_27_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_28_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_29_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_30_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_31_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_32_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_33_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_34_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_35_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_36_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_38_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_39_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_40_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_41_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_42_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_43_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_44_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_45_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_46_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_47_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_48_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_49_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_50_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_51_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_52_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_53_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_54_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_55_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_56_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_57_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_58_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_59_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_60_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_61_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_62_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_63_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_64_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_65_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_66_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_67_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_68_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_69_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_70_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_71_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_72_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_73_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_74_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_75_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_76_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_77_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_78_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_79_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_80_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_81_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_82_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_83_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_84_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_85_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_86_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_87_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_88_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_89_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_90_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_91_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_92_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_93_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_94_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_95_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_96_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_97_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_98_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_99_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_16_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_17_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_22_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_23_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_24_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_25_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_2_n_3 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_4 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_5 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_6 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_7 ;
  wire \PACKET_OUT[17]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[20]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[21]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[23]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[24]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[25]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[26]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[27]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[28]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_4 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_5 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_6 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_7 ;
  wire \PACKET_OUT[29]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[30]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[31]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[32]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[33]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[33]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[34]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[34]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[35]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_4 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_5 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_6 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_7 ;
  wire \PACKET_OUT[36]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[37]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[38]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_5_n_5 ;
  wire \PACKET_OUT[39]_INST_0_i_5_n_6 ;
  wire \PACKET_OUT[39]_INST_0_i_5_n_7 ;
  wire \PACKET_OUT[39]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_22_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_4 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_5 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_6 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_7 ;
  wire \PACKET_OUT[3]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[4]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[4]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[4]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[4]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[5]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[5]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[5]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[5]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[6]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[6]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[6]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[6]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_4 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_5 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_6 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_7 ;
  wire \PACKET_OUT[7]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[8]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[8]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[8]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[8]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[9]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[9]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[9]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[9]_INST_0_i_4_n_0 ;
  wire Send_in;
  wire Send_out;
  wire [15:0]WRITE_DATA;
  wire \WRITE_DATA[15]_INST_0_i_1_n_0 ;
  wire \WRITE_DATA[15]_INST_0_i_2_n_0 ;
  wire \WRITE_DATA[15]_INST_0_i_3_n_0 ;
  wire WRITE_EN;
  (* DONT_TOUCH *) wire Z;
  (* DONT_TOUCH *) wire [2:0]color;
  wire [17:17]data4;
  wire [16:1]data5;
  wire [17:1]data6;
  wire [17:1]data7;
  wire [16:2]data9;
  (* DONT_TOUCH *) wire [6:0]dest;
  (* DONT_TOUCH *) wire [7:0]gen;
  wire [15:0]p_0_in__0;
  wire NLW_ALU1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_ALU1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_ALU1_OVERFLOW_UNCONNECTED;
  wire NLW_ALU1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_ALU1_PATTERNDETECT_UNCONNECTED;
  wire NLW_ALU1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_ALU1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_ALU1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_ALU1_CARRYOUT_UNCONNECTED;
  wire [47:16]NLW_ALU1_P_UNCONNECTED;
  wire [47:0]NLW_ALU1_PCOUT_UNCONNECTED;
  wire [2:0]\NLW_PACKET_OUT[11]_INST_0_i_15_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[11]_INST_0_i_4_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[11]_INST_0_i_5_CO_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[15]_INST_0_i_10_CO_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[15]_INST_0_i_4_CO_UNCONNECTED ;
  wire [3:1]\NLW_PACKET_OUT[17]_INST_0_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[17]_INST_0_i_2_O_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[17]_INST_0_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[17]_INST_0_i_3_O_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[17]_INST_0_i_4_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[17]_INST_0_i_5_CO_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[17]_INST_0_i_5_O_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[29]_INST_0_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[36]_INST_0_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[39]_INST_0_i_5_CO_UNCONNECTED ;
  wire [3:3]\NLW_PACKET_OUT[39]_INST_0_i_5_O_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[3]_INST_0_i_15_CO_UNCONNECTED ;
  wire [0:0]\NLW_PACKET_OUT[3]_INST_0_i_15_O_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[3]_INST_0_i_4_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[3]_INST_0_i_5_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[7]_INST_0_i_15_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[7]_INST_0_i_4_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[7]_INST_0_i_5_CO_UNCONNECTED ;

  (* METHODOLOGY_DRC_VIOS = "{SYNTH-13 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    ALU1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DataL}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_ALU1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,DataR}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_ALU1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_ALU1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_ALU1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_ALU1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_ALU1_OVERFLOW_UNCONNECTED),
        .P({NLW_ALU1_P_UNCONNECTED[47:16],data5}),
        .PATTERNBDETECT(NLW_ALU1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_ALU1_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_ALU1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_ALU1_UNDERFLOW_UNCONNECTED));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst
       (.I0(DL[61]),
        .O(color[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__0
       (.I0(DL[60]),
        .O(color[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__1
       (.I0(DL[59]),
        .O(color[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__10
       (.I0(DL[50]),
        .O(dest[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__11
       (.I0(DL[49]),
        .O(dest[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__12
       (.I0(DL[48]),
        .O(dest[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__13
       (.I0(DL[47]),
        .O(dest[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__14
       (.I0(DL[46]),
        .O(dest[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__15
       (.I0(DL[45]),
        .O(dest[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__16
       (.I0(DL[44]),
        .O(dest[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__17
       (.I0(DL[43]),
        .O(LR2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__18
       (.I0(DL[42]),
        .O(LR2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__19
       (.I0(DL[41]),
        .O(BR));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__2
       (.I0(DL[58]),
        .O(gen[7]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__20
       (.I0(DL[40]),
        .O(CPY));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__21
       (.I0(DL[39]),
        .O(OPC[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__22
       (.I0(DL[38]),
        .O(OPC[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__23
       (.I0(DL[37]),
        .O(OPC[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__24
       (.I0(DL[36]),
        .O(OPC[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__25
       (.I0(DL[35]),
        .O(OPC[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__26
       (.I0(DL[34]),
        .O(OPC[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__27
       (.I0(DL[33]),
        .O(C));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__28
       (.I0(DL[32]),
        .O(Z));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__29
       (.I0(DL[31]),
        .O(DataL[15]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__3
       (.I0(DL[57]),
        .O(gen[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__30
       (.I0(DL[30]),
        .O(DataL[14]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__31
       (.I0(DL[29]),
        .O(DataL[13]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__32
       (.I0(DL[28]),
        .O(DataL[12]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__33
       (.I0(DL[27]),
        .O(DataL[11]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__34
       (.I0(DL[26]),
        .O(DataL[10]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__35
       (.I0(DL[25]),
        .O(DataL[9]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__36
       (.I0(DL[24]),
        .O(DataL[8]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__37
       (.I0(DL[23]),
        .O(DataL[7]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__38
       (.I0(DL[22]),
        .O(DataL[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__39
       (.I0(DL[21]),
        .O(DataL[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__4
       (.I0(DL[56]),
        .O(gen[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__40
       (.I0(DL[20]),
        .O(DataL[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__41
       (.I0(DL[19]),
        .O(DataL[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__42
       (.I0(DL[18]),
        .O(DataL[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__43
       (.I0(DL[17]),
        .O(DataL[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__44
       (.I0(DL[16]),
        .O(DataL[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__45
       (.I0(DL[15]),
        .O(DataR[15]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__46
       (.I0(DL[14]),
        .O(DataR[14]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__47
       (.I0(DL[13]),
        .O(DataR[13]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__48
       (.I0(DL[12]),
        .O(DataR[12]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__49
       (.I0(DL[11]),
        .O(DataR[11]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__5
       (.I0(DL[55]),
        .O(gen[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__50
       (.I0(DL[10]),
        .O(DataR[10]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__51
       (.I0(DL[9]),
        .O(DataR[9]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__52
       (.I0(DL[8]),
        .O(DataR[8]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__53
       (.I0(DL[7]),
        .O(DataR[7]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__54
       (.I0(DL[6]),
        .O(DataR[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__55
       (.I0(DL[5]),
        .O(DataR[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__56
       (.I0(DL[4]),
        .O(DataR[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__57
       (.I0(DL[3]),
        .O(DataR[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__58
       (.I0(DL[2]),
        .O(DataR[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__59
       (.I0(DL[1]),
        .O(DataR[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__6
       (.I0(DL[54]),
        .O(gen[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__60
       (.I0(DL[0]),
        .O(DataR[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__7
       (.I0(DL[53]),
        .O(gen[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__8
       (.I0(DL[52]),
        .O(gen[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__9
       (.I0(DL[51]),
        .O(gen[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[38] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[38]),
        .Q(DL[38]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[39] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[39]),
        .Q(DL[39]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[40] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[40]),
        .Q(DL[40]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[41] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[41]),
        .Q(DL[41]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[42] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[42]),
        .Q(DL[42]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[43] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[43]),
        .Q(DL[43]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[44] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[44]),
        .Q(DL[44]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[45] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[45]),
        .Q(DL[45]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[46] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[46]),
        .Q(DL[46]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[47] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[47]),
        .Q(DL[47]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[48] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[48]),
        .Q(DL[48]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[49] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[49]),
        .Q(DL[49]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[50] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[50]),
        .Q(DL[50]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[51] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[51]),
        .Q(DL[51]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[52] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[52]),
        .Q(DL[52]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[53] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[53]),
        .Q(DL[53]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[54] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[54]),
        .Q(DL[54]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[55] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[55]),
        .Q(DL[55]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[56] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[56]),
        .Q(DL[56]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[57] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[57]),
        .Q(DL[57]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[58] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[58]),
        .Q(DL[58]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[59] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[59]),
        .Q(DL[59]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[60] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[60]),
        .Q(DL[60]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[61] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[61]),
        .Q(DL[61]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[9]),
        .Q(DL[9]));
  LUT6 #(
    .INIT(64'h0A0000000A010200)) 
    LOAD_FLG_INST_0
       (.I0(OPC[4]),
        .I1(OPC[1]),
        .I2(OPC[0]),
        .I3(OPC[2]),
        .I4(OPC[5]),
        .I5(OPC[3]),
        .O(LOAD_FLG));
  MUXF7 \PACKET_OUT[0]_INST_0 
       (.I0(\PACKET_OUT[0]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[0]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[0]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[0]_INST_0_i_1 
       (.I0(\PACKET_OUT[0]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_7 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[0]),
        .O(\PACKET_OUT[0]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF40FD5DBF40A808)) 
    \PACKET_OUT[0]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I1(DataR[0]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[0]),
        .I4(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I5(\PACKET_OUT[0]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[0]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[0]_INST_0_i_3 
       (.I0(data5[1]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[0]),
        .I4(DataR[0]),
        .O(\PACKET_OUT[0]_INST_0_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[0]_INST_0_i_4 
       (.I0(data7[1]),
        .I1(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I2(data6[1]),
        .O(\PACKET_OUT[0]_INST_0_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \PACKET_OUT[0]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[0]_INST_0_i_7_n_0 ),
        .I2(DataR[1]),
        .I3(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I4(DataR[0]),
        .I5(\PACKET_OUT[1]_INST_0_i_7_n_0 ),
        .O(data7[1]));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \PACKET_OUT[0]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(DataR[0]),
        .I2(DataR[2]),
        .I3(DataL[0]),
        .I4(DataR[3]),
        .I5(DataR[1]),
        .O(data6[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[0]_INST_0_i_7 
       (.I0(DataL[12]),
        .I1(DataL[4]),
        .I2(DataR[2]),
        .I3(DataL[8]),
        .I4(DataR[3]),
        .I5(DataL[0]),
        .O(\PACKET_OUT[0]_INST_0_i_7_n_0 ));
  MUXF7 \PACKET_OUT[10]_INST_0 
       (.I0(\PACKET_OUT[10]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[10]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[10]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[10]_INST_0_i_1 
       (.I0(\PACKET_OUT[10]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_5 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[10]),
        .O(\PACKET_OUT[10]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[10]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[10]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[10]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[10]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[10]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[10]_INST_0_i_3 
       (.I0(data5[11]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[10]),
        .I4(DataR[10]),
        .O(\PACKET_OUT[10]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[10]_INST_0_i_4 
       (.I0(data9[11]),
        .I1(DataL[10]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[11]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[11]),
        .O(\PACKET_OUT[10]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[10]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_52_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_54_n_0 ),
        .O(data7[11]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[10]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_69_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_68_n_0 ),
        .O(data6[11]));
  MUXF7 \PACKET_OUT[11]_INST_0 
       (.I0(\PACKET_OUT[11]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[11]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[11]_INST_0_i_1 
       (.I0(\PACKET_OUT[11]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_4 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[11]),
        .O(\PACKET_OUT[11]_INST_0_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_10 
       (.I0(DataR[8]),
        .I1(DataL[8]),
        .O(\PACKET_OUT[11]_INST_0_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[11]_INST_0_i_11 
       (.I0(DataL[11]),
        .I1(DataR[11]),
        .O(\PACKET_OUT[11]_INST_0_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[11]_INST_0_i_12 
       (.I0(DataL[10]),
        .I1(DataR[10]),
        .O(\PACKET_OUT[11]_INST_0_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[11]_INST_0_i_13 
       (.I0(DataL[9]),
        .I1(DataR[9]),
        .O(\PACKET_OUT[11]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[11]_INST_0_i_14 
       (.I0(DataL[8]),
        .I1(DataR[8]),
        .O(\PACKET_OUT[11]_INST_0_i_14_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[11]_INST_0_i_15 
       (.CI(\PACKET_OUT[7]_INST_0_i_15_n_0 ),
        .CO({\PACKET_OUT[11]_INST_0_i_15_n_0 ,\NLW_PACKET_OUT[11]_INST_0_i_15_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[11:8]),
        .O(data9[12:9]),
        .S({\PACKET_OUT[11]_INST_0_i_18_n_0 ,\PACKET_OUT[11]_INST_0_i_19_n_0 ,\PACKET_OUT[11]_INST_0_i_20_n_0 ,\PACKET_OUT[11]_INST_0_i_21_n_0 }));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[11]_INST_0_i_16 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_54_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_49_n_0 ),
        .O(data7[12]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[11]_INST_0_i_17 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_70_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_69_n_0 ),
        .O(data6[12]));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_18 
       (.I0(DataR[11]),
        .I1(DataL[11]),
        .O(\PACKET_OUT[11]_INST_0_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_19 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .O(\PACKET_OUT[11]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[11]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[11]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[11]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[11]_INST_0_i_6_n_0 ),
        .O(\PACKET_OUT[11]_INST_0_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_20 
       (.I0(DataR[9]),
        .I1(DataL[9]),
        .O(\PACKET_OUT[11]_INST_0_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_21 
       (.I0(DataR[8]),
        .I1(DataL[8]),
        .O(\PACKET_OUT[11]_INST_0_i_21_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[11]_INST_0_i_3 
       (.I0(data5[12]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[11]),
        .I4(DataR[11]),
        .O(\PACKET_OUT[11]_INST_0_i_3_n_0 ));
  CARRY4 \PACKET_OUT[11]_INST_0_i_4 
       (.CI(\PACKET_OUT[7]_INST_0_i_4_n_0 ),
        .CO({\PACKET_OUT[11]_INST_0_i_4_n_0 ,\NLW_PACKET_OUT[11]_INST_0_i_4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[11:8]),
        .O({\PACKET_OUT[11]_INST_0_i_4_n_4 ,\PACKET_OUT[11]_INST_0_i_4_n_5 ,\PACKET_OUT[11]_INST_0_i_4_n_6 ,\PACKET_OUT[11]_INST_0_i_4_n_7 }),
        .S({\PACKET_OUT[11]_INST_0_i_7_n_0 ,\PACKET_OUT[11]_INST_0_i_8_n_0 ,\PACKET_OUT[11]_INST_0_i_9_n_0 ,\PACKET_OUT[11]_INST_0_i_10_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[11]_INST_0_i_5 
       (.CI(\PACKET_OUT[7]_INST_0_i_5_n_0 ),
        .CO({\PACKET_OUT[11]_INST_0_i_5_n_0 ,\NLW_PACKET_OUT[11]_INST_0_i_5_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[11:8]),
        .O(p_0_in__0[11:8]),
        .S({\PACKET_OUT[11]_INST_0_i_11_n_0 ,\PACKET_OUT[11]_INST_0_i_12_n_0 ,\PACKET_OUT[11]_INST_0_i_13_n_0 ,\PACKET_OUT[11]_INST_0_i_14_n_0 }));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[11]_INST_0_i_6 
       (.I0(data9[12]),
        .I1(DataL[11]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[12]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[12]),
        .O(\PACKET_OUT[11]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_7 
       (.I0(DataR[11]),
        .I1(DataL[11]),
        .O(\PACKET_OUT[11]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_8 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .O(\PACKET_OUT[11]_INST_0_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_9 
       (.I0(DataR[9]),
        .I1(DataL[9]),
        .O(\PACKET_OUT[11]_INST_0_i_9_n_0 ));
  MUXF7 \PACKET_OUT[12]_INST_0 
       (.I0(\PACKET_OUT[12]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[12]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[12]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[12]_INST_0_i_1 
       (.I0(\PACKET_OUT[12]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_7 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[12]),
        .O(\PACKET_OUT[12]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[12]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[12]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[12]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[12]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[12]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[12]_INST_0_i_3 
       (.I0(data5[13]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[12]),
        .I4(DataR[12]),
        .O(\PACKET_OUT[12]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[12]_INST_0_i_4 
       (.I0(data9[13]),
        .I1(DataL[12]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[13]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[13]),
        .O(\PACKET_OUT[12]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[12]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_49_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_48_n_0 ),
        .O(data7[13]));
  LUT6 #(
    .INIT(64'hFF00B8000000B800)) 
    \PACKET_OUT[12]_INST_0_i_6 
       (.I0(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I4(DataR[0]),
        .I5(\PACKET_OUT[16]_INST_0_i_70_n_0 ),
        .O(data6[13]));
  MUXF7 \PACKET_OUT[13]_INST_0 
       (.I0(\PACKET_OUT[13]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[13]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[13]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[13]_INST_0_i_1 
       (.I0(\PACKET_OUT[13]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_6 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[13]),
        .O(\PACKET_OUT[13]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[13]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[13]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[13]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[13]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[13]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[13]_INST_0_i_3 
       (.I0(data5[14]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[13]),
        .I4(DataR[13]),
        .O(\PACKET_OUT[13]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[13]_INST_0_i_4 
       (.I0(data9[14]),
        .I1(DataL[13]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[14]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[14]),
        .O(\PACKET_OUT[13]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[13]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_48_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_51_n_0 ),
        .O(data7[14]));
  LUT6 #(
    .INIT(64'hB800B800FF000000)) 
    \PACKET_OUT[13]_INST_0_i_6 
       (.I0(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I4(\PACKET_OUT[14]_INST_0_i_8_n_0 ),
        .I5(DataR[0]),
        .O(data6[14]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[13]_INST_0_i_7 
       (.I0(DataL[6]),
        .I1(DataR[2]),
        .I2(DataL[2]),
        .I3(DataR[3]),
        .I4(DataL[10]),
        .O(\PACKET_OUT[13]_INST_0_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[13]_INST_0_i_8 
       (.I0(DataL[0]),
        .I1(DataL[8]),
        .I2(DataR[2]),
        .I3(DataL[4]),
        .I4(DataR[3]),
        .I5(DataL[12]),
        .O(\PACKET_OUT[13]_INST_0_i_8_n_0 ));
  MUXF7 \PACKET_OUT[14]_INST_0 
       (.I0(\PACKET_OUT[14]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[14]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[14]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[14]_INST_0_i_1 
       (.I0(\PACKET_OUT[14]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_5 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[14]),
        .O(\PACKET_OUT[14]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[14]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[14]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[14]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[14]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[14]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[14]_INST_0_i_3 
       (.I0(data5[15]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[14]),
        .I4(DataR[14]),
        .O(\PACKET_OUT[14]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[14]_INST_0_i_4 
       (.I0(data9[15]),
        .I1(DataL[14]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[15]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[15]),
        .O(\PACKET_OUT[14]_INST_0_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \PACKET_OUT[14]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[14]_INST_0_i_7_n_0 ),
        .O(data7[15]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[14]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[15]_INST_0_i_19_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[14]_INST_0_i_8_n_0 ),
        .O(data6[15]));
  LUT6 #(
    .INIT(64'h0000000000000B08)) 
    \PACKET_OUT[14]_INST_0_i_7 
       (.I0(DataL[15]),
        .I1(DataR[0]),
        .I2(DataR[2]),
        .I3(DataL[14]),
        .I4(DataR[3]),
        .I5(DataR[1]),
        .O(\PACKET_OUT[14]_INST_0_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[14]_INST_0_i_8 
       (.I0(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .O(\PACKET_OUT[14]_INST_0_i_8_n_0 ));
  MUXF7 \PACKET_OUT[15]_INST_0 
       (.I0(\PACKET_OUT[15]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[15]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[15]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[15]_INST_0_i_1 
       (.I0(\PACKET_OUT[15]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_4 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[15]),
        .O(\PACKET_OUT[15]_INST_0_i_1_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[15]_INST_0_i_10 
       (.CI(\PACKET_OUT[11]_INST_0_i_15_n_0 ),
        .CO(\NLW_PACKET_OUT[15]_INST_0_i_10_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,DataL[14:12]}),
        .O(data9[16:13]),
        .S({\PACKET_OUT[15]_INST_0_i_13_n_0 ,\PACKET_OUT[15]_INST_0_i_14_n_0 ,\PACKET_OUT[15]_INST_0_i_15_n_0 ,\PACKET_OUT[15]_INST_0_i_16_n_0 }));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \PACKET_OUT[15]_INST_0_i_11 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(DataR[0]),
        .I2(DataR[2]),
        .I3(DataL[15]),
        .I4(DataR[3]),
        .I5(DataR[1]),
        .O(data7[16]));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \PACKET_OUT[15]_INST_0_i_12 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[15]_INST_0_i_17_n_0 ),
        .I2(DataR[1]),
        .I3(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .I4(DataR[0]),
        .I5(\PACKET_OUT[15]_INST_0_i_19_n_0 ),
        .O(data6[16]));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[15]_INST_0_i_13 
       (.I0(DataR[15]),
        .I1(DataL[15]),
        .O(\PACKET_OUT[15]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[15]_INST_0_i_14 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .O(\PACKET_OUT[15]_INST_0_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[15]_INST_0_i_15 
       (.I0(DataR[13]),
        .I1(DataL[13]),
        .O(\PACKET_OUT[15]_INST_0_i_15_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[15]_INST_0_i_16 
       (.I0(DataR[12]),
        .I1(DataL[12]),
        .O(\PACKET_OUT[15]_INST_0_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[15]_INST_0_i_17 
       (.I0(DataL[3]),
        .I1(DataL[11]),
        .I2(DataR[2]),
        .I3(DataL[7]),
        .I4(DataR[3]),
        .I5(DataL[15]),
        .O(\PACKET_OUT[15]_INST_0_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[15]_INST_0_i_18 
       (.I0(DataL[1]),
        .I1(DataL[9]),
        .I2(DataR[2]),
        .I3(DataL[5]),
        .I4(DataR[3]),
        .I5(DataL[13]),
        .O(\PACKET_OUT[15]_INST_0_i_18_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[15]_INST_0_i_19 
       (.I0(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_97_n_0 ),
        .O(\PACKET_OUT[15]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[15]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[15]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[15]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[15]_INST_0_i_5_n_0 ),
        .O(\PACKET_OUT[15]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[15]_INST_0_i_3 
       (.I0(data5[16]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[15]),
        .I4(DataR[15]),
        .O(\PACKET_OUT[15]_INST_0_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[15]_INST_0_i_4 
       (.CI(\PACKET_OUT[11]_INST_0_i_5_n_0 ),
        .CO(\NLW_PACKET_OUT[15]_INST_0_i_4_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,DataL[14:12]}),
        .O(p_0_in__0[15:12]),
        .S({\PACKET_OUT[15]_INST_0_i_6_n_0 ,\PACKET_OUT[15]_INST_0_i_7_n_0 ,\PACKET_OUT[15]_INST_0_i_8_n_0 ,\PACKET_OUT[15]_INST_0_i_9_n_0 }));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[15]_INST_0_i_5 
       (.I0(data9[16]),
        .I1(DataL[15]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[16]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[16]),
        .O(\PACKET_OUT[15]_INST_0_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[15]_INST_0_i_6 
       (.I0(DataL[15]),
        .I1(DataR[15]),
        .O(\PACKET_OUT[15]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[15]_INST_0_i_7 
       (.I0(DataL[14]),
        .I1(DataR[14]),
        .O(\PACKET_OUT[15]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[15]_INST_0_i_8 
       (.I0(DataL[13]),
        .I1(DataR[13]),
        .O(\PACKET_OUT[15]_INST_0_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[15]_INST_0_i_9 
       (.I0(DataL[12]),
        .I1(DataR[12]),
        .O(\PACKET_OUT[15]_INST_0_i_9_n_0 ));
  MUXF7 \PACKET_OUT[16]_INST_0 
       (.I0(\PACKET_OUT[16]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[16]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAFF0300AA000300)) 
    \PACKET_OUT[16]_INST_0_i_1 
       (.I0(\PACKET_OUT[16]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_4_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_5_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I4(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_6_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0001FFFF00010000)) 
    \PACKET_OUT[16]_INST_0_i_10 
       (.I0(\PACKET_OUT[16]_INST_0_i_33_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_34_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_35_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_36_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data4),
        .O(\PACKET_OUT[16]_INST_0_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_100 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .I2(DataR[15]),
        .I3(DataL[15]),
        .O(\PACKET_OUT[16]_INST_0_i_100_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \PACKET_OUT[16]_INST_0_i_101 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .I2(DataR[7]),
        .I3(DataL[7]),
        .O(\PACKET_OUT[16]_INST_0_i_101_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \PACKET_OUT[16]_INST_0_i_102 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .I2(DataR[15]),
        .I3(DataL[15]),
        .O(\PACKET_OUT[16]_INST_0_i_102_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_103 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .I2(DataR[11]),
        .I3(DataL[11]),
        .O(\PACKET_OUT[16]_INST_0_i_103_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[16]_INST_0_i_104 
       (.I0(DataL[9]),
        .I1(DataR[9]),
        .O(\PACKET_OUT[16]_INST_0_i_104_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_105 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .I2(DataR[15]),
        .I3(DataL[15]),
        .O(\PACKET_OUT[16]_INST_0_i_105_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_106 
       (.I0(DataR[12]),
        .I1(DataL[12]),
        .I2(DataR[13]),
        .I3(DataL[13]),
        .O(\PACKET_OUT[16]_INST_0_i_106_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_11 
       (.I0(\PACKET_OUT[7]_INST_0_i_4_n_6 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_7 ),
        .I2(\PACKET_OUT[7]_INST_0_i_4_n_4 ),
        .I3(\PACKET_OUT[7]_INST_0_i_4_n_5 ),
        .O(\PACKET_OUT[16]_INST_0_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_12 
       (.I0(\PACKET_OUT[17]_INST_0_i_4_n_6 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_7 ),
        .I2(\PACKET_OUT[17]_INST_0_i_4_n_4 ),
        .I3(\PACKET_OUT[17]_INST_0_i_4_n_5 ),
        .O(\PACKET_OUT[16]_INST_0_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_13 
       (.I0(p_0_in__0[5]),
        .I1(p_0_in__0[4]),
        .I2(p_0_in__0[7]),
        .I3(p_0_in__0[6]),
        .O(\PACKET_OUT[16]_INST_0_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_14 
       (.I0(p_0_in__0[1]),
        .I1(p_0_in__0[0]),
        .I2(p_0_in__0[3]),
        .I3(p_0_in__0[2]),
        .O(\PACKET_OUT[16]_INST_0_i_14_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_15 
       (.I0(p_0_in__0[13]),
        .I1(p_0_in__0[12]),
        .I2(p_0_in__0[15]),
        .I3(p_0_in__0[14]),
        .O(\PACKET_OUT[16]_INST_0_i_15_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_16 
       (.I0(p_0_in__0[9]),
        .I1(p_0_in__0[8]),
        .I2(p_0_in__0[11]),
        .I3(p_0_in__0[10]),
        .O(\PACKET_OUT[16]_INST_0_i_16_n_0 ));
  LUT5 #(
    .INIT(32'hFFCA0000)) 
    \PACKET_OUT[16]_INST_0_i_17 
       (.I0(\PACKET_OUT[16]_INST_0_i_38_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_39_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_40_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_17_n_0 ));
  LUT5 #(
    .INIT(32'hFFCA0000)) 
    \PACKET_OUT[16]_INST_0_i_18 
       (.I0(\PACKET_OUT[16]_INST_0_i_39_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_42_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_43_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_18_n_0 ));
  LUT5 #(
    .INIT(32'hF0F0F0E0)) 
    \PACKET_OUT[16]_INST_0_i_19 
       (.I0(\PACKET_OUT[16]_INST_0_i_44_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_45_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_46_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_47_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8CDCDCDC8C8C8)) 
    \PACKET_OUT[16]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I1(Z),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[17]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[17]),
        .O(\PACKET_OUT[16]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F0F0F0F0A0E0)) 
    \PACKET_OUT[16]_INST_0_i_20 
       (.I0(\PACKET_OUT[16]_INST_0_i_48_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_49_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I3(DataR[0]),
        .I4(\PACKET_OUT[16]_INST_0_i_50_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_51_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_20_n_0 ));
  LUT5 #(
    .INIT(32'hFFCA0000)) 
    \PACKET_OUT[16]_INST_0_i_21 
       (.I0(\PACKET_OUT[16]_INST_0_i_42_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_52_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_53_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_21_n_0 ));
  LUT5 #(
    .INIT(32'hFFCA0000)) 
    \PACKET_OUT[16]_INST_0_i_22 
       (.I0(\PACKET_OUT[16]_INST_0_i_52_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_49_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_54_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_22_n_0 ));
  LUT5 #(
    .INIT(32'hEFEC0000)) 
    \PACKET_OUT[16]_INST_0_i_23 
       (.I0(\PACKET_OUT[16]_INST_0_i_55_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_56_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_57_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_23_n_0 ));
  LUT5 #(
    .INIT(32'hEFEC0000)) 
    \PACKET_OUT[16]_INST_0_i_24 
       (.I0(\PACKET_OUT[16]_INST_0_i_57_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_58_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_59_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_24_n_0 ));
  LUT6 #(
    .INIT(64'hCCCCCCCCCCCC88C8)) 
    \PACKET_OUT[16]_INST_0_i_25 
       (.I0(\PACKET_OUT[16]_INST_0_i_60_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_55_n_0 ),
        .I3(DataR[0]),
        .I4(\PACKET_OUT[16]_INST_0_i_61_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_62_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_25_n_0 ));
  LUT5 #(
    .INIT(32'hF0F0F0E0)) 
    \PACKET_OUT[16]_INST_0_i_26 
       (.I0(\PACKET_OUT[16]_INST_0_i_63_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_64_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_65_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_66_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_26_n_0 ));
  LUT5 #(
    .INIT(32'hEFEC0000)) 
    \PACKET_OUT[16]_INST_0_i_27 
       (.I0(\PACKET_OUT[16]_INST_0_i_59_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_67_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_68_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_27_n_0 ));
  LUT5 #(
    .INIT(32'hEFEC0000)) 
    \PACKET_OUT[16]_INST_0_i_28 
       (.I0(\PACKET_OUT[16]_INST_0_i_68_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_69_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_70_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_28_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_29 
       (.I0(\PACKET_OUT[16]_INST_0_i_71_n_0 ),
        .I1(DataR[0]),
        .I2(DataL[0]),
        .I3(DataR[1]),
        .I4(DataL[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_72_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_29_n_0 ));
  MUXF7 \PACKET_OUT[16]_INST_0_i_3 
       (.I0(\PACKET_OUT[16]_INST_0_i_9_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_10_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_3_n_0 ),
        .S(\PACKET_OUT[39]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_30 
       (.I0(\PACKET_OUT[16]_INST_0_i_73_n_0 ),
        .I1(DataR[8]),
        .I2(DataL[8]),
        .I3(DataR[9]),
        .I4(DataL[9]),
        .I5(\PACKET_OUT[16]_INST_0_i_74_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_30_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \PACKET_OUT[16]_INST_0_i_31 
       (.I0(\PACKET_OUT[16]_INST_0_i_75_n_0 ),
        .I1(DataR[0]),
        .I2(DataL[0]),
        .I3(DataR[1]),
        .I4(DataL[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_76_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_31_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \PACKET_OUT[16]_INST_0_i_32 
       (.I0(\PACKET_OUT[16]_INST_0_i_77_n_0 ),
        .I1(DataR[8]),
        .I2(DataL[8]),
        .I3(DataR[9]),
        .I4(DataL[9]),
        .I5(\PACKET_OUT[16]_INST_0_i_78_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_32_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_33 
       (.I0(data5[6]),
        .I1(data5[5]),
        .I2(data5[8]),
        .I3(data5[7]),
        .O(\PACKET_OUT[16]_INST_0_i_33_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_34 
       (.I0(data5[2]),
        .I1(data5[1]),
        .I2(data5[4]),
        .I3(data5[3]),
        .O(\PACKET_OUT[16]_INST_0_i_34_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_35 
       (.I0(data5[14]),
        .I1(data5[13]),
        .I2(data5[16]),
        .I3(data5[15]),
        .O(\PACKET_OUT[16]_INST_0_i_35_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_36 
       (.I0(data5[10]),
        .I1(data5[9]),
        .I2(data5[12]),
        .I3(data5[11]),
        .O(\PACKET_OUT[16]_INST_0_i_36_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \PACKET_OUT[16]_INST_0_i_37 
       (.I0(\PACKET_OUT[16]_INST_0_i_79_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_80_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_81_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_82_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_83_n_0 ),
        .O(data4));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0_i_38 
       (.I0(\PACKET_OUT[16]_INST_0_i_84_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_38_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_39 
       (.I0(DataL[12]),
        .I1(DataR[2]),
        .I2(DataL[8]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_84_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_39_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_4 
       (.I0(\PACKET_OUT[3]_INST_0_i_4_n_5 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_4 ),
        .I2(\PACKET_OUT[3]_INST_0_i_4_n_7 ),
        .I3(\PACKET_OUT[3]_INST_0_i_4_n_6 ),
        .I4(\PACKET_OUT[16]_INST_0_i_11_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0_i_40 
       (.I0(\PACKET_OUT[16]_INST_0_i_85_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_86_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_40_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \PACKET_OUT[16]_INST_0_i_41 
       (.I0(DataR[13]),
        .I1(DataR[12]),
        .I2(DataR[15]),
        .I3(DataR[14]),
        .I4(\PACKET_OUT[16]_INST_0_i_87_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_88_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_41_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_42 
       (.I0(DataL[14]),
        .I1(DataR[2]),
        .I2(DataL[10]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_89_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_42_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_43 
       (.I0(DataL[13]),
        .I1(DataR[2]),
        .I2(DataL[9]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_85_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_43_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_44 
       (.I0(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I1(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_91_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_44_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_45 
       (.I0(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_91_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[0]_INST_0_i_7_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_45_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_46 
       (.I0(\PACKET_OUT[16]_INST_0_i_84_n_0 ),
        .I1(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_86_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_46_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_47 
       (.I0(\PACKET_OUT[16]_INST_0_i_86_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_47_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \PACKET_OUT[16]_INST_0_i_48 
       (.I0(DataL[15]),
        .I1(DataR[1]),
        .I2(DataR[3]),
        .I3(DataL[13]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[16]_INST_0_i_48_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \PACKET_OUT[16]_INST_0_i_49 
       (.I0(DataL[14]),
        .I1(DataR[1]),
        .I2(DataR[3]),
        .I3(DataL[12]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[16]_INST_0_i_49_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_5 
       (.I0(\PACKET_OUT[11]_INST_0_i_4_n_5 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_4 ),
        .I2(\PACKET_OUT[11]_INST_0_i_4_n_7 ),
        .I3(\PACKET_OUT[11]_INST_0_i_4_n_6 ),
        .I4(\PACKET_OUT[16]_INST_0_i_12_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \PACKET_OUT[16]_INST_0_i_50 
       (.I0(DataR[2]),
        .I1(DataL[15]),
        .I2(DataR[3]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[16]_INST_0_i_50_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \PACKET_OUT[16]_INST_0_i_51 
       (.I0(DataR[2]),
        .I1(DataL[14]),
        .I2(DataR[3]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[16]_INST_0_i_51_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \PACKET_OUT[16]_INST_0_i_52 
       (.I0(DataL[12]),
        .I1(DataR[1]),
        .I2(DataL[14]),
        .I3(DataR[2]),
        .I4(DataL[10]),
        .I5(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_52_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_53 
       (.I0(DataL[15]),
        .I1(DataR[2]),
        .I2(DataL[11]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_92_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_53_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \PACKET_OUT[16]_INST_0_i_54 
       (.I0(DataL[13]),
        .I1(DataR[1]),
        .I2(DataL[15]),
        .I3(DataR[2]),
        .I4(DataL[11]),
        .I5(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_54_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \PACKET_OUT[16]_INST_0_i_55 
       (.I0(DataL[1]),
        .I1(DataR[1]),
        .I2(DataR[3]),
        .I3(DataL[3]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[16]_INST_0_i_55_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \PACKET_OUT[16]_INST_0_i_56 
       (.I0(DataL[2]),
        .I1(DataR[1]),
        .I2(DataL[0]),
        .I3(DataR[2]),
        .I4(DataL[4]),
        .I5(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_56_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \PACKET_OUT[16]_INST_0_i_57 
       (.I0(DataL[3]),
        .I1(DataR[1]),
        .I2(DataL[1]),
        .I3(DataR[2]),
        .I4(DataL[5]),
        .I5(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_57_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_58 
       (.I0(DataL[0]),
        .I1(DataR[2]),
        .I2(DataL[4]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_93_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_58_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_59 
       (.I0(DataL[1]),
        .I1(DataR[2]),
        .I2(DataL[5]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_94_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_59_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \PACKET_OUT[16]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_13_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_14_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_15_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_16_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \PACKET_OUT[16]_INST_0_i_60 
       (.I0(DataR[2]),
        .I1(DataL[0]),
        .I2(DataR[3]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[16]_INST_0_i_60_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \PACKET_OUT[16]_INST_0_i_61 
       (.I0(DataL[0]),
        .I1(DataR[1]),
        .I2(DataR[3]),
        .I3(DataL[2]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[16]_INST_0_i_61_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \PACKET_OUT[16]_INST_0_i_62 
       (.I0(DataR[2]),
        .I1(DataL[1]),
        .I2(DataR[3]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[16]_INST_0_i_62_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_63 
       (.I0(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .I1(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_63_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_64 
       (.I0(\PACKET_OUT[16]_INST_0_i_96_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_64_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_65 
       (.I0(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_97_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[15]_INST_0_i_17_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_65_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_66 
       (.I0(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .I1(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_97_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_66_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_67 
       (.I0(DataL[2]),
        .I1(DataR[2]),
        .I2(DataL[6]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_98_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_67_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_68 
       (.I0(DataL[3]),
        .I1(DataR[2]),
        .I2(DataL[7]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_96_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_68_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0_i_69 
       (.I0(\PACKET_OUT[16]_INST_0_i_98_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_69_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \PACKET_OUT[16]_INST_0_i_7 
       (.I0(\PACKET_OUT[16]_INST_0_i_17_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_18_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_19_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_20_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_21_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_22_n_0 ),
        .O(data7[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0_i_70 
       (.I0(\PACKET_OUT[16]_INST_0_i_96_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_70_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_71 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .I2(DataR[3]),
        .I3(DataL[3]),
        .O(\PACKET_OUT[16]_INST_0_i_71_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_72 
       (.I0(DataL[5]),
        .I1(DataR[5]),
        .I2(DataL[4]),
        .I3(DataR[4]),
        .I4(\PACKET_OUT[16]_INST_0_i_99_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_72_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_73 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .I2(DataR[11]),
        .I3(DataL[11]),
        .O(\PACKET_OUT[16]_INST_0_i_73_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_74 
       (.I0(DataL[13]),
        .I1(DataR[13]),
        .I2(DataL[12]),
        .I3(DataR[12]),
        .I4(\PACKET_OUT[16]_INST_0_i_100_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_74_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \PACKET_OUT[16]_INST_0_i_75 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .I2(DataR[3]),
        .I3(DataL[3]),
        .O(\PACKET_OUT[16]_INST_0_i_75_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \PACKET_OUT[16]_INST_0_i_76 
       (.I0(DataL[5]),
        .I1(DataR[5]),
        .I2(DataL[4]),
        .I3(DataR[4]),
        .I4(\PACKET_OUT[16]_INST_0_i_101_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_76_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \PACKET_OUT[16]_INST_0_i_77 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .I2(DataR[11]),
        .I3(DataL[11]),
        .O(\PACKET_OUT[16]_INST_0_i_77_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \PACKET_OUT[16]_INST_0_i_78 
       (.I0(DataL[13]),
        .I1(DataR[13]),
        .I2(DataL[12]),
        .I3(DataR[12]),
        .I4(\PACKET_OUT[16]_INST_0_i_102_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_78_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_79 
       (.I0(DataR[4]),
        .I1(DataL[4]),
        .I2(DataR[5]),
        .I3(DataL[5]),
        .O(\PACKET_OUT[16]_INST_0_i_79_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \PACKET_OUT[16]_INST_0_i_8 
       (.I0(\PACKET_OUT[16]_INST_0_i_23_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_24_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_25_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_26_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_27_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_28_n_0 ),
        .O(data6[17]));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_80 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .I2(DataR[7]),
        .I3(DataL[7]),
        .O(\PACKET_OUT[16]_INST_0_i_80_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_81 
       (.I0(DataR[0]),
        .I1(DataL[0]),
        .I2(DataR[1]),
        .I3(DataL[1]),
        .O(\PACKET_OUT[16]_INST_0_i_81_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_82 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .I2(DataR[3]),
        .I3(DataL[3]),
        .O(\PACKET_OUT[16]_INST_0_i_82_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFBEFF)) 
    \PACKET_OUT[16]_INST_0_i_83 
       (.I0(\PACKET_OUT[16]_INST_0_i_103_n_0 ),
        .I1(DataR[8]),
        .I2(DataL[8]),
        .I3(\PACKET_OUT[16]_INST_0_i_104_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_105_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_106_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_83_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_84 
       (.I0(DataL[10]),
        .I1(DataR[2]),
        .I2(DataL[14]),
        .I3(DataR[3]),
        .I4(DataL[6]),
        .O(\PACKET_OUT[16]_INST_0_i_84_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_85 
       (.I0(DataL[11]),
        .I1(DataR[2]),
        .I2(DataL[15]),
        .I3(DataR[3]),
        .I4(DataL[7]),
        .O(\PACKET_OUT[16]_INST_0_i_85_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_86 
       (.I0(DataL[9]),
        .I1(DataR[2]),
        .I2(DataL[13]),
        .I3(DataR[3]),
        .I4(DataL[5]),
        .O(\PACKET_OUT[16]_INST_0_i_86_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_87 
       (.I0(DataR[6]),
        .I1(DataR[7]),
        .I2(DataR[4]),
        .I3(DataR[5]),
        .O(\PACKET_OUT[16]_INST_0_i_87_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_88 
       (.I0(DataR[10]),
        .I1(DataR[11]),
        .I2(DataR[8]),
        .I3(DataR[9]),
        .O(\PACKET_OUT[16]_INST_0_i_88_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \PACKET_OUT[16]_INST_0_i_89 
       (.I0(DataL[12]),
        .I1(DataR[2]),
        .I2(DataL[8]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_89_n_0 ));
  LUT5 #(
    .INIT(32'h1010101F)) 
    \PACKET_OUT[16]_INST_0_i_9 
       (.I0(\PACKET_OUT[16]_INST_0_i_29_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_30_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_31_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_32_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_90 
       (.I0(DataL[15]),
        .I1(DataL[7]),
        .I2(DataR[2]),
        .I3(DataL[11]),
        .I4(DataR[3]),
        .I5(DataL[3]),
        .O(\PACKET_OUT[16]_INST_0_i_90_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_91 
       (.I0(DataL[13]),
        .I1(DataL[5]),
        .I2(DataR[2]),
        .I3(DataL[9]),
        .I4(DataR[3]),
        .I5(DataL[1]),
        .O(\PACKET_OUT[16]_INST_0_i_91_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \PACKET_OUT[16]_INST_0_i_92 
       (.I0(DataL[13]),
        .I1(DataR[2]),
        .I2(DataL[9]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_92_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \PACKET_OUT[16]_INST_0_i_93 
       (.I0(DataL[2]),
        .I1(DataR[2]),
        .I2(DataL[6]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_93_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \PACKET_OUT[16]_INST_0_i_94 
       (.I0(DataL[3]),
        .I1(DataR[2]),
        .I2(DataL[7]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_94_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_95 
       (.I0(DataL[7]),
        .I1(DataR[2]),
        .I2(DataL[3]),
        .I3(DataR[3]),
        .I4(DataL[11]),
        .O(\PACKET_OUT[16]_INST_0_i_95_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_96 
       (.I0(DataL[5]),
        .I1(DataR[2]),
        .I2(DataL[1]),
        .I3(DataR[3]),
        .I4(DataL[9]),
        .O(\PACKET_OUT[16]_INST_0_i_96_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_97 
       (.I0(DataL[2]),
        .I1(DataL[10]),
        .I2(DataR[2]),
        .I3(DataL[6]),
        .I4(DataR[3]),
        .I5(DataL[14]),
        .O(\PACKET_OUT[16]_INST_0_i_97_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_98 
       (.I0(DataL[4]),
        .I1(DataR[2]),
        .I2(DataL[0]),
        .I3(DataR[3]),
        .I4(DataL[8]),
        .O(\PACKET_OUT[16]_INST_0_i_98_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_99 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .I2(DataR[7]),
        .I3(DataL[7]),
        .O(\PACKET_OUT[16]_INST_0_i_99_n_0 ));
  LUT6 #(
    .INIT(64'h88BBB8888888B888)) 
    \PACKET_OUT[17]_INST_0 
       (.I0(\PACKET_OUT[17]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[17]_INST_0_i_2_n_3 ),
        .I3(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I4(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I5(ALU1__0),
        .O(PACKET_OUT[17]));
  LUT3 #(
    .INIT(8'hE0)) 
    \PACKET_OUT[17]_INST_0_i_1 
       (.I0(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(C),
        .O(\PACKET_OUT[17]_INST_0_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_10 
       (.I0(DataL[15]),
        .I1(DataR[15]),
        .I2(DataL[14]),
        .I3(DataR[14]),
        .O(\PACKET_OUT[17]_INST_0_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_11 
       (.I0(DataL[13]),
        .I1(DataR[13]),
        .I2(DataL[12]),
        .I3(DataR[12]),
        .O(\PACKET_OUT[17]_INST_0_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_12 
       (.I0(DataL[11]),
        .I1(DataR[11]),
        .I2(DataL[10]),
        .I3(DataR[10]),
        .O(\PACKET_OUT[17]_INST_0_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_13 
       (.I0(DataL[9]),
        .I1(DataR[9]),
        .I2(DataL[8]),
        .I3(DataR[8]),
        .O(\PACKET_OUT[17]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[17]_INST_0_i_14 
       (.I0(DataR[15]),
        .I1(DataL[15]),
        .O(\PACKET_OUT[17]_INST_0_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[17]_INST_0_i_15 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .O(\PACKET_OUT[17]_INST_0_i_15_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[17]_INST_0_i_16 
       (.I0(DataR[13]),
        .I1(DataL[13]),
        .O(\PACKET_OUT[17]_INST_0_i_16_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[17]_INST_0_i_17 
       (.I0(DataR[12]),
        .I1(DataL[12]),
        .O(\PACKET_OUT[17]_INST_0_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_18 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .I2(DataL[7]),
        .I3(DataR[7]),
        .O(\PACKET_OUT[17]_INST_0_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_19 
       (.I0(DataR[4]),
        .I1(DataL[4]),
        .I2(DataL[5]),
        .I3(DataR[5]),
        .O(\PACKET_OUT[17]_INST_0_i_19_n_0 ));
  CARRY4 \PACKET_OUT[17]_INST_0_i_2 
       (.CI(\PACKET_OUT[17]_INST_0_i_4_n_0 ),
        .CO({\NLW_PACKET_OUT[17]_INST_0_i_2_CO_UNCONNECTED [3:1],\PACKET_OUT[17]_INST_0_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_PACKET_OUT[17]_INST_0_i_2_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,1'b0,1'b1}));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_20 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .I2(DataL[3]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[17]_INST_0_i_20_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_21 
       (.I0(DataR[0]),
        .I1(DataL[0]),
        .I2(DataL[1]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[17]_INST_0_i_21_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_22 
       (.I0(DataL[7]),
        .I1(DataR[7]),
        .I2(DataL[6]),
        .I3(DataR[6]),
        .O(\PACKET_OUT[17]_INST_0_i_22_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_23 
       (.I0(DataL[5]),
        .I1(DataR[5]),
        .I2(DataL[4]),
        .I3(DataR[4]),
        .O(\PACKET_OUT[17]_INST_0_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_24 
       (.I0(DataL[3]),
        .I1(DataR[3]),
        .I2(DataL[2]),
        .I3(DataR[2]),
        .O(\PACKET_OUT[17]_INST_0_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_25 
       (.I0(DataL[1]),
        .I1(DataR[1]),
        .I2(DataL[0]),
        .I3(DataR[0]),
        .O(\PACKET_OUT[17]_INST_0_i_25_n_0 ));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \PACKET_OUT[17]_INST_0_i_3 
       (.CI(\PACKET_OUT[17]_INST_0_i_5_n_0 ),
        .CO({ALU1__0,\NLW_PACKET_OUT[17]_INST_0_i_3_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\PACKET_OUT[17]_INST_0_i_6_n_0 ,\PACKET_OUT[17]_INST_0_i_7_n_0 ,\PACKET_OUT[17]_INST_0_i_8_n_0 ,\PACKET_OUT[17]_INST_0_i_9_n_0 }),
        .O(\NLW_PACKET_OUT[17]_INST_0_i_3_O_UNCONNECTED [3:0]),
        .S({\PACKET_OUT[17]_INST_0_i_10_n_0 ,\PACKET_OUT[17]_INST_0_i_11_n_0 ,\PACKET_OUT[17]_INST_0_i_12_n_0 ,\PACKET_OUT[17]_INST_0_i_13_n_0 }));
  CARRY4 \PACKET_OUT[17]_INST_0_i_4 
       (.CI(\PACKET_OUT[11]_INST_0_i_4_n_0 ),
        .CO({\PACKET_OUT[17]_INST_0_i_4_n_0 ,\NLW_PACKET_OUT[17]_INST_0_i_4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[15:12]),
        .O({\PACKET_OUT[17]_INST_0_i_4_n_4 ,\PACKET_OUT[17]_INST_0_i_4_n_5 ,\PACKET_OUT[17]_INST_0_i_4_n_6 ,\PACKET_OUT[17]_INST_0_i_4_n_7 }),
        .S({\PACKET_OUT[17]_INST_0_i_14_n_0 ,\PACKET_OUT[17]_INST_0_i_15_n_0 ,\PACKET_OUT[17]_INST_0_i_16_n_0 ,\PACKET_OUT[17]_INST_0_i_17_n_0 }));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \PACKET_OUT[17]_INST_0_i_5 
       (.CI(1'b0),
        .CO({\PACKET_OUT[17]_INST_0_i_5_n_0 ,\NLW_PACKET_OUT[17]_INST_0_i_5_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\PACKET_OUT[17]_INST_0_i_18_n_0 ,\PACKET_OUT[17]_INST_0_i_19_n_0 ,\PACKET_OUT[17]_INST_0_i_20_n_0 ,\PACKET_OUT[17]_INST_0_i_21_n_0 }),
        .O(\NLW_PACKET_OUT[17]_INST_0_i_5_O_UNCONNECTED [3:0]),
        .S({\PACKET_OUT[17]_INST_0_i_22_n_0 ,\PACKET_OUT[17]_INST_0_i_23_n_0 ,\PACKET_OUT[17]_INST_0_i_24_n_0 ,\PACKET_OUT[17]_INST_0_i_25_n_0 }));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_6 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .I2(DataL[15]),
        .I3(DataR[15]),
        .O(\PACKET_OUT[17]_INST_0_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_7 
       (.I0(DataR[12]),
        .I1(DataL[12]),
        .I2(DataL[13]),
        .I3(DataR[13]),
        .O(\PACKET_OUT[17]_INST_0_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_8 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .I2(DataL[11]),
        .I3(DataR[11]),
        .O(\PACKET_OUT[17]_INST_0_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_9 
       (.I0(DataR[8]),
        .I1(DataL[8]),
        .I2(DataL[9]),
        .I3(DataR[9]),
        .O(\PACKET_OUT[17]_INST_0_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hFE00)) 
    \PACKET_OUT[18]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(CPY),
        .O(PACKET_OUT[18]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \PACKET_OUT[19]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(BR),
        .O(PACKET_OUT[19]));
  MUXF7 \PACKET_OUT[1]_INST_0 
       (.I0(\PACKET_OUT[1]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[1]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[1]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[1]_INST_0_i_1 
       (.I0(\PACKET_OUT[1]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_6 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[1]),
        .O(\PACKET_OUT[1]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[1]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[1]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[1]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[1]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[1]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[1]_INST_0_i_3 
       (.I0(data5[2]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[1]),
        .I4(DataR[1]),
        .O(\PACKET_OUT[1]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[1]_INST_0_i_4 
       (.I0(data9[2]),
        .I1(DataL[1]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[2]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[2]),
        .O(\PACKET_OUT[1]_INST_0_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB800B800FF000000)) 
    \PACKET_OUT[1]_INST_0_i_5 
       (.I0(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I4(\PACKET_OUT[1]_INST_0_i_7_n_0 ),
        .I5(DataR[0]),
        .O(data7[2]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \PACKET_OUT[1]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[1]_INST_0_i_8_n_0 ),
        .O(data6[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[1]_INST_0_i_7 
       (.I0(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_91_n_0 ),
        .O(\PACKET_OUT[1]_INST_0_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000B08)) 
    \PACKET_OUT[1]_INST_0_i_8 
       (.I0(DataL[0]),
        .I1(DataR[0]),
        .I2(DataR[2]),
        .I3(DataL[1]),
        .I4(DataR[3]),
        .I5(DataR[1]),
        .O(\PACKET_OUT[1]_INST_0_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF00000800)) 
    \PACKET_OUT[20]_INST_0 
       (.I0(\PACKET_OUT[20]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(LR2[0]),
        .O(PACKET_OUT[20]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[20]_INST_0_i_1 
       (.I0(LR2[1]),
        .I1(Z),
        .I2(LR2[0]),
        .O(\PACKET_OUT[20]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF00000800)) 
    \PACKET_OUT[21]_INST_0 
       (.I0(\PACKET_OUT[21]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(LR2[1]),
        .O(PACKET_OUT[21]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[21]_INST_0_i_1 
       (.I0(LR2[0]),
        .I1(Z),
        .I2(LR2[1]),
        .O(\PACKET_OUT[21]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[22]_INST_0 
       (.I0(Z),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[0]),
        .O(PACKET_OUT[22]));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[23]_INST_0 
       (.I0(\PACKET_OUT[23]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[1]),
        .O(PACKET_OUT[23]));
  LUT2 #(
    .INIT(4'h8)) 
    \PACKET_OUT[23]_INST_0_i_1 
       (.I0(Z),
        .I1(dest[0]),
        .O(\PACKET_OUT[23]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[24]_INST_0 
       (.I0(\PACKET_OUT[24]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[2]),
        .O(PACKET_OUT[24]));
  LUT3 #(
    .INIT(8'h80)) 
    \PACKET_OUT[24]_INST_0_i_1 
       (.I0(dest[1]),
        .I1(dest[0]),
        .I2(Z),
        .O(\PACKET_OUT[24]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[25]_INST_0 
       (.I0(\PACKET_OUT[25]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[3]),
        .O(PACKET_OUT[25]));
  LUT4 #(
    .INIT(16'h8000)) 
    \PACKET_OUT[25]_INST_0_i_1 
       (.I0(dest[2]),
        .I1(Z),
        .I2(dest[0]),
        .I3(dest[1]),
        .O(\PACKET_OUT[25]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[26]_INST_0 
       (.I0(\PACKET_OUT[26]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[4]),
        .O(PACKET_OUT[26]));
  LUT5 #(
    .INIT(32'h80000000)) 
    \PACKET_OUT[26]_INST_0_i_1 
       (.I0(dest[3]),
        .I1(dest[1]),
        .I2(dest[0]),
        .I3(Z),
        .I4(dest[2]),
        .O(\PACKET_OUT[26]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[27]_INST_0 
       (.I0(\PACKET_OUT[27]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[5]),
        .O(PACKET_OUT[27]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \PACKET_OUT[27]_INST_0_i_1 
       (.I0(dest[4]),
        .I1(dest[2]),
        .I2(Z),
        .I3(dest[0]),
        .I4(dest[1]),
        .I5(dest[3]),
        .O(\PACKET_OUT[27]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF00000800)) 
    \PACKET_OUT[28]_INST_0 
       (.I0(\PACKET_OUT[28]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[6]),
        .O(PACKET_OUT[28]));
  LUT3 #(
    .INIT(8'h78)) 
    \PACKET_OUT[28]_INST_0_i_1 
       (.I0(\PACKET_OUT[27]_INST_0_i_1_n_0 ),
        .I1(dest[5]),
        .I2(dest[6]),
        .O(\PACKET_OUT[28]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h3FFFBCFFC0008000)) 
    \PACKET_OUT[29]_INST_0 
       (.I0(\PACKET_OUT[29]_INST_0_i_1_n_7 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[0]),
        .O(PACKET_OUT[29]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[29]_INST_0_i_1 
       (.CI(1'b0),
        .CO({\PACKET_OUT[29]_INST_0_i_1_n_0 ,\NLW_PACKET_OUT[29]_INST_0_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(gen[3:0]),
        .O({\PACKET_OUT[29]_INST_0_i_1_n_4 ,\PACKET_OUT[29]_INST_0_i_1_n_5 ,\PACKET_OUT[29]_INST_0_i_1_n_6 ,\PACKET_OUT[29]_INST_0_i_1_n_7 }),
        .S({\PACKET_OUT[29]_INST_0_i_2_n_0 ,\PACKET_OUT[29]_INST_0_i_3_n_0 ,\PACKET_OUT[29]_INST_0_i_4_n_0 ,\PACKET_OUT[29]_INST_0_i_5_n_0 }));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[29]_INST_0_i_2 
       (.I0(gen[3]),
        .I1(DataR[3]),
        .O(\PACKET_OUT[29]_INST_0_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[29]_INST_0_i_3 
       (.I0(gen[2]),
        .I1(DataR[2]),
        .O(\PACKET_OUT[29]_INST_0_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[29]_INST_0_i_4 
       (.I0(gen[1]),
        .I1(DataR[1]),
        .O(\PACKET_OUT[29]_INST_0_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[29]_INST_0_i_5 
       (.I0(gen[0]),
        .I1(DataR[0]),
        .O(\PACKET_OUT[29]_INST_0_i_5_n_0 ));
  MUXF7 \PACKET_OUT[2]_INST_0 
       (.I0(\PACKET_OUT[2]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[2]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[2]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[2]_INST_0_i_1 
       (.I0(\PACKET_OUT[2]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_5 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[2]),
        .O(\PACKET_OUT[2]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[2]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[2]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[2]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[2]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[2]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[2]_INST_0_i_3 
       (.I0(data5[3]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[2]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[2]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[2]_INST_0_i_4 
       (.I0(data9[3]),
        .I1(DataL[2]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[3]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[3]),
        .O(\PACKET_OUT[2]_INST_0_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFF00B8000000B800)) 
    \PACKET_OUT[2]_INST_0_i_5 
       (.I0(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I4(DataR[0]),
        .I5(\PACKET_OUT[3]_INST_0_i_22_n_0 ),
        .O(data7[3]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[2]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_61_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_62_n_0 ),
        .O(data6[3]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[2]_INST_0_i_7 
       (.I0(DataL[8]),
        .I1(DataR[2]),
        .I2(DataL[12]),
        .I3(DataR[3]),
        .I4(DataL[4]),
        .O(\PACKET_OUT[2]_INST_0_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[2]_INST_0_i_8 
       (.I0(DataL[14]),
        .I1(DataL[6]),
        .I2(DataR[2]),
        .I3(DataL[10]),
        .I4(DataR[3]),
        .I5(DataL[2]),
        .O(\PACKET_OUT[2]_INST_0_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[30]_INST_0 
       (.I0(\PACKET_OUT[30]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[1]),
        .O(PACKET_OUT[30]));
  LUT4 #(
    .INIT(16'h9F90)) 
    \PACKET_OUT[30]_INST_0_i_1 
       (.I0(gen[0]),
        .I1(gen[1]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[29]_INST_0_i_1_n_6 ),
        .O(\PACKET_OUT[30]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[31]_INST_0 
       (.I0(\PACKET_OUT[31]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[2]),
        .O(PACKET_OUT[31]));
  LUT5 #(
    .INIT(32'hE1FFE100)) 
    \PACKET_OUT[31]_INST_0_i_1 
       (.I0(gen[1]),
        .I1(gen[0]),
        .I2(gen[2]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(\PACKET_OUT[29]_INST_0_i_1_n_5 ),
        .O(\PACKET_OUT[31]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[32]_INST_0 
       (.I0(\PACKET_OUT[32]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[3]),
        .O(PACKET_OUT[32]));
  LUT6 #(
    .INIT(64'hFE01FFFFFE010000)) 
    \PACKET_OUT[32]_INST_0_i_1 
       (.I0(gen[2]),
        .I1(gen[0]),
        .I2(gen[1]),
        .I3(gen[3]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(\PACKET_OUT[29]_INST_0_i_1_n_4 ),
        .O(\PACKET_OUT[32]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[33]_INST_0 
       (.I0(\PACKET_OUT[33]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[4]),
        .O(PACKET_OUT[33]));
  LUT4 #(
    .INIT(16'h9F90)) 
    \PACKET_OUT[33]_INST_0_i_1 
       (.I0(\PACKET_OUT[33]_INST_0_i_2_n_0 ),
        .I1(gen[4]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[36]_INST_0_i_3_n_7 ),
        .O(\PACKET_OUT[33]_INST_0_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[33]_INST_0_i_2 
       (.I0(gen[2]),
        .I1(gen[0]),
        .I2(gen[1]),
        .I3(gen[3]),
        .O(\PACKET_OUT[33]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[34]_INST_0 
       (.I0(\PACKET_OUT[34]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[5]),
        .O(PACKET_OUT[34]));
  LUT4 #(
    .INIT(16'h9F90)) 
    \PACKET_OUT[34]_INST_0_i_1 
       (.I0(\PACKET_OUT[34]_INST_0_i_2_n_0 ),
        .I1(gen[5]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[36]_INST_0_i_3_n_6 ),
        .O(\PACKET_OUT[34]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[34]_INST_0_i_2 
       (.I0(gen[3]),
        .I1(gen[1]),
        .I2(gen[0]),
        .I3(gen[2]),
        .I4(gen[4]),
        .O(\PACKET_OUT[34]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[35]_INST_0 
       (.I0(\PACKET_OUT[35]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[6]),
        .O(PACKET_OUT[35]));
  LUT4 #(
    .INIT(16'h9F90)) 
    \PACKET_OUT[35]_INST_0_i_1 
       (.I0(\PACKET_OUT[36]_INST_0_i_2_n_0 ),
        .I1(gen[6]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[36]_INST_0_i_3_n_5 ),
        .O(\PACKET_OUT[35]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[36]_INST_0 
       (.I0(\PACKET_OUT[36]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[7]),
        .O(PACKET_OUT[36]));
  LUT5 #(
    .INIT(32'hE1FFE100)) 
    \PACKET_OUT[36]_INST_0_i_1 
       (.I0(gen[6]),
        .I1(\PACKET_OUT[36]_INST_0_i_2_n_0 ),
        .I2(gen[7]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(\PACKET_OUT[36]_INST_0_i_3_n_4 ),
        .O(\PACKET_OUT[36]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \PACKET_OUT[36]_INST_0_i_2 
       (.I0(gen[4]),
        .I1(gen[2]),
        .I2(gen[0]),
        .I3(gen[1]),
        .I4(gen[3]),
        .I5(gen[5]),
        .O(\PACKET_OUT[36]_INST_0_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[36]_INST_0_i_3 
       (.CI(\PACKET_OUT[29]_INST_0_i_1_n_0 ),
        .CO({\PACKET_OUT[36]_INST_0_i_3_n_0 ,\NLW_PACKET_OUT[36]_INST_0_i_3_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\PACKET_OUT[36]_INST_0_i_4_n_0 ,gen[6:4]}),
        .O({\PACKET_OUT[36]_INST_0_i_3_n_4 ,\PACKET_OUT[36]_INST_0_i_3_n_5 ,\PACKET_OUT[36]_INST_0_i_3_n_6 ,\PACKET_OUT[36]_INST_0_i_3_n_7 }),
        .S({\PACKET_OUT[36]_INST_0_i_5_n_0 ,\PACKET_OUT[36]_INST_0_i_6_n_0 ,\PACKET_OUT[36]_INST_0_i_7_n_0 ,\PACKET_OUT[36]_INST_0_i_8_n_0 }));
  LUT1 #(
    .INIT(2'h1)) 
    \PACKET_OUT[36]_INST_0_i_4 
       (.I0(DataR[7]),
        .O(\PACKET_OUT[36]_INST_0_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[36]_INST_0_i_5 
       (.I0(DataR[7]),
        .I1(gen[7]),
        .O(\PACKET_OUT[36]_INST_0_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[36]_INST_0_i_6 
       (.I0(gen[6]),
        .I1(DataR[6]),
        .O(\PACKET_OUT[36]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[36]_INST_0_i_7 
       (.I0(gen[5]),
        .I1(DataR[5]),
        .O(\PACKET_OUT[36]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[36]_INST_0_i_8 
       (.I0(gen[4]),
        .I1(DataR[4]),
        .O(\PACKET_OUT[36]_INST_0_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFBCBF80808080)) 
    \PACKET_OUT[37]_INST_0 
       (.I0(\PACKET_OUT[37]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(color[0]),
        .O(PACKET_OUT[37]));
  LUT5 #(
    .INIT(32'hFCBB3088)) 
    \PACKET_OUT[37]_INST_0_i_1 
       (.I0(\PACKET_OUT[39]_INST_0_i_5_n_7 ),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(color[0]),
        .O(\PACKET_OUT[37]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFBCBF80808080)) 
    \PACKET_OUT[38]_INST_0 
       (.I0(\PACKET_OUT[38]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(color[1]),
        .O(PACKET_OUT[38]));
  LUT5 #(
    .INIT(32'hFCBB3088)) 
    \PACKET_OUT[38]_INST_0_i_1 
       (.I0(\PACKET_OUT[39]_INST_0_i_5_n_6 ),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(DataR[1]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(color[1]),
        .O(\PACKET_OUT[38]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFBCBF80808080)) 
    \PACKET_OUT[39]_INST_0 
       (.I0(\PACKET_OUT[39]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(color[2]),
        .O(PACKET_OUT[39]));
  LUT5 #(
    .INIT(32'hFCBB3088)) 
    \PACKET_OUT[39]_INST_0_i_1 
       (.I0(\PACKET_OUT[39]_INST_0_i_5_n_5 ),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(DataR[2]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(color[2]),
        .O(\PACKET_OUT[39]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h55545500)) 
    \PACKET_OUT[39]_INST_0_i_2 
       (.I0(OPC[4]),
        .I1(OPC[1]),
        .I2(OPC[0]),
        .I3(OPC[2]),
        .I4(OPC[5]),
        .O(\PACKET_OUT[39]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEFEFEEEEFFEFE)) 
    \PACKET_OUT[39]_INST_0_i_3 
       (.I0(OPC[4]),
        .I1(OPC[1]),
        .I2(OPC[5]),
        .I3(OPC[3]),
        .I4(OPC[0]),
        .I5(OPC[2]),
        .O(\PACKET_OUT[39]_INST_0_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h30F430C3)) 
    \PACKET_OUT[39]_INST_0_i_4 
       (.I0(OPC[1]),
        .I1(OPC[0]),
        .I2(OPC[2]),
        .I3(OPC[4]),
        .I4(OPC[3]),
        .O(\PACKET_OUT[39]_INST_0_i_4_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[39]_INST_0_i_5 
       (.CI(\PACKET_OUT[36]_INST_0_i_3_n_0 ),
        .CO(\NLW_PACKET_OUT[39]_INST_0_i_5_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,DataR[8:7]}),
        .O({\NLW_PACKET_OUT[39]_INST_0_i_5_O_UNCONNECTED [3],\PACKET_OUT[39]_INST_0_i_5_n_5 ,\PACKET_OUT[39]_INST_0_i_5_n_6 ,\PACKET_OUT[39]_INST_0_i_5_n_7 }),
        .S({1'b0,\PACKET_OUT[39]_INST_0_i_6_n_0 ,\PACKET_OUT[39]_INST_0_i_7_n_0 ,\PACKET_OUT[39]_INST_0_i_8_n_0 }));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[39]_INST_0_i_6 
       (.I0(DataR[9]),
        .I1(DataR[10]),
        .O(\PACKET_OUT[39]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[39]_INST_0_i_7 
       (.I0(DataR[8]),
        .I1(DataR[9]),
        .O(\PACKET_OUT[39]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[39]_INST_0_i_8 
       (.I0(DataR[7]),
        .I1(DataR[8]),
        .O(\PACKET_OUT[39]_INST_0_i_8_n_0 ));
  MUXF7 \PACKET_OUT[3]_INST_0 
       (.I0(\PACKET_OUT[3]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[3]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[3]_INST_0_i_1 
       (.I0(\PACKET_OUT[3]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_4 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[3]),
        .O(\PACKET_OUT[3]_INST_0_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_10 
       (.I0(DataR[0]),
        .I1(DataL[0]),
        .O(\PACKET_OUT[3]_INST_0_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[3]_INST_0_i_11 
       (.I0(DataL[3]),
        .I1(DataR[3]),
        .O(\PACKET_OUT[3]_INST_0_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[3]_INST_0_i_12 
       (.I0(DataL[2]),
        .I1(DataR[2]),
        .O(\PACKET_OUT[3]_INST_0_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[3]_INST_0_i_13 
       (.I0(DataL[1]),
        .I1(DataR[1]),
        .O(\PACKET_OUT[3]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[3]_INST_0_i_14 
       (.I0(DataL[0]),
        .I1(DataR[0]),
        .O(\PACKET_OUT[3]_INST_0_i_14_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[3]_INST_0_i_15 
       (.CI(1'b0),
        .CO({\PACKET_OUT[3]_INST_0_i_15_n_0 ,\NLW_PACKET_OUT[3]_INST_0_i_15_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[3:0]),
        .O({data9[4:2],\NLW_PACKET_OUT[3]_INST_0_i_15_O_UNCONNECTED [0]}),
        .S({\PACKET_OUT[3]_INST_0_i_18_n_0 ,\PACKET_OUT[3]_INST_0_i_19_n_0 ,\PACKET_OUT[3]_INST_0_i_20_n_0 ,\PACKET_OUT[3]_INST_0_i_21_n_0 }));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[3]_INST_0_i_16 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_22_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_38_n_0 ),
        .O(data7[4]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[3]_INST_0_i_17 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_55_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_61_n_0 ),
        .O(data6[4]));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_18 
       (.I0(DataR[3]),
        .I1(DataL[3]),
        .O(\PACKET_OUT[3]_INST_0_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_19 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .O(\PACKET_OUT[3]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[3]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[3]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[3]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[3]_INST_0_i_6_n_0 ),
        .O(\PACKET_OUT[3]_INST_0_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_20 
       (.I0(DataR[1]),
        .I1(DataL[1]),
        .O(\PACKET_OUT[3]_INST_0_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_21 
       (.I0(DataR[0]),
        .I1(DataL[0]),
        .O(\PACKET_OUT[3]_INST_0_i_21_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[3]_INST_0_i_22 
       (.I0(\PACKET_OUT[16]_INST_0_i_86_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .O(\PACKET_OUT[3]_INST_0_i_22_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[3]_INST_0_i_3 
       (.I0(data5[4]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[3]),
        .I4(DataR[3]),
        .O(\PACKET_OUT[3]_INST_0_i_3_n_0 ));
  CARRY4 \PACKET_OUT[3]_INST_0_i_4 
       (.CI(1'b0),
        .CO({\PACKET_OUT[3]_INST_0_i_4_n_0 ,\NLW_PACKET_OUT[3]_INST_0_i_4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[3:0]),
        .O({\PACKET_OUT[3]_INST_0_i_4_n_4 ,\PACKET_OUT[3]_INST_0_i_4_n_5 ,\PACKET_OUT[3]_INST_0_i_4_n_6 ,\PACKET_OUT[3]_INST_0_i_4_n_7 }),
        .S({\PACKET_OUT[3]_INST_0_i_7_n_0 ,\PACKET_OUT[3]_INST_0_i_8_n_0 ,\PACKET_OUT[3]_INST_0_i_9_n_0 ,\PACKET_OUT[3]_INST_0_i_10_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[3]_INST_0_i_5 
       (.CI(1'b0),
        .CO({\PACKET_OUT[3]_INST_0_i_5_n_0 ,\NLW_PACKET_OUT[3]_INST_0_i_5_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI(DataL[3:0]),
        .O(p_0_in__0[3:0]),
        .S({\PACKET_OUT[3]_INST_0_i_11_n_0 ,\PACKET_OUT[3]_INST_0_i_12_n_0 ,\PACKET_OUT[3]_INST_0_i_13_n_0 ,\PACKET_OUT[3]_INST_0_i_14_n_0 }));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[3]_INST_0_i_6 
       (.I0(data9[4]),
        .I1(DataL[3]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[4]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[4]),
        .O(\PACKET_OUT[3]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_7 
       (.I0(DataR[3]),
        .I1(DataL[3]),
        .O(\PACKET_OUT[3]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_8 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .O(\PACKET_OUT[3]_INST_0_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_9 
       (.I0(DataR[1]),
        .I1(DataL[1]),
        .O(\PACKET_OUT[3]_INST_0_i_9_n_0 ));
  MUXF7 \PACKET_OUT[4]_INST_0 
       (.I0(\PACKET_OUT[4]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[4]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[4]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[4]_INST_0_i_1 
       (.I0(\PACKET_OUT[4]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_7 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[4]),
        .O(\PACKET_OUT[4]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[4]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[4]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[4]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[4]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[4]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[4]_INST_0_i_3 
       (.I0(data5[5]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[4]),
        .I4(DataR[4]),
        .O(\PACKET_OUT[4]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[4]_INST_0_i_4 
       (.I0(data9[5]),
        .I1(DataL[4]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[5]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[5]),
        .O(\PACKET_OUT[4]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[4]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_38_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_40_n_0 ),
        .O(data7[5]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[4]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_56_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_55_n_0 ),
        .O(data6[5]));
  MUXF7 \PACKET_OUT[5]_INST_0 
       (.I0(\PACKET_OUT[5]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[5]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[5]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[5]_INST_0_i_1 
       (.I0(\PACKET_OUT[5]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_6 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[5]),
        .O(\PACKET_OUT[5]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[5]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[5]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[5]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[5]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[5]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[5]_INST_0_i_3 
       (.I0(data5[6]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[5]),
        .I4(DataR[5]),
        .O(\PACKET_OUT[5]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[5]_INST_0_i_4 
       (.I0(data9[6]),
        .I1(DataL[5]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[6]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[6]),
        .O(\PACKET_OUT[5]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[5]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_40_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_39_n_0 ),
        .O(data7[6]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[5]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_57_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_56_n_0 ),
        .O(data6[6]));
  MUXF7 \PACKET_OUT[6]_INST_0 
       (.I0(\PACKET_OUT[6]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[6]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[6]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[6]_INST_0_i_1 
       (.I0(\PACKET_OUT[6]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_5 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[6]),
        .O(\PACKET_OUT[6]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[6]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[6]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[6]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[6]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[6]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[6]_INST_0_i_3 
       (.I0(data5[7]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[6]),
        .I4(DataR[6]),
        .O(\PACKET_OUT[6]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[6]_INST_0_i_4 
       (.I0(data9[7]),
        .I1(DataL[6]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[7]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[7]),
        .O(\PACKET_OUT[6]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[6]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_39_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_43_n_0 ),
        .O(data7[7]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[6]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_58_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_57_n_0 ),
        .O(data6[7]));
  MUXF7 \PACKET_OUT[7]_INST_0 
       (.I0(\PACKET_OUT[7]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[7]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[7]_INST_0_i_1 
       (.I0(\PACKET_OUT[7]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_4 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[7]),
        .O(\PACKET_OUT[7]_INST_0_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_10 
       (.I0(DataR[4]),
        .I1(DataL[4]),
        .O(\PACKET_OUT[7]_INST_0_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[7]_INST_0_i_11 
       (.I0(DataL[7]),
        .I1(DataR[7]),
        .O(\PACKET_OUT[7]_INST_0_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[7]_INST_0_i_12 
       (.I0(DataL[6]),
        .I1(DataR[6]),
        .O(\PACKET_OUT[7]_INST_0_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[7]_INST_0_i_13 
       (.I0(DataL[5]),
        .I1(DataR[5]),
        .O(\PACKET_OUT[7]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[7]_INST_0_i_14 
       (.I0(DataL[4]),
        .I1(DataR[4]),
        .O(\PACKET_OUT[7]_INST_0_i_14_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[7]_INST_0_i_15 
       (.CI(\PACKET_OUT[3]_INST_0_i_15_n_0 ),
        .CO({\PACKET_OUT[7]_INST_0_i_15_n_0 ,\NLW_PACKET_OUT[7]_INST_0_i_15_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[7:4]),
        .O(data9[8:5]),
        .S({\PACKET_OUT[7]_INST_0_i_18_n_0 ,\PACKET_OUT[7]_INST_0_i_19_n_0 ,\PACKET_OUT[7]_INST_0_i_20_n_0 ,\PACKET_OUT[7]_INST_0_i_21_n_0 }));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[7]_INST_0_i_16 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_43_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_42_n_0 ),
        .O(data7[8]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[7]_INST_0_i_17 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_59_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_58_n_0 ),
        .O(data6[8]));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_18 
       (.I0(DataR[7]),
        .I1(DataL[7]),
        .O(\PACKET_OUT[7]_INST_0_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_19 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .O(\PACKET_OUT[7]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[7]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[7]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[7]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[7]_INST_0_i_6_n_0 ),
        .O(\PACKET_OUT[7]_INST_0_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_20 
       (.I0(DataR[5]),
        .I1(DataL[5]),
        .O(\PACKET_OUT[7]_INST_0_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_21 
       (.I0(DataR[4]),
        .I1(DataL[4]),
        .O(\PACKET_OUT[7]_INST_0_i_21_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[7]_INST_0_i_3 
       (.I0(data5[8]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[7]),
        .I4(DataR[7]),
        .O(\PACKET_OUT[7]_INST_0_i_3_n_0 ));
  CARRY4 \PACKET_OUT[7]_INST_0_i_4 
       (.CI(\PACKET_OUT[3]_INST_0_i_4_n_0 ),
        .CO({\PACKET_OUT[7]_INST_0_i_4_n_0 ,\NLW_PACKET_OUT[7]_INST_0_i_4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[7:4]),
        .O({\PACKET_OUT[7]_INST_0_i_4_n_4 ,\PACKET_OUT[7]_INST_0_i_4_n_5 ,\PACKET_OUT[7]_INST_0_i_4_n_6 ,\PACKET_OUT[7]_INST_0_i_4_n_7 }),
        .S({\PACKET_OUT[7]_INST_0_i_7_n_0 ,\PACKET_OUT[7]_INST_0_i_8_n_0 ,\PACKET_OUT[7]_INST_0_i_9_n_0 ,\PACKET_OUT[7]_INST_0_i_10_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[7]_INST_0_i_5 
       (.CI(\PACKET_OUT[3]_INST_0_i_5_n_0 ),
        .CO({\PACKET_OUT[7]_INST_0_i_5_n_0 ,\NLW_PACKET_OUT[7]_INST_0_i_5_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[7:4]),
        .O(p_0_in__0[7:4]),
        .S({\PACKET_OUT[7]_INST_0_i_11_n_0 ,\PACKET_OUT[7]_INST_0_i_12_n_0 ,\PACKET_OUT[7]_INST_0_i_13_n_0 ,\PACKET_OUT[7]_INST_0_i_14_n_0 }));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[7]_INST_0_i_6 
       (.I0(data9[8]),
        .I1(DataL[7]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[8]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[8]),
        .O(\PACKET_OUT[7]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_7 
       (.I0(DataR[7]),
        .I1(DataL[7]),
        .O(\PACKET_OUT[7]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_8 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .O(\PACKET_OUT[7]_INST_0_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_9 
       (.I0(DataR[5]),
        .I1(DataL[5]),
        .O(\PACKET_OUT[7]_INST_0_i_9_n_0 ));
  MUXF7 \PACKET_OUT[8]_INST_0 
       (.I0(\PACKET_OUT[8]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[8]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[8]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[8]_INST_0_i_1 
       (.I0(\PACKET_OUT[8]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_7 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[8]),
        .O(\PACKET_OUT[8]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[8]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[8]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[8]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[8]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[8]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[8]_INST_0_i_3 
       (.I0(data5[9]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[8]),
        .I4(DataR[8]),
        .O(\PACKET_OUT[8]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[8]_INST_0_i_4 
       (.I0(data9[9]),
        .I1(DataL[8]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[9]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[9]),
        .O(\PACKET_OUT[8]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[8]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_42_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_53_n_0 ),
        .O(data7[9]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[8]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_67_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_59_n_0 ),
        .O(data6[9]));
  MUXF7 \PACKET_OUT[9]_INST_0 
       (.I0(\PACKET_OUT[9]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[9]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[9]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[9]_INST_0_i_1 
       (.I0(\PACKET_OUT[9]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_6 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[9]),
        .O(\PACKET_OUT[9]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[9]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[9]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[9]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[9]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[9]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[9]_INST_0_i_3 
       (.I0(data5[10]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[9]),
        .I4(DataR[9]),
        .O(\PACKET_OUT[9]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[9]_INST_0_i_4 
       (.I0(data9[10]),
        .I1(DataL[9]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[10]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[10]),
        .O(\PACKET_OUT[9]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[9]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_53_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_52_n_0 ),
        .O(data7[10]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[9]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_68_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_67_n_0 ),
        .O(data6[10]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[0]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[0]),
        .O(WRITE_DATA[0]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[10]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[10]),
        .O(WRITE_DATA[10]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[11]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[11]),
        .O(WRITE_DATA[11]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[12]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[12]),
        .O(WRITE_DATA[12]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[13]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[13]),
        .O(WRITE_DATA[13]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[14]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[14]),
        .O(WRITE_DATA[14]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[15]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[15]),
        .O(WRITE_DATA[15]));
  LUT5 #(
    .INIT(32'h0A0AABEE)) 
    \WRITE_DATA[15]_INST_0_i_1 
       (.I0(OPC[5]),
        .I1(OPC[3]),
        .I2(OPC[0]),
        .I3(OPC[4]),
        .I4(OPC[1]),
        .O(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFAAEEFB)) 
    \WRITE_DATA[15]_INST_0_i_2 
       (.I0(OPC[2]),
        .I1(OPC[0]),
        .I2(OPC[3]),
        .I3(OPC[5]),
        .I4(OPC[1]),
        .I5(OPC[4]),
        .O(\WRITE_DATA[15]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5555FFFF50504054)) 
    \WRITE_DATA[15]_INST_0_i_3 
       (.I0(OPC[4]),
        .I1(OPC[1]),
        .I2(OPC[5]),
        .I3(OPC[3]),
        .I4(OPC[0]),
        .I5(OPC[2]),
        .O(\WRITE_DATA[15]_INST_0_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[1]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[1]),
        .O(WRITE_DATA[1]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[2]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[2]),
        .O(WRITE_DATA[2]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[3]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[3]),
        .O(WRITE_DATA[3]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[4]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[4]),
        .O(WRITE_DATA[4]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[5]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[5]),
        .O(WRITE_DATA[5]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[6]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[6]),
        .O(WRITE_DATA[6]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[7]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[7]),
        .O(WRITE_DATA[7]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[8]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[8]),
        .O(WRITE_DATA[8]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[9]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[9]),
        .O(WRITE_DATA[9]));
  LUT6 #(
    .INIT(64'h0000000000020000)) 
    WRITE_EN_INST_0
       (.I0(OPC[5]),
        .I1(OPC[3]),
        .I2(OPC[4]),
        .I3(OPC[2]),
        .I4(OPC[0]),
        .I5(OPC[1]),
        .O(WRITE_EN));
  (* DONT_TOUCH *) 
  CE ce
       (.CE_Ack_in(Ack_in),
        .CE_Ack_out(Ack_out),
        .CE_CP(CP),
        .CE_Send_in(Send_in),
        .CE_Send_out(Send_out),
        .Exb(DEL),
        .MR(MR));
endmodule

(* ECO_CHECKSUM = "902ec5e3" *) (* POWER_OPT_BRAM_CDC = "10" *) (* POWER_OPT_BRAM_SR_ADDR = "2" *) 
(* POWER_OPT_LOOPED_NET_PERCENTAGE = "3" *) (* dont_touch = "true" *) 
(* NotValidForBitStream *)
(* \DesignAttr:ENABLE_NOC_NETLIST_VIEW  *) 
(* \DesignAttr:ENABLE_AIE_NETLIST_VIEW  *) 
module JOIN_DDP
   (MR,
    Send_in,
    Ack_in,
    PACKET_IN,
    Send_out,
    Ack_out,
    PACKET_OUT);
  input MR;
  input Send_in;
  input Ack_in;
  input [37:0]PACKET_IN;
  output Send_out;
  output Ack_out;
  output [37:0]PACKET_OUT;

  (* DONT_TOUCH *) wire [5:0]ADDR;
  wire Ack_in;
  wire Ack_in_IBUF;
  wire Ack_out;
  wire Ack_out_OBUF;
  (* DONT_TOUCH *) wire B_Ack_out;
  (* DONT_TOUCH *) wire [37:0]B_PACKET_OUT;
  (* DONT_TOUCH *) wire B_Send_out_EXTERNAL;
  (* DONT_TOUCH *) wire B_Send_out_INTERNAL;
  (* DONT_TOUCH *) wire COPY_Ack_out;
  (* DONT_TOUCH *) wire [37:0]COPY_PACKET_OUT;
  (* DONT_TOUCH *) wire COPY_Send_out;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire C_Ack_out;
  wire DEL;
  (* DONT_TOUCH *) wire [37:0]DL;
  (* DONT_TOUCH *) wire FP_Ack_out;
  (* DONT_TOUCH *) wire [39:0]FP_PACKET_OUT;
  (* DONT_TOUCH *) wire FP_Send_out;
  wire LOAD_FLG;
  (* DONT_TOUCH *) wire MA_Ack_out;
  (* DONT_TOUCH *) wire [39:0]MA_PACKET_OUT;
  (* DONT_TOUCH *) wire MA_Send_out;
  (* DONT_TOUCH *) wire MMCAM_Ack_out;
  (* DONT_TOUCH *) wire [37:0]MMCAM_PACKET_OUT;
  (* DONT_TOUCH *) wire MMCAM_Send_out;
  (* DONT_TOUCH *) wire MMRAM_Ack_out;
  (* DONT_TOUCH *) wire [51:0]MMRAM_PACKET_OUT;
  (* DONT_TOUCH *) wire MMRAM_Send_out;
  wire MR;
  wire MR_IBUF;
  (* DONT_TOUCH *) wire M_Ack_out;
  wire M_Ack_out_IN;
  (* DONT_TOUCH *) wire [37:0]M_PACKET_OUT;
  (* DONT_TOUCH *) wire M_Send_out;
  wire [37:0]PACKET_IN;
  wire [37:0]PACKET_IN_IBUF;
  wire [37:0]PACKET_OUT;
  (* DONT_TOUCH *) wire PS_Ack_out;
  wire PS_DEL;
  (* DONT_TOUCH *) wire [61:0]PS_PACKET_OUT;
  (* DONT_TOUCH *) wire PS_Send_out;
  wire Send_in;
  wire Send_in_IBUF;
  wire Send_out;
  wire Send_out_OBUF;
  wire WRITE_DATA;
  wire WRITE_EN;
  wire WR_E;
  wire [15:1]NLW_FP_WRITE_DATA_UNCONNECTED;

initial begin
 $sdf_annotate("JOIN_DDP_SIM_time_impl.sdf",,,,"tool_control");
end
  IBUF Ack_in_IBUF_inst
       (.I(Ack_in),
        .O(Ack_in_IBUF));
  OBUF Ack_out_OBUF_inst
       (.I(Ack_out_OBUF),
        .O(Ack_out));
  (* DONT_TOUCH *) 
  B_Stage B
       (.Ack_in_a(M_Ack_out_IN),
        .Ack_in_b(C_Ack_out),
        .Ack_out(B_Ack_out),
        .MR(MR_IBUF),
        .PACKET_IN(COPY_PACKET_OUT),
        .PACKET_OUT(B_PACKET_OUT),
        .Send_in(COPY_Send_out),
        .Send_out_a(B_Send_out_INTERNAL),
        .Send_out_b(B_Send_out_EXTERNAL));
  (* DONT_TOUCH *) 
  COPY_Stage COPY
       (.Ack_in(B_Ack_out),
        .Ack_out(COPY_Ack_out),
        .MR(MR_IBUF),
        .PACKET_IN(MA_PACKET_OUT),
        .PACKET_OUT(COPY_PACKET_OUT),
        .Send_in(MA_Send_out),
        .Send_out(COPY_Send_out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  FP_Stage FP
       (.Ack_in(MA_Ack_out),
        .Ack_out(FP_Ack_out),
        .DEL(PS_DEL),
        .LOAD_FLG(LOAD_FLG),
        .MR(MR_IBUF),
        .PACKET_IN(PS_PACKET_OUT),
        .PACKET_OUT(FP_PACKET_OUT),
        .Send_in(PS_Send_out),
        .Send_out(FP_Send_out),
        .WRITE_DATA({NLW_FP_WRITE_DATA_UNCONNECTED[15:1],WRITE_DATA}),
        .WRITE_EN(WRITE_EN));
  (* DONT_TOUCH *) 
  M_Stage M
       (.Ack_in(MMCAM_Ack_out),
        .Ack_out_EX(Ack_out_OBUF),
        .Ack_out_IN(M_Ack_out_IN),
        .MR(MR_IBUF),
        .PACKET_IN_EXTERNAL(PACKET_IN_IBUF),
        .PACKET_IN_INTERNAL(B_PACKET_OUT),
        .PACKET_OUT(M_PACKET_OUT),
        .Send_in_EX(Send_in_IBUF),
        .Send_in_IN(B_Send_out_INTERNAL),
        .Send_out(M_Send_out));
  (* DONT_TOUCH *) 
  MA_Stage MA
       (.Ack_in(COPY_Ack_out),
        .Ack_out(MA_Ack_out),
        .LOAD_FLG(LOAD_FLG),
        .MR(MR_IBUF),
        .PACKET_IN(FP_PACKET_OUT),
        .PACKET_OUT(MA_PACKET_OUT),
        .Send_in(FP_Send_out),
        .Send_out(MA_Send_out),
        .WRITE_DATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,WRITE_DATA}),
        .WRITE_EN(WRITE_EN));
  (* DONT_TOUCH *) 
  MMCAM_Stage MMCAM
       (.ADDR(ADDR),
        .Ack_in(MMRAM_Ack_out),
        .Ack_out(MMCAM_Ack_out),
        .DEL(DEL),
        .MR(MR_IBUF),
        .PACKET_IN(M_PACKET_OUT),
        .PACKET_OUT(MMCAM_PACKET_OUT),
        .Send_in(M_Send_out),
        .Send_out(MMCAM_Send_out),
        .WR_E(WR_E));
  (* DONT_TOUCH *) 
  MMRAM_Stage MMRAM
       (.ADDR(ADDR),
        .Ack_in(PS_Ack_out),
        .Ack_out(MMRAM_Ack_out),
        .DEL(DEL),
        .MR(MR_IBUF),
        .PACKET_IN(MMCAM_PACKET_OUT),
        .PACKET_OUT(MMRAM_PACKET_OUT),
        .Send_in(MMCAM_Send_out),
        .Send_out(MMRAM_Send_out),
        .WR_E(WR_E));
  IBUF MR_IBUF_inst
       (.I(MR),
        .O(MR_IBUF));
  IBUF \PACKET_IN_IBUF[0]_inst 
       (.I(PACKET_IN[0]),
        .O(PACKET_IN_IBUF[0]));
  IBUF \PACKET_IN_IBUF[10]_inst 
       (.I(PACKET_IN[10]),
        .O(PACKET_IN_IBUF[10]));
  IBUF \PACKET_IN_IBUF[11]_inst 
       (.I(PACKET_IN[11]),
        .O(PACKET_IN_IBUF[11]));
  IBUF \PACKET_IN_IBUF[12]_inst 
       (.I(PACKET_IN[12]),
        .O(PACKET_IN_IBUF[12]));
  IBUF \PACKET_IN_IBUF[13]_inst 
       (.I(PACKET_IN[13]),
        .O(PACKET_IN_IBUF[13]));
  IBUF \PACKET_IN_IBUF[14]_inst 
       (.I(PACKET_IN[14]),
        .O(PACKET_IN_IBUF[14]));
  IBUF \PACKET_IN_IBUF[15]_inst 
       (.I(PACKET_IN[15]),
        .O(PACKET_IN_IBUF[15]));
  IBUF \PACKET_IN_IBUF[16]_inst 
       (.I(PACKET_IN[16]),
        .O(PACKET_IN_IBUF[16]));
  IBUF \PACKET_IN_IBUF[17]_inst 
       (.I(PACKET_IN[17]),
        .O(PACKET_IN_IBUF[17]));
  IBUF \PACKET_IN_IBUF[18]_inst 
       (.I(PACKET_IN[18]),
        .O(PACKET_IN_IBUF[18]));
  IBUF \PACKET_IN_IBUF[19]_inst 
       (.I(PACKET_IN[19]),
        .O(PACKET_IN_IBUF[19]));
  IBUF \PACKET_IN_IBUF[1]_inst 
       (.I(PACKET_IN[1]),
        .O(PACKET_IN_IBUF[1]));
  IBUF \PACKET_IN_IBUF[20]_inst 
       (.I(PACKET_IN[20]),
        .O(PACKET_IN_IBUF[20]));
  IBUF \PACKET_IN_IBUF[21]_inst 
       (.I(PACKET_IN[21]),
        .O(PACKET_IN_IBUF[21]));
  IBUF \PACKET_IN_IBUF[22]_inst 
       (.I(PACKET_IN[22]),
        .O(PACKET_IN_IBUF[22]));
  IBUF \PACKET_IN_IBUF[23]_inst 
       (.I(PACKET_IN[23]),
        .O(PACKET_IN_IBUF[23]));
  IBUF \PACKET_IN_IBUF[24]_inst 
       (.I(PACKET_IN[24]),
        .O(PACKET_IN_IBUF[24]));
  IBUF \PACKET_IN_IBUF[25]_inst 
       (.I(PACKET_IN[25]),
        .O(PACKET_IN_IBUF[25]));
  IBUF \PACKET_IN_IBUF[26]_inst 
       (.I(PACKET_IN[26]),
        .O(PACKET_IN_IBUF[26]));
  IBUF \PACKET_IN_IBUF[27]_inst 
       (.I(PACKET_IN[27]),
        .O(PACKET_IN_IBUF[27]));
  IBUF \PACKET_IN_IBUF[28]_inst 
       (.I(PACKET_IN[28]),
        .O(PACKET_IN_IBUF[28]));
  IBUF \PACKET_IN_IBUF[29]_inst 
       (.I(PACKET_IN[29]),
        .O(PACKET_IN_IBUF[29]));
  IBUF \PACKET_IN_IBUF[2]_inst 
       (.I(PACKET_IN[2]),
        .O(PACKET_IN_IBUF[2]));
  IBUF \PACKET_IN_IBUF[30]_inst 
       (.I(PACKET_IN[30]),
        .O(PACKET_IN_IBUF[30]));
  IBUF \PACKET_IN_IBUF[31]_inst 
       (.I(PACKET_IN[31]),
        .O(PACKET_IN_IBUF[31]));
  IBUF \PACKET_IN_IBUF[32]_inst 
       (.I(PACKET_IN[32]),
        .O(PACKET_IN_IBUF[32]));
  IBUF \PACKET_IN_IBUF[33]_inst 
       (.I(PACKET_IN[33]),
        .O(PACKET_IN_IBUF[33]));
  IBUF \PACKET_IN_IBUF[34]_inst 
       (.I(PACKET_IN[34]),
        .O(PACKET_IN_IBUF[34]));
  IBUF \PACKET_IN_IBUF[35]_inst 
       (.I(PACKET_IN[35]),
        .O(PACKET_IN_IBUF[35]));
  IBUF \PACKET_IN_IBUF[36]_inst 
       (.I(PACKET_IN[36]),
        .O(PACKET_IN_IBUF[36]));
  IBUF \PACKET_IN_IBUF[37]_inst 
       (.I(PACKET_IN[37]),
        .O(PACKET_IN_IBUF[37]));
  IBUF \PACKET_IN_IBUF[3]_inst 
       (.I(PACKET_IN[3]),
        .O(PACKET_IN_IBUF[3]));
  IBUF \PACKET_IN_IBUF[4]_inst 
       (.I(PACKET_IN[4]),
        .O(PACKET_IN_IBUF[4]));
  IBUF \PACKET_IN_IBUF[5]_inst 
       (.I(PACKET_IN[5]),
        .O(PACKET_IN_IBUF[5]));
  IBUF \PACKET_IN_IBUF[6]_inst 
       (.I(PACKET_IN[6]),
        .O(PACKET_IN_IBUF[6]));
  IBUF \PACKET_IN_IBUF[7]_inst 
       (.I(PACKET_IN[7]),
        .O(PACKET_IN_IBUF[7]));
  IBUF \PACKET_IN_IBUF[8]_inst 
       (.I(PACKET_IN[8]),
        .O(PACKET_IN_IBUF[8]));
  IBUF \PACKET_IN_IBUF[9]_inst 
       (.I(PACKET_IN[9]),
        .O(PACKET_IN_IBUF[9]));
  OBUF \PACKET_OUT_OBUF[0]_inst 
       (.I(DL[0]),
        .O(PACKET_OUT[0]));
  OBUF \PACKET_OUT_OBUF[10]_inst 
       (.I(DL[10]),
        .O(PACKET_OUT[10]));
  OBUF \PACKET_OUT_OBUF[11]_inst 
       (.I(DL[11]),
        .O(PACKET_OUT[11]));
  OBUF \PACKET_OUT_OBUF[12]_inst 
       (.I(DL[12]),
        .O(PACKET_OUT[12]));
  OBUF \PACKET_OUT_OBUF[13]_inst 
       (.I(DL[13]),
        .O(PACKET_OUT[13]));
  OBUF \PACKET_OUT_OBUF[14]_inst 
       (.I(DL[14]),
        .O(PACKET_OUT[14]));
  OBUF \PACKET_OUT_OBUF[15]_inst 
       (.I(DL[15]),
        .O(PACKET_OUT[15]));
  OBUF \PACKET_OUT_OBUF[16]_inst 
       (.I(DL[16]),
        .O(PACKET_OUT[16]));
  OBUF \PACKET_OUT_OBUF[17]_inst 
       (.I(DL[17]),
        .O(PACKET_OUT[17]));
  OBUF \PACKET_OUT_OBUF[18]_inst 
       (.I(DL[18]),
        .O(PACKET_OUT[18]));
  OBUF \PACKET_OUT_OBUF[19]_inst 
       (.I(DL[19]),
        .O(PACKET_OUT[19]));
  OBUF \PACKET_OUT_OBUF[1]_inst 
       (.I(DL[1]),
        .O(PACKET_OUT[1]));
  OBUF \PACKET_OUT_OBUF[20]_inst 
       (.I(DL[20]),
        .O(PACKET_OUT[20]));
  OBUF \PACKET_OUT_OBUF[21]_inst 
       (.I(DL[21]),
        .O(PACKET_OUT[21]));
  OBUF \PACKET_OUT_OBUF[22]_inst 
       (.I(DL[22]),
        .O(PACKET_OUT[22]));
  OBUF \PACKET_OUT_OBUF[23]_inst 
       (.I(DL[23]),
        .O(PACKET_OUT[23]));
  OBUF \PACKET_OUT_OBUF[24]_inst 
       (.I(DL[24]),
        .O(PACKET_OUT[24]));
  OBUF \PACKET_OUT_OBUF[25]_inst 
       (.I(DL[25]),
        .O(PACKET_OUT[25]));
  OBUF \PACKET_OUT_OBUF[26]_inst 
       (.I(DL[26]),
        .O(PACKET_OUT[26]));
  OBUF \PACKET_OUT_OBUF[27]_inst 
       (.I(DL[27]),
        .O(PACKET_OUT[27]));
  OBUF \PACKET_OUT_OBUF[28]_inst 
       (.I(DL[28]),
        .O(PACKET_OUT[28]));
  OBUF \PACKET_OUT_OBUF[29]_inst 
       (.I(DL[29]),
        .O(PACKET_OUT[29]));
  OBUF \PACKET_OUT_OBUF[2]_inst 
       (.I(DL[2]),
        .O(PACKET_OUT[2]));
  OBUF \PACKET_OUT_OBUF[30]_inst 
       (.I(DL[30]),
        .O(PACKET_OUT[30]));
  OBUF \PACKET_OUT_OBUF[31]_inst 
       (.I(DL[31]),
        .O(PACKET_OUT[31]));
  OBUF \PACKET_OUT_OBUF[32]_inst 
       (.I(DL[32]),
        .O(PACKET_OUT[32]));
  OBUF \PACKET_OUT_OBUF[33]_inst 
       (.I(DL[33]),
        .O(PACKET_OUT[33]));
  OBUF \PACKET_OUT_OBUF[34]_inst 
       (.I(DL[34]),
        .O(PACKET_OUT[34]));
  OBUF \PACKET_OUT_OBUF[35]_inst 
       (.I(DL[35]),
        .O(PACKET_OUT[35]));
  OBUF \PACKET_OUT_OBUF[36]_inst 
       (.I(DL[36]),
        .O(PACKET_OUT[36]));
  OBUF \PACKET_OUT_OBUF[37]_inst 
       (.I(DL[37]),
        .O(PACKET_OUT[37]));
  OBUF \PACKET_OUT_OBUF[3]_inst 
       (.I(DL[3]),
        .O(PACKET_OUT[3]));
  OBUF \PACKET_OUT_OBUF[4]_inst 
       (.I(DL[4]),
        .O(PACKET_OUT[4]));
  OBUF \PACKET_OUT_OBUF[5]_inst 
       (.I(DL[5]),
        .O(PACKET_OUT[5]));
  OBUF \PACKET_OUT_OBUF[6]_inst 
       (.I(DL[6]),
        .O(PACKET_OUT[6]));
  OBUF \PACKET_OUT_OBUF[7]_inst 
       (.I(DL[7]),
        .O(PACKET_OUT[7]));
  OBUF \PACKET_OUT_OBUF[8]_inst 
       (.I(DL[8]),
        .O(PACKET_OUT[8]));
  OBUF \PACKET_OUT_OBUF[9]_inst 
       (.I(DL[9]),
        .O(PACKET_OUT[9]));
  (* ABSORB = "6'b111111" *) 
  (* ADD = "6'b000000" *) 
  (* ADDC = "6'b000001" *) 
  (* ADDGEN = "6'b101010" *) 
  (* AND = "6'b000100" *) 
  (* BC = "6'b010010" *) 
  (* BNC = "6'b010011" *) 
  (* BNZ = "6'b010001" *) 
  (* BNZL = "6'b011000" *) 
  (* BZ = "6'b010000" *) 
  (* BZL = "6'b011000" *) 
  (* CHGCOL = "6'b101001" *) 
  (* CHGDEST = "6'b110000" *) 
  (* DECGEN = "6'b101100" *) 
  (* DONT_TOUCH *) 
  (* LDM = "6'b100000" *) 
  (* MUL = "6'b000111" *) 
  (* OR = "6'b000101" *) 
  (* ROL = "6'b001010" *) 
  (* ROR = "6'b001011" *) 
  (* SHL = "6'b001000" *) 
  (* SHR = "6'b001001" *) 
  (* STM = "6'b100001" *) 
  (* SUB = "6'b000010" *) 
  (* SUBC = "6'b000011" *) 
  (* XOR = "6'b000110" *) 
  PS_Stage PS
       (.Ack_in(FP_Ack_out),
        .Ack_out(PS_Ack_out),
        .DEL(PS_DEL),
        .MR(MR_IBUF),
        .PACKET_IN(MMRAM_PACKET_OUT),
        .PACKET_OUT(PS_PACKET_OUT),
        .Send_in(MMRAM_Send_out),
        .Send_out(PS_Send_out));
  IBUF Send_in_IBUF_inst
       (.I(Send_in),
        .O(Send_in_IBUF));
  OBUF Send_out_OBUF_inst
       (.I(Send_out_OBUF),
        .O(Send_out));
  (* DONT_TOUCH *) 
  C c
       (.Ack_in(Ack_in_IBUF),
        .Ack_out(C_Ack_out),
        .CP(CP),
        .MR(MR_IBUF),
        .Send_in(B_Send_out_EXTERNAL),
        .Send_out(Send_out_OBUF));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(M_Ack_out));
endmodule

(* dont_touch = "true" *) 
module MA_Stage
   (WRITE_EN,
    LOAD_FLG,
    Send_in,
    Ack_in,
    MR,
    WRITE_DATA,
    PACKET_IN,
    Send_out,
    Ack_out,
    PACKET_OUT);
  input WRITE_EN;
  input LOAD_FLG;
  input Send_in;
  input Ack_in;
  input MR;
  input [15:0]WRITE_DATA;
  input [39:0]PACKET_IN;
  output Send_out;
  output Ack_out;
  output [39:0]PACKET_OUT;

  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire [40:0]DL;
  (* DONT_TOUCH *) wire [15:0]LOAD_DATA;
  wire LOAD_FLG;
  (* DONT_TOUCH *) wire [39:0]MERGE_DATA;
  wire MR;
  (* DONT_TOUCH *) wire [23:0]OTHER_DATA;
  wire [39:16]\^PACKET_IN ;
  wire [39:0]PACKET_OUT;
  (* DONT_TOUCH *) wire [16:0]ResultData;
  wire Send_in;
  wire Send_out;
  wire [15:0]WRITE_DATA;
  wire WRITE_EN;

  assign ResultData[15:0] = PACKET_IN[15:0];
  assign \^PACKET_IN [39:16] = PACKET_IN[39:16];
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst
       (.I0(DL[39]),
        .O(OTHER_DATA[23]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__0
       (.I0(DL[38]),
        .O(OTHER_DATA[22]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__1
       (.I0(DL[37]),
        .O(OTHER_DATA[21]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__10
       (.I0(DL[28]),
        .O(OTHER_DATA[12]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__11
       (.I0(DL[27]),
        .O(OTHER_DATA[11]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__12
       (.I0(DL[26]),
        .O(OTHER_DATA[10]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__13
       (.I0(DL[25]),
        .O(OTHER_DATA[9]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__14
       (.I0(DL[24]),
        .O(OTHER_DATA[8]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__15
       (.I0(DL[23]),
        .O(OTHER_DATA[7]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__16
       (.I0(DL[22]),
        .O(OTHER_DATA[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__17
       (.I0(DL[21]),
        .O(OTHER_DATA[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__18
       (.I0(DL[20]),
        .O(OTHER_DATA[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__19
       (.I0(DL[19]),
        .O(OTHER_DATA[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__2
       (.I0(DL[36]),
        .O(OTHER_DATA[20]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__20
       (.I0(DL[18]),
        .O(OTHER_DATA[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__21
       (.I0(DL[17]),
        .O(OTHER_DATA[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__22
       (.I0(DL[16]),
        .O(OTHER_DATA[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__3
       (.I0(DL[35]),
        .O(OTHER_DATA[19]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__4
       (.I0(DL[34]),
        .O(OTHER_DATA[18]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__5
       (.I0(DL[33]),
        .O(OTHER_DATA[17]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__6
       (.I0(DL[32]),
        .O(OTHER_DATA[16]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__7
       (.I0(DL[31]),
        .O(OTHER_DATA[15]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__8
       (.I0(DL[30]),
        .O(OTHER_DATA[14]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__9
       (.I0(DL[29]),
        .O(OTHER_DATA[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[38] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [38]),
        .Q(DL[38]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[39] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [39]),
        .Q(DL[39]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[40] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(LOAD_FLG),
        .Q(DL[40]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[9]),
        .Q(DL[9]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst
       (.I0(LOAD_DATA[15]),
        .O(MERGE_DATA[15]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__0
       (.I0(LOAD_DATA[14]),
        .O(MERGE_DATA[14]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__1
       (.I0(LOAD_DATA[13]),
        .O(MERGE_DATA[13]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__10
       (.I0(LOAD_DATA[4]),
        .O(MERGE_DATA[4]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__11
       (.I0(LOAD_DATA[3]),
        .O(MERGE_DATA[3]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__12
       (.I0(LOAD_DATA[2]),
        .O(MERGE_DATA[2]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__13
       (.I0(LOAD_DATA[1]),
        .O(MERGE_DATA[1]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__14
       (.I0(LOAD_DATA[0]),
        .O(MERGE_DATA[0]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__2
       (.I0(LOAD_DATA[12]),
        .O(MERGE_DATA[12]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__3
       (.I0(LOAD_DATA[11]),
        .O(MERGE_DATA[11]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__4
       (.I0(LOAD_DATA[10]),
        .O(MERGE_DATA[10]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__5
       (.I0(LOAD_DATA[9]),
        .O(MERGE_DATA[9]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__6
       (.I0(LOAD_DATA[8]),
        .O(MERGE_DATA[8]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__7
       (.I0(LOAD_DATA[7]),
        .O(MERGE_DATA[7]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__8
       (.I0(LOAD_DATA[6]),
        .O(MERGE_DATA[6]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__9
       (.I0(LOAD_DATA[5]),
        .O(MERGE_DATA[5]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst
       (.I0(OTHER_DATA[23]),
        .O(MERGE_DATA[39]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__0
       (.I0(OTHER_DATA[22]),
        .O(MERGE_DATA[38]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__1
       (.I0(OTHER_DATA[21]),
        .O(MERGE_DATA[37]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__10
       (.I0(OTHER_DATA[12]),
        .O(MERGE_DATA[28]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__11
       (.I0(OTHER_DATA[11]),
        .O(MERGE_DATA[27]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__12
       (.I0(OTHER_DATA[10]),
        .O(MERGE_DATA[26]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__13
       (.I0(OTHER_DATA[9]),
        .O(MERGE_DATA[25]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__14
       (.I0(OTHER_DATA[8]),
        .O(MERGE_DATA[24]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__15
       (.I0(OTHER_DATA[7]),
        .O(MERGE_DATA[23]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__16
       (.I0(OTHER_DATA[6]),
        .O(MERGE_DATA[22]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__17
       (.I0(OTHER_DATA[5]),
        .O(MERGE_DATA[21]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__18
       (.I0(OTHER_DATA[4]),
        .O(MERGE_DATA[20]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__19
       (.I0(OTHER_DATA[3]),
        .O(MERGE_DATA[19]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__2
       (.I0(OTHER_DATA[20]),
        .O(MERGE_DATA[36]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__20
       (.I0(OTHER_DATA[2]),
        .O(MERGE_DATA[18]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__21
       (.I0(OTHER_DATA[1]),
        .O(MERGE_DATA[17]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__22
       (.I0(OTHER_DATA[0]),
        .O(MERGE_DATA[16]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__3
       (.I0(OTHER_DATA[19]),
        .O(MERGE_DATA[35]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__4
       (.I0(OTHER_DATA[18]),
        .O(MERGE_DATA[34]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__5
       (.I0(OTHER_DATA[17]),
        .O(MERGE_DATA[33]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__6
       (.I0(OTHER_DATA[16]),
        .O(MERGE_DATA[32]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__7
       (.I0(OTHER_DATA[15]),
        .O(MERGE_DATA[31]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__8
       (.I0(OTHER_DATA[14]),
        .O(MERGE_DATA[30]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__9
       (.I0(OTHER_DATA[13]),
        .O(MERGE_DATA[29]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[0]_INST_0 
       (.I0(MERGE_DATA[0]),
        .I1(DL[40]),
        .I2(DL[0]),
        .O(PACKET_OUT[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[10]_INST_0 
       (.I0(MERGE_DATA[10]),
        .I1(DL[40]),
        .I2(DL[10]),
        .O(PACKET_OUT[10]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[11]_INST_0 
       (.I0(MERGE_DATA[11]),
        .I1(DL[40]),
        .I2(DL[11]),
        .O(PACKET_OUT[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[12]_INST_0 
       (.I0(MERGE_DATA[12]),
        .I1(DL[40]),
        .I2(DL[12]),
        .O(PACKET_OUT[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[13]_INST_0 
       (.I0(MERGE_DATA[13]),
        .I1(DL[40]),
        .I2(DL[13]),
        .O(PACKET_OUT[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[14]_INST_0 
       (.I0(MERGE_DATA[14]),
        .I1(DL[40]),
        .I2(DL[14]),
        .O(PACKET_OUT[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[15]_INST_0 
       (.I0(MERGE_DATA[15]),
        .I1(DL[40]),
        .I2(DL[15]),
        .O(PACKET_OUT[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0 
       (.I0(MERGE_DATA[16]),
        .I1(DL[40]),
        .I2(OTHER_DATA[0]),
        .O(PACKET_OUT[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[17]_INST_0 
       (.I0(MERGE_DATA[17]),
        .I1(DL[40]),
        .I2(OTHER_DATA[1]),
        .O(PACKET_OUT[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[18]_INST_0 
       (.I0(MERGE_DATA[18]),
        .I1(DL[40]),
        .I2(OTHER_DATA[2]),
        .O(PACKET_OUT[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[19]_INST_0 
       (.I0(MERGE_DATA[19]),
        .I1(DL[40]),
        .I2(OTHER_DATA[3]),
        .O(PACKET_OUT[19]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[1]_INST_0 
       (.I0(MERGE_DATA[1]),
        .I1(DL[40]),
        .I2(DL[1]),
        .O(PACKET_OUT[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[20]_INST_0 
       (.I0(MERGE_DATA[20]),
        .I1(DL[40]),
        .I2(OTHER_DATA[4]),
        .O(PACKET_OUT[20]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[21]_INST_0 
       (.I0(MERGE_DATA[21]),
        .I1(DL[40]),
        .I2(OTHER_DATA[5]),
        .O(PACKET_OUT[21]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[22]_INST_0 
       (.I0(MERGE_DATA[22]),
        .I1(DL[40]),
        .I2(OTHER_DATA[6]),
        .O(PACKET_OUT[22]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[23]_INST_0 
       (.I0(MERGE_DATA[23]),
        .I1(DL[40]),
        .I2(OTHER_DATA[7]),
        .O(PACKET_OUT[23]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[24]_INST_0 
       (.I0(MERGE_DATA[24]),
        .I1(DL[40]),
        .I2(OTHER_DATA[8]),
        .O(PACKET_OUT[24]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[25]_INST_0 
       (.I0(MERGE_DATA[25]),
        .I1(DL[40]),
        .I2(OTHER_DATA[9]),
        .O(PACKET_OUT[25]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[26]_INST_0 
       (.I0(MERGE_DATA[26]),
        .I1(DL[40]),
        .I2(OTHER_DATA[10]),
        .O(PACKET_OUT[26]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[27]_INST_0 
       (.I0(MERGE_DATA[27]),
        .I1(DL[40]),
        .I2(OTHER_DATA[11]),
        .O(PACKET_OUT[27]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[28]_INST_0 
       (.I0(MERGE_DATA[28]),
        .I1(DL[40]),
        .I2(OTHER_DATA[12]),
        .O(PACKET_OUT[28]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[29]_INST_0 
       (.I0(MERGE_DATA[29]),
        .I1(DL[40]),
        .I2(OTHER_DATA[13]),
        .O(PACKET_OUT[29]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[2]_INST_0 
       (.I0(MERGE_DATA[2]),
        .I1(DL[40]),
        .I2(DL[2]),
        .O(PACKET_OUT[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[30]_INST_0 
       (.I0(MERGE_DATA[30]),
        .I1(DL[40]),
        .I2(OTHER_DATA[14]),
        .O(PACKET_OUT[30]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[31]_INST_0 
       (.I0(MERGE_DATA[31]),
        .I1(DL[40]),
        .I2(OTHER_DATA[15]),
        .O(PACKET_OUT[31]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[32]_INST_0 
       (.I0(MERGE_DATA[32]),
        .I1(DL[40]),
        .I2(OTHER_DATA[16]),
        .O(PACKET_OUT[32]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[33]_INST_0 
       (.I0(MERGE_DATA[33]),
        .I1(DL[40]),
        .I2(OTHER_DATA[17]),
        .O(PACKET_OUT[33]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[34]_INST_0 
       (.I0(MERGE_DATA[34]),
        .I1(DL[40]),
        .I2(OTHER_DATA[18]),
        .O(PACKET_OUT[34]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[35]_INST_0 
       (.I0(MERGE_DATA[35]),
        .I1(DL[40]),
        .I2(OTHER_DATA[19]),
        .O(PACKET_OUT[35]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[36]_INST_0 
       (.I0(MERGE_DATA[36]),
        .I1(DL[40]),
        .I2(OTHER_DATA[20]),
        .O(PACKET_OUT[36]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[37]_INST_0 
       (.I0(MERGE_DATA[37]),
        .I1(DL[40]),
        .I2(OTHER_DATA[21]),
        .O(PACKET_OUT[37]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[38]_INST_0 
       (.I0(MERGE_DATA[38]),
        .I1(DL[40]),
        .I2(OTHER_DATA[22]),
        .O(PACKET_OUT[38]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[39]_INST_0 
       (.I0(MERGE_DATA[39]),
        .I1(DL[40]),
        .I2(OTHER_DATA[23]),
        .O(PACKET_OUT[39]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[3]_INST_0 
       (.I0(MERGE_DATA[3]),
        .I1(DL[40]),
        .I2(DL[3]),
        .O(PACKET_OUT[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[4]_INST_0 
       (.I0(MERGE_DATA[4]),
        .I1(DL[40]),
        .I2(DL[4]),
        .O(PACKET_OUT[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[5]_INST_0 
       (.I0(MERGE_DATA[5]),
        .I1(DL[40]),
        .I2(DL[5]),
        .O(PACKET_OUT[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[6]_INST_0 
       (.I0(MERGE_DATA[6]),
        .I1(DL[40]),
        .I2(DL[6]),
        .O(PACKET_OUT[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[7]_INST_0 
       (.I0(MERGE_DATA[7]),
        .I1(DL[40]),
        .I2(DL[7]),
        .O(PACKET_OUT[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[8]_INST_0 
       (.I0(MERGE_DATA[8]),
        .I1(DL[40]),
        .I2(DL[8]),
        .O(PACKET_OUT[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[9]_INST_0 
       (.I0(MERGE_DATA[9]),
        .I1(DL[40]),
        .I2(DL[9]),
        .O(PACKET_OUT[9]));
  (* DONT_TOUCH *) 
  C__3 c
       (.Ack_in(Ack_in),
        .Ack_out(Ack_out),
        .CP(CP),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(Send_out));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/DMEM/DMEM.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  DMEM dmem
       (.addra(ResultData[4:0]),
        .clka(CP),
        .dina(WRITE_DATA),
        .douta(LOAD_DATA),
        .wea(WRITE_EN));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(ResultData[16]));
endmodule

(* dont_touch = "true" *) 
module MMCAM_Stage
   (MR,
    Send_in,
    Ack_in,
    PACKET_IN,
    PACKET_OUT,
    WR_E,
    DEL,
    Ack_out,
    Send_out,
    ADDR);
  input MR;
  input Send_in;
  input Ack_in;
  input [37:0]PACKET_IN;
  output [37:0]PACKET_OUT;
  output WR_E;
  output DEL;
  output Ack_out;
  output Send_out;
  output [5:0]ADDR;

  wire [5:0]ADDR;
  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  wire DEL;
  (* DONT_TOUCH *) wire [37:0]DL;
  (* DONT_TOUCH *) wire [19:0]EN;
  (* DONT_TOUCH *) wire [19:0]FIRE;
  wire MR;
  wire [37:0]PACKET_IN;
  wire Send_in;
  wire Send_out;
  (* DONT_TOUCH *) wire [19:0]VALID;
  wire WR_E;

  assign PACKET_OUT[37:0] = DL;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  C__1 c
       (.Ack_in(Ack_in),
        .Ack_out(Ack_out),
        .CP(CP),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(Send_out));
  (* DONT_TOUCH *) 
  ENTRY_FD__1 \entry_fd_loop[0].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[0]),
        .FIRE(FIRE[0]),
        .MR(MR),
        .VALID(VALID[0]));
  (* DONT_TOUCH *) 
  ENTRY_FD__11 \entry_fd_loop[10].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[10]),
        .FIRE(FIRE[10]),
        .MR(MR),
        .VALID(VALID[10]));
  (* DONT_TOUCH *) 
  ENTRY_FD__12 \entry_fd_loop[11].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[11]),
        .FIRE(FIRE[11]),
        .MR(MR),
        .VALID(VALID[11]));
  (* DONT_TOUCH *) 
  ENTRY_FD__13 \entry_fd_loop[12].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[12]),
        .FIRE(FIRE[12]),
        .MR(MR),
        .VALID(VALID[12]));
  (* DONT_TOUCH *) 
  ENTRY_FD__14 \entry_fd_loop[13].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[13]),
        .FIRE(FIRE[13]),
        .MR(MR),
        .VALID(VALID[13]));
  (* DONT_TOUCH *) 
  ENTRY_FD__15 \entry_fd_loop[14].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[14]),
        .FIRE(FIRE[14]),
        .MR(MR),
        .VALID(VALID[14]));
  (* DONT_TOUCH *) 
  ENTRY_FD__16 \entry_fd_loop[15].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[15]),
        .FIRE(FIRE[15]),
        .MR(MR),
        .VALID(VALID[15]));
  (* DONT_TOUCH *) 
  ENTRY_FD__17 \entry_fd_loop[16].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[16]),
        .FIRE(FIRE[16]),
        .MR(MR),
        .VALID(VALID[16]));
  (* DONT_TOUCH *) 
  ENTRY_FD__18 \entry_fd_loop[17].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[17]),
        .FIRE(FIRE[17]),
        .MR(MR),
        .VALID(VALID[17]));
  (* DONT_TOUCH *) 
  ENTRY_FD__19 \entry_fd_loop[18].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[18]),
        .FIRE(FIRE[18]),
        .MR(MR),
        .VALID(VALID[18]));
  (* DONT_TOUCH *) 
  ENTRY_FD \entry_fd_loop[19].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[19]),
        .FIRE(FIRE[19]),
        .MR(MR),
        .VALID(VALID[19]));
  (* DONT_TOUCH *) 
  ENTRY_FD__2 \entry_fd_loop[1].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[1]),
        .FIRE(FIRE[1]),
        .MR(MR),
        .VALID(VALID[1]));
  (* DONT_TOUCH *) 
  ENTRY_FD__3 \entry_fd_loop[2].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[2]),
        .FIRE(FIRE[2]),
        .MR(MR),
        .VALID(VALID[2]));
  (* DONT_TOUCH *) 
  ENTRY_FD__4 \entry_fd_loop[3].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[3]),
        .FIRE(FIRE[3]),
        .MR(MR),
        .VALID(VALID[3]));
  (* DONT_TOUCH *) 
  ENTRY_FD__5 \entry_fd_loop[4].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[4]),
        .FIRE(FIRE[4]),
        .MR(MR),
        .VALID(VALID[4]));
  (* DONT_TOUCH *) 
  ENTRY_FD__6 \entry_fd_loop[5].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[5]),
        .FIRE(FIRE[5]),
        .MR(MR),
        .VALID(VALID[5]));
  (* DONT_TOUCH *) 
  ENTRY_FD__7 \entry_fd_loop[6].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[6]),
        .FIRE(FIRE[6]),
        .MR(MR),
        .VALID(VALID[6]));
  (* DONT_TOUCH *) 
  ENTRY_FD__8 \entry_fd_loop[7].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[7]),
        .FIRE(FIRE[7]),
        .MR(MR),
        .VALID(VALID[7]));
  (* DONT_TOUCH *) 
  ENTRY_FD__9 \entry_fd_loop[8].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[8]),
        .FIRE(FIRE[8]),
        .MR(MR),
        .VALID(VALID[8]));
  (* DONT_TOUCH *) 
  ENTRY_FD__10 \entry_fd_loop[9].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[9]),
        .FIRE(FIRE[9]),
        .MR(MR),
        .VALID(VALID[9]));
  (* DONT_TOUCH *) 
  OR_AM_MA oam
       (.ADDR(ADDR),
        .CP(CP),
        .DEL(DEL),
        .EN(EN),
        .FIRE(FIRE),
        .MF(PACKET_IN[18]),
        .MR(MR),
        .VALID(VALID),
        .WR_E(WR_E));
endmodule

(* CHECK_LICENSE_TYPE = "MMRAM,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module MMRAM
   (clka,
    wea,
    addra,
    dina,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [19:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [19:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [19:0]dina;
  wire [19:0]douta;
  wire [0:0]wea;
  wire NLW_U0_clkb_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_ena_UNCONNECTED;
  wire NLW_U0_enb_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [4:0]NLW_U0_addrb_UNCONNECTED;
  wire [19:0]NLW_U0_dinb_UNCONNECTED;
  wire [19:19]NLW_U0_douta_UNCONNECTED;
  wire [19:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [19:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [19:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_web_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     3.03925 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "MMRAM.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "0" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "20" *) 
  (* C_READ_WIDTH_B = "20" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "20" *) 
  (* C_WRITE_WIDTH_B = "20" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  MMRAM_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb(NLW_U0_addrb_UNCONNECTED[4:0]),
        .clka(clka),
        .clkb(NLW_U0_clkb_UNCONNECTED),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(dina),
        .dinb(NLW_U0_dinb_UNCONNECTED[19:0]),
        .douta({NLW_U0_douta_UNCONNECTED[19],douta[18:0]}),
        .doutb(NLW_U0_doutb_UNCONNECTED[19:0]),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(NLW_U0_ena_UNCONNECTED),
        .enb(NLW_U0_enb_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[19:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[19:0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(wea),
        .web(NLW_U0_web_UNCONNECTED[0]));
endmodule

(* dont_touch = "true" *) 
module MMRAM_Stage
   (WR_E,
    DEL,
    MR,
    Send_in,
    Ack_in,
    ADDR,
    PACKET_IN,
    PACKET_OUT,
    Send_out,
    Ack_out);
  input WR_E;
  input DEL;
  input MR;
  input Send_in;
  input Ack_in;
  input [5:0]ADDR;
  input [37:0]PACKET_IN;
  output [51:0]PACKET_OUT;
  output Send_out;
  output Ack_out;

  wire [5:0]ADDR;
  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire [15:0]CST_DATA;
  (* DONT_TOUCH *) wire [19:0]DATA_IN;
  (* DONT_TOUCH *) wire [19:0]DATA_OUT;
  wire DEL;
  (* DONT_TOUCH *) wire [37:0]DL;
  (* DONT_TOUCH *) wire [53:0]MERGE2_OUT;
  (* DONT_TOUCH *) wire MF;
  wire MR;
  (* DONT_TOUCH *) wire [53:0]MUX_OUT;
  wire [37:27]\^PACKET_IN ;
  wire [31:0]\^PACKET_OUT ;
  wire Send_in;
  wire Send_out;
  wire WR_E;
  (* DONT_TOUCH *) wire [6:0]dest;
  wire NLW_MERGE1_OUT_inferred_i_1_O_UNCONNECTED;
  wire NLW_MERGE1_OUT_inferred_i_2_O_UNCONNECTED;
  wire NLW_MERGE1_OUT_inferred_i_3_O_UNCONNECTED;

  assign DATA_IN = PACKET_IN[19:0];
  assign PACKET_OUT[51:34] = MUX_OUT[53:36];
  assign PACKET_OUT[33:32] = MUX_OUT[33:32];
  assign PACKET_OUT[31:0] = \^PACKET_OUT [31:0];
  assign \^PACKET_IN [37:27] = PACKET_IN[37:27];
  assign dest = PACKET_IN[26:20];
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst
       (.I0(CST_DATA[15]),
        .O(MERGE2_OUT[15]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__0
       (.I0(CST_DATA[14]),
        .O(MERGE2_OUT[14]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__1
       (.I0(CST_DATA[13]),
        .O(MERGE2_OUT[13]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__10
       (.I0(CST_DATA[4]),
        .O(MERGE2_OUT[4]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__11
       (.I0(CST_DATA[3]),
        .O(MERGE2_OUT[3]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__12
       (.I0(CST_DATA[2]),
        .O(MERGE2_OUT[2]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__13
       (.I0(CST_DATA[1]),
        .O(MERGE2_OUT[1]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__14
       (.I0(CST_DATA[0]),
        .O(MERGE2_OUT[0]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__2
       (.I0(CST_DATA[12]),
        .O(MERGE2_OUT[12]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__3
       (.I0(CST_DATA[11]),
        .O(MERGE2_OUT[11]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__4
       (.I0(CST_DATA[10]),
        .O(MERGE2_OUT[10]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__5
       (.I0(CST_DATA[9]),
        .O(MERGE2_OUT[9]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__6
       (.I0(CST_DATA[8]),
        .O(MERGE2_OUT[8]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__7
       (.I0(CST_DATA[7]),
        .O(MERGE2_OUT[7]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__8
       (.I0(CST_DATA[6]),
        .O(MERGE2_OUT[6]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__9
       (.I0(CST_DATA[5]),
        .O(MERGE2_OUT[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst
       (.I0(DL[37]),
        .O(MERGE2_OUT[53]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__0
       (.I0(DL[36]),
        .O(MERGE2_OUT[52]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__1
       (.I0(DL[35]),
        .O(MERGE2_OUT[51]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__10
       (.I0(DL[26]),
        .O(MERGE2_OUT[42]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__11
       (.I0(DL[25]),
        .O(MERGE2_OUT[41]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__12
       (.I0(DL[24]),
        .O(MERGE2_OUT[40]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__13
       (.I0(DL[23]),
        .O(MERGE2_OUT[39]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__14
       (.I0(DL[22]),
        .O(MERGE2_OUT[38]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__15
       (.I0(DL[21]),
        .O(MERGE2_OUT[37]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__16
       (.I0(DL[20]),
        .O(MERGE2_OUT[36]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__17
       (.I0(DL[19]),
        .O(MERGE2_OUT[35]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__18
       (.I0(DL[18]),
        .O(MERGE2_OUT[34]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__19
       (.I0(DL[17]),
        .O(MERGE2_OUT[33]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__2
       (.I0(DL[34]),
        .O(MERGE2_OUT[50]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__20
       (.I0(DL[16]),
        .O(MERGE2_OUT[32]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__21
       (.I0(DL[15]),
        .O(MERGE2_OUT[31]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__22
       (.I0(DL[14]),
        .O(MERGE2_OUT[30]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__23
       (.I0(DL[13]),
        .O(MERGE2_OUT[29]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__24
       (.I0(DL[12]),
        .O(MERGE2_OUT[28]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__25
       (.I0(DL[11]),
        .O(MERGE2_OUT[27]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__26
       (.I0(DL[10]),
        .O(MERGE2_OUT[26]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__27
       (.I0(DL[9]),
        .O(MERGE2_OUT[25]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__28
       (.I0(DL[8]),
        .O(MERGE2_OUT[24]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__29
       (.I0(DL[7]),
        .O(MERGE2_OUT[23]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__3
       (.I0(DL[33]),
        .O(MERGE2_OUT[49]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__30
       (.I0(DL[6]),
        .O(MERGE2_OUT[22]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__31
       (.I0(DL[5]),
        .O(MERGE2_OUT[21]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__32
       (.I0(DL[4]),
        .O(MERGE2_OUT[20]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__33
       (.I0(DL[3]),
        .O(MERGE2_OUT[19]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__34
       (.I0(DL[2]),
        .O(MERGE2_OUT[18]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__35
       (.I0(DL[1]),
        .O(MERGE2_OUT[17]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__36
       (.I0(DL[0]),
        .O(MERGE2_OUT[16]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__4
       (.I0(DL[32]),
        .O(MERGE2_OUT[48]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__5
       (.I0(DL[31]),
        .O(MERGE2_OUT[47]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__6
       (.I0(DL[30]),
        .O(MERGE2_OUT[46]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__7
       (.I0(DL[29]),
        .O(MERGE2_OUT[45]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__8
       (.I0(DL[28]),
        .O(MERGE2_OUT[44]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__9
       (.I0(DL[27]),
        .O(MERGE2_OUT[43]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[0]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[1]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[2]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[3]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[4]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[5]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[6]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[9]),
        .Q(DL[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    MERGE1_OUT_inferred_i_1
       (.I0(MERGE2_OUT[34]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[18]),
        .O(NLW_MERGE1_OUT_inferred_i_1_O_UNCONNECTED));
  LUT3 #(
    .INIT(8'hB8)) 
    MERGE1_OUT_inferred_i_2
       (.I0(MERGE2_OUT[33]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[17]),
        .O(NLW_MERGE1_OUT_inferred_i_2_O_UNCONNECTED));
  LUT3 #(
    .INIT(8'hB8)) 
    MERGE1_OUT_inferred_i_3
       (.I0(MERGE2_OUT[32]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[16]),
        .O(NLW_MERGE1_OUT_inferred_i_3_O_UNCONNECTED));
  LUT1 #(
    .INIT(2'h2)) 
    MF_inst
       (.I0(MERGE2_OUT[34]),
        .O(MF));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_1
       (.I0(MERGE2_OUT[53]),
        .I1(MERGE2_OUT[53]),
        .I2(MF),
        .O(MUX_OUT[53]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_10
       (.I0(MERGE2_OUT[44]),
        .I1(MERGE2_OUT[44]),
        .I2(MF),
        .O(MUX_OUT[44]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_11
       (.I0(MERGE2_OUT[43]),
        .I1(MERGE2_OUT[43]),
        .I2(MF),
        .O(MUX_OUT[43]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_12
       (.I0(MERGE2_OUT[42]),
        .I1(MERGE2_OUT[42]),
        .I2(MF),
        .O(MUX_OUT[42]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_13
       (.I0(MERGE2_OUT[41]),
        .I1(MERGE2_OUT[41]),
        .I2(MF),
        .O(MUX_OUT[41]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_14
       (.I0(MERGE2_OUT[40]),
        .I1(MERGE2_OUT[40]),
        .I2(MF),
        .O(MUX_OUT[40]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_15
       (.I0(MERGE2_OUT[39]),
        .I1(MERGE2_OUT[39]),
        .I2(MF),
        .O(MUX_OUT[39]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_16
       (.I0(MERGE2_OUT[38]),
        .I1(MERGE2_OUT[38]),
        .I2(MF),
        .O(MUX_OUT[38]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_17
       (.I0(MERGE2_OUT[37]),
        .I1(MERGE2_OUT[37]),
        .I2(MF),
        .O(MUX_OUT[37]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_18
       (.I0(MERGE2_OUT[36]),
        .I1(MERGE2_OUT[36]),
        .I2(MF),
        .O(MUX_OUT[36]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_19
       (.I0(MERGE2_OUT[35]),
        .I1(MERGE2_OUT[35]),
        .I2(MF),
        .O(MUX_OUT[35]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_2
       (.I0(MERGE2_OUT[52]),
        .I1(MERGE2_OUT[52]),
        .I2(MF),
        .O(MUX_OUT[52]));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    MUX_OUT_inferred_i_20
       (.I0(MERGE2_OUT[34]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[18]),
        .I3(MERGE2_OUT[34]),
        .I4(MF),
        .O(MUX_OUT[34]));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    MUX_OUT_inferred_i_21
       (.I0(MERGE2_OUT[33]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[17]),
        .I3(MERGE2_OUT[33]),
        .I4(MF),
        .O(MUX_OUT[33]));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    MUX_OUT_inferred_i_22
       (.I0(MERGE2_OUT[32]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[16]),
        .I3(MERGE2_OUT[32]),
        .I4(MF),
        .O(MUX_OUT[32]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_23
       (.I0(MERGE2_OUT[31]),
        .I1(MERGE2_OUT[31]),
        .I2(MF),
        .O(MUX_OUT[31]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_24
       (.I0(MERGE2_OUT[30]),
        .I1(MERGE2_OUT[30]),
        .I2(MF),
        .O(MUX_OUT[30]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_25
       (.I0(MERGE2_OUT[29]),
        .I1(MERGE2_OUT[29]),
        .I2(MF),
        .O(MUX_OUT[29]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_26
       (.I0(MERGE2_OUT[28]),
        .I1(MERGE2_OUT[28]),
        .I2(MF),
        .O(MUX_OUT[28]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_27
       (.I0(MERGE2_OUT[27]),
        .I1(MERGE2_OUT[27]),
        .I2(MF),
        .O(MUX_OUT[27]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_28
       (.I0(MERGE2_OUT[26]),
        .I1(MERGE2_OUT[26]),
        .I2(MF),
        .O(MUX_OUT[26]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_29
       (.I0(MERGE2_OUT[25]),
        .I1(MERGE2_OUT[25]),
        .I2(MF),
        .O(MUX_OUT[25]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_3
       (.I0(MERGE2_OUT[51]),
        .I1(MERGE2_OUT[51]),
        .I2(MF),
        .O(MUX_OUT[51]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_30
       (.I0(MERGE2_OUT[24]),
        .I1(MERGE2_OUT[24]),
        .I2(MF),
        .O(MUX_OUT[24]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_31
       (.I0(MERGE2_OUT[23]),
        .I1(MERGE2_OUT[23]),
        .I2(MF),
        .O(MUX_OUT[23]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_32
       (.I0(MERGE2_OUT[22]),
        .I1(MERGE2_OUT[22]),
        .I2(MF),
        .O(MUX_OUT[22]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_33
       (.I0(MERGE2_OUT[21]),
        .I1(MERGE2_OUT[21]),
        .I2(MF),
        .O(MUX_OUT[21]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_34
       (.I0(MERGE2_OUT[20]),
        .I1(MERGE2_OUT[20]),
        .I2(MF),
        .O(MUX_OUT[20]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_35
       (.I0(MERGE2_OUT[19]),
        .I1(MERGE2_OUT[19]),
        .I2(MF),
        .O(MUX_OUT[19]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_36
       (.I0(MERGE2_OUT[18]),
        .I1(MERGE2_OUT[18]),
        .I2(MF),
        .O(MUX_OUT[18]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_37
       (.I0(MERGE2_OUT[17]),
        .I1(MERGE2_OUT[17]),
        .I2(MF),
        .O(MUX_OUT[17]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_38
       (.I0(MERGE2_OUT[16]),
        .I1(MERGE2_OUT[16]),
        .I2(MF),
        .O(MUX_OUT[16]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_39
       (.I0(DATA_OUT[15]),
        .I1(MERGE2_OUT[15]),
        .I2(MF),
        .O(MUX_OUT[15]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_4
       (.I0(MERGE2_OUT[50]),
        .I1(MERGE2_OUT[50]),
        .I2(MF),
        .O(MUX_OUT[50]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_40
       (.I0(DATA_OUT[14]),
        .I1(MERGE2_OUT[14]),
        .I2(MF),
        .O(MUX_OUT[14]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_41
       (.I0(DATA_OUT[13]),
        .I1(MERGE2_OUT[13]),
        .I2(MF),
        .O(MUX_OUT[13]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_42
       (.I0(DATA_OUT[12]),
        .I1(MERGE2_OUT[12]),
        .I2(MF),
        .O(MUX_OUT[12]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_43
       (.I0(DATA_OUT[11]),
        .I1(MERGE2_OUT[11]),
        .I2(MF),
        .O(MUX_OUT[11]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_44
       (.I0(DATA_OUT[10]),
        .I1(MERGE2_OUT[10]),
        .I2(MF),
        .O(MUX_OUT[10]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_45
       (.I0(DATA_OUT[9]),
        .I1(MERGE2_OUT[9]),
        .I2(MF),
        .O(MUX_OUT[9]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_46
       (.I0(DATA_OUT[8]),
        .I1(MERGE2_OUT[8]),
        .I2(MF),
        .O(MUX_OUT[8]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_47
       (.I0(DATA_OUT[7]),
        .I1(MERGE2_OUT[7]),
        .I2(MF),
        .O(MUX_OUT[7]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_48
       (.I0(DATA_OUT[6]),
        .I1(MERGE2_OUT[6]),
        .I2(MF),
        .O(MUX_OUT[6]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_49
       (.I0(DATA_OUT[5]),
        .I1(MERGE2_OUT[5]),
        .I2(MF),
        .O(MUX_OUT[5]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_5
       (.I0(MERGE2_OUT[49]),
        .I1(MERGE2_OUT[49]),
        .I2(MF),
        .O(MUX_OUT[49]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_50
       (.I0(DATA_OUT[4]),
        .I1(MERGE2_OUT[4]),
        .I2(MF),
        .O(MUX_OUT[4]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_51
       (.I0(DATA_OUT[3]),
        .I1(MERGE2_OUT[3]),
        .I2(MF),
        .O(MUX_OUT[3]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_52
       (.I0(DATA_OUT[2]),
        .I1(MERGE2_OUT[2]),
        .I2(MF),
        .O(MUX_OUT[2]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_53
       (.I0(DATA_OUT[1]),
        .I1(MERGE2_OUT[1]),
        .I2(MF),
        .O(MUX_OUT[1]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_54
       (.I0(DATA_OUT[0]),
        .I1(MERGE2_OUT[0]),
        .I2(MF),
        .O(MUX_OUT[0]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_6
       (.I0(MERGE2_OUT[48]),
        .I1(MERGE2_OUT[48]),
        .I2(MF),
        .O(MUX_OUT[48]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_7
       (.I0(MERGE2_OUT[47]),
        .I1(MERGE2_OUT[47]),
        .I2(MF),
        .O(MUX_OUT[47]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_8
       (.I0(MERGE2_OUT[46]),
        .I1(MERGE2_OUT[46]),
        .I2(MF),
        .O(MUX_OUT[46]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_9
       (.I0(MERGE2_OUT[45]),
        .I1(MERGE2_OUT[45]),
        .I2(MF),
        .O(MUX_OUT[45]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[0]_INST_0 
       (.I0(MUX_OUT[16]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[0]),
        .O(\^PACKET_OUT [0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[10]_INST_0 
       (.I0(MUX_OUT[26]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[10]),
        .O(\^PACKET_OUT [10]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[11]_INST_0 
       (.I0(MUX_OUT[27]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[11]),
        .O(\^PACKET_OUT [11]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[12]_INST_0 
       (.I0(MUX_OUT[28]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[12]),
        .O(\^PACKET_OUT [12]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[13]_INST_0 
       (.I0(MUX_OUT[29]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[13]),
        .O(\^PACKET_OUT [13]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[14]_INST_0 
       (.I0(MUX_OUT[30]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[14]),
        .O(\^PACKET_OUT [14]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[15]_INST_0 
       (.I0(MUX_OUT[31]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[15]),
        .O(\^PACKET_OUT [15]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0 
       (.I0(MUX_OUT[0]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[16]),
        .O(\^PACKET_OUT [16]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[17]_INST_0 
       (.I0(MUX_OUT[1]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[17]),
        .O(\^PACKET_OUT [17]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[18]_INST_0 
       (.I0(MUX_OUT[2]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[18]),
        .O(\^PACKET_OUT [18]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[19]_INST_0 
       (.I0(MUX_OUT[3]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[19]),
        .O(\^PACKET_OUT [19]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[1]_INST_0 
       (.I0(MUX_OUT[17]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[1]),
        .O(\^PACKET_OUT [1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[20]_INST_0 
       (.I0(MUX_OUT[4]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[20]),
        .O(\^PACKET_OUT [20]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[21]_INST_0 
       (.I0(MUX_OUT[5]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[21]),
        .O(\^PACKET_OUT [21]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[22]_INST_0 
       (.I0(MUX_OUT[6]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[22]),
        .O(\^PACKET_OUT [22]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[23]_INST_0 
       (.I0(MUX_OUT[7]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[23]),
        .O(\^PACKET_OUT [23]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[24]_INST_0 
       (.I0(MUX_OUT[8]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[24]),
        .O(\^PACKET_OUT [24]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[25]_INST_0 
       (.I0(MUX_OUT[9]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[25]),
        .O(\^PACKET_OUT [25]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[26]_INST_0 
       (.I0(MUX_OUT[10]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[26]),
        .O(\^PACKET_OUT [26]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[27]_INST_0 
       (.I0(MUX_OUT[11]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[27]),
        .O(\^PACKET_OUT [27]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[28]_INST_0 
       (.I0(MUX_OUT[12]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[28]),
        .O(\^PACKET_OUT [28]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[29]_INST_0 
       (.I0(MUX_OUT[13]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[29]),
        .O(\^PACKET_OUT [29]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[2]_INST_0 
       (.I0(MUX_OUT[18]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[2]),
        .O(\^PACKET_OUT [2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[30]_INST_0 
       (.I0(MUX_OUT[14]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[30]),
        .O(\^PACKET_OUT [30]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[31]_INST_0 
       (.I0(MUX_OUT[15]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[31]),
        .O(\^PACKET_OUT [31]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[3]_INST_0 
       (.I0(MUX_OUT[19]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[3]),
        .O(\^PACKET_OUT [3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[4]_INST_0 
       (.I0(MUX_OUT[20]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[4]),
        .O(\^PACKET_OUT [4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[5]_INST_0 
       (.I0(MUX_OUT[21]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[5]),
        .O(\^PACKET_OUT [5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[6]_INST_0 
       (.I0(MUX_OUT[22]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[6]),
        .O(\^PACKET_OUT [6]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[7]_INST_0 
       (.I0(MUX_OUT[23]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[7]),
        .O(\^PACKET_OUT [7]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[8]_INST_0 
       (.I0(MUX_OUT[24]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[8]),
        .O(\^PACKET_OUT [8]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[9]_INST_0 
       (.I0(MUX_OUT[25]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[9]),
        .O(\^PACKET_OUT [9]));
  (* DONT_TOUCH *) 
  CE__1 ce
       (.CE_Ack_in(Ack_in),
        .CE_Ack_out(Ack_out),
        .CE_CP(CP),
        .CE_Send_in(Send_in),
        .CE_Send_out(Send_out),
        .Exb(DEL),
        .MR(MR));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/CMEM/CMEM.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  CMEM cmem
       (.addra(dest[4:0]),
        .clka(CP),
        .douta(CST_DATA));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/MMRAM/MMRAM.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  MMRAM mmram
       (.addra(ADDR[4:0]),
        .clka(CP),
        .dina(DATA_IN),
        .douta(DATA_OUT),
        .wea(WR_E));
endmodule

(* dont_touch = "true" *) 
module M_Stage
   (MR,
    Send_in_EX,
    Send_in_IN,
    Ack_in,
    PACKET_IN_EXTERNAL,
    PACKET_IN_INTERNAL,
    Ack_out_EX,
    Ack_out_IN,
    Send_out,
    PACKET_OUT);
  input MR;
  input Send_in_EX;
  input Send_in_IN;
  input Ack_in;
  input [37:0]PACKET_IN_EXTERNAL;
  input [37:0]PACKET_IN_INTERNAL;
  output Ack_out_EX;
  output Ack_out_IN;
  output Send_out;
  output [37:0]PACKET_OUT;

  wire AEB;
  wire Ack_in;
  wire Ack_out_EX;
  wire Ack_out_IN;
  (* DONT_TOUCH *) wire CP_EXTERNAL;
  (* DONT_TOUCH *) wire CP_INTERNAL;
  (* DONT_TOUCH *) wire [37:0]DL_EX;
  (* DONT_TOUCH *) wire [37:0]DL_IN;
  wire MR;
  wire [37:0]PACKET_IN_EXTERNAL;
  wire [37:0]PACKET_IN_INTERNAL;
  wire [37:0]PACKET_OUT;
  wire Send_in_EX;
  wire Send_in_IN;
  wire Send_out;

  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[0] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[0]),
        .Q(DL_EX[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[10] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[10]),
        .Q(DL_EX[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[11] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[11]),
        .Q(DL_EX[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[12] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[12]),
        .Q(DL_EX[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[13] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[13]),
        .Q(DL_EX[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[14] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[14]),
        .Q(DL_EX[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[15] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[15]),
        .Q(DL_EX[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[16] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[16]),
        .Q(DL_EX[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[17] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[17]),
        .Q(DL_EX[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[18] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[18]),
        .Q(DL_EX[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[19] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[19]),
        .Q(DL_EX[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[1] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[1]),
        .Q(DL_EX[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[20] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[20]),
        .Q(DL_EX[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[21] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[21]),
        .Q(DL_EX[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[22] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[22]),
        .Q(DL_EX[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[23] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[23]),
        .Q(DL_EX[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[24] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[24]),
        .Q(DL_EX[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[25] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[25]),
        .Q(DL_EX[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[26] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[26]),
        .Q(DL_EX[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[27] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[27]),
        .Q(DL_EX[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[28] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[28]),
        .Q(DL_EX[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[29] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[29]),
        .Q(DL_EX[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[2] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[2]),
        .Q(DL_EX[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[30] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[30]),
        .Q(DL_EX[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[31] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[31]),
        .Q(DL_EX[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[32] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[32]),
        .Q(DL_EX[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[33] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[33]),
        .Q(DL_EX[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[34] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[34]),
        .Q(DL_EX[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[35] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[35]),
        .Q(DL_EX[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[36] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[36]),
        .Q(DL_EX[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[37] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[37]),
        .Q(DL_EX[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[3] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[3]),
        .Q(DL_EX[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[4] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[4]),
        .Q(DL_EX[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[5] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[5]),
        .Q(DL_EX[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[6] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[6]),
        .Q(DL_EX[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[7] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[7]),
        .Q(DL_EX[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[8] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[8]),
        .Q(DL_EX[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[9] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[9]),
        .Q(DL_EX[9]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[0] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[0]),
        .Q(DL_IN[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[10] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[10]),
        .Q(DL_IN[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[11] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[11]),
        .Q(DL_IN[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[12] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[12]),
        .Q(DL_IN[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[13] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[13]),
        .Q(DL_IN[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[14] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[14]),
        .Q(DL_IN[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[15] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[15]),
        .Q(DL_IN[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[16] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[16]),
        .Q(DL_IN[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[17] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[17]),
        .Q(DL_IN[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[18] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[18]),
        .Q(DL_IN[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[19] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[19]),
        .Q(DL_IN[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[1] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[1]),
        .Q(DL_IN[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[20] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[20]),
        .Q(DL_IN[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[21] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[21]),
        .Q(DL_IN[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[22] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[22]),
        .Q(DL_IN[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[23] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[23]),
        .Q(DL_IN[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[24] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[24]),
        .Q(DL_IN[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[25] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[25]),
        .Q(DL_IN[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[26] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[26]),
        .Q(DL_IN[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[27] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[27]),
        .Q(DL_IN[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[28] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[28]),
        .Q(DL_IN[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[29] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[29]),
        .Q(DL_IN[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[2] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[2]),
        .Q(DL_IN[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[30] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[30]),
        .Q(DL_IN[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[31] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[31]),
        .Q(DL_IN[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[32] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[32]),
        .Q(DL_IN[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[33] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[33]),
        .Q(DL_IN[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[34] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[34]),
        .Q(DL_IN[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[35] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[35]),
        .Q(DL_IN[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[36] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[36]),
        .Q(DL_IN[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[37] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[37]),
        .Q(DL_IN[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[3] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[3]),
        .Q(DL_IN[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[4] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[4]),
        .Q(DL_IN[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[5] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[5]),
        .Q(DL_IN[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[6] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[6]),
        .Q(DL_IN[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[7] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[7]),
        .Q(DL_IN[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[8] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[8]),
        .Q(DL_IN[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[9] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[9]),
        .Q(DL_IN[9]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[0]_INST_0 
       (.I0(DL_IN[0]),
        .I1(DL_EX[0]),
        .I2(AEB),
        .O(PACKET_OUT[0]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[10]_INST_0 
       (.I0(DL_IN[10]),
        .I1(DL_EX[10]),
        .I2(AEB),
        .O(PACKET_OUT[10]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[11]_INST_0 
       (.I0(DL_IN[11]),
        .I1(DL_EX[11]),
        .I2(AEB),
        .O(PACKET_OUT[11]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[12]_INST_0 
       (.I0(DL_IN[12]),
        .I1(DL_EX[12]),
        .I2(AEB),
        .O(PACKET_OUT[12]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[13]_INST_0 
       (.I0(DL_IN[13]),
        .I1(DL_EX[13]),
        .I2(AEB),
        .O(PACKET_OUT[13]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[14]_INST_0 
       (.I0(DL_IN[14]),
        .I1(DL_EX[14]),
        .I2(AEB),
        .O(PACKET_OUT[14]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[15]_INST_0 
       (.I0(DL_IN[15]),
        .I1(DL_EX[15]),
        .I2(AEB),
        .O(PACKET_OUT[15]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[16]_INST_0 
       (.I0(DL_IN[16]),
        .I1(DL_EX[16]),
        .I2(AEB),
        .O(PACKET_OUT[16]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[17]_INST_0 
       (.I0(DL_IN[17]),
        .I1(DL_EX[17]),
        .I2(AEB),
        .O(PACKET_OUT[17]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[18]_INST_0 
       (.I0(DL_IN[18]),
        .I1(DL_EX[18]),
        .I2(AEB),
        .O(PACKET_OUT[18]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[19]_INST_0 
       (.I0(DL_IN[19]),
        .I1(DL_EX[19]),
        .I2(AEB),
        .O(PACKET_OUT[19]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[1]_INST_0 
       (.I0(DL_IN[1]),
        .I1(DL_EX[1]),
        .I2(AEB),
        .O(PACKET_OUT[1]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[20]_INST_0 
       (.I0(DL_IN[20]),
        .I1(DL_EX[20]),
        .I2(AEB),
        .O(PACKET_OUT[20]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[21]_INST_0 
       (.I0(DL_IN[21]),
        .I1(DL_EX[21]),
        .I2(AEB),
        .O(PACKET_OUT[21]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[22]_INST_0 
       (.I0(DL_IN[22]),
        .I1(DL_EX[22]),
        .I2(AEB),
        .O(PACKET_OUT[22]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[23]_INST_0 
       (.I0(DL_IN[23]),
        .I1(DL_EX[23]),
        .I2(AEB),
        .O(PACKET_OUT[23]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[24]_INST_0 
       (.I0(DL_IN[24]),
        .I1(DL_EX[24]),
        .I2(AEB),
        .O(PACKET_OUT[24]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[25]_INST_0 
       (.I0(DL_IN[25]),
        .I1(DL_EX[25]),
        .I2(AEB),
        .O(PACKET_OUT[25]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[26]_INST_0 
       (.I0(DL_IN[26]),
        .I1(DL_EX[26]),
        .I2(AEB),
        .O(PACKET_OUT[26]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[27]_INST_0 
       (.I0(DL_IN[27]),
        .I1(DL_EX[27]),
        .I2(AEB),
        .O(PACKET_OUT[27]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[28]_INST_0 
       (.I0(DL_IN[28]),
        .I1(DL_EX[28]),
        .I2(AEB),
        .O(PACKET_OUT[28]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[29]_INST_0 
       (.I0(DL_IN[29]),
        .I1(DL_EX[29]),
        .I2(AEB),
        .O(PACKET_OUT[29]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[2]_INST_0 
       (.I0(DL_IN[2]),
        .I1(DL_EX[2]),
        .I2(AEB),
        .O(PACKET_OUT[2]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[30]_INST_0 
       (.I0(DL_IN[30]),
        .I1(DL_EX[30]),
        .I2(AEB),
        .O(PACKET_OUT[30]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[31]_INST_0 
       (.I0(DL_IN[31]),
        .I1(DL_EX[31]),
        .I2(AEB),
        .O(PACKET_OUT[31]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[32]_INST_0 
       (.I0(DL_IN[32]),
        .I1(DL_EX[32]),
        .I2(AEB),
        .O(PACKET_OUT[32]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[33]_INST_0 
       (.I0(DL_IN[33]),
        .I1(DL_EX[33]),
        .I2(AEB),
        .O(PACKET_OUT[33]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[34]_INST_0 
       (.I0(DL_IN[34]),
        .I1(DL_EX[34]),
        .I2(AEB),
        .O(PACKET_OUT[34]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[35]_INST_0 
       (.I0(DL_IN[35]),
        .I1(DL_EX[35]),
        .I2(AEB),
        .O(PACKET_OUT[35]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[36]_INST_0 
       (.I0(DL_IN[36]),
        .I1(DL_EX[36]),
        .I2(AEB),
        .O(PACKET_OUT[36]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[37]_INST_0 
       (.I0(DL_IN[37]),
        .I1(DL_EX[37]),
        .I2(AEB),
        .O(PACKET_OUT[37]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[3]_INST_0 
       (.I0(DL_IN[3]),
        .I1(DL_EX[3]),
        .I2(AEB),
        .O(PACKET_OUT[3]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[4]_INST_0 
       (.I0(DL_IN[4]),
        .I1(DL_EX[4]),
        .I2(AEB),
        .O(PACKET_OUT[4]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[5]_INST_0 
       (.I0(DL_IN[5]),
        .I1(DL_EX[5]),
        .I2(AEB),
        .O(PACKET_OUT[5]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[6]_INST_0 
       (.I0(DL_IN[6]),
        .I1(DL_EX[6]),
        .I2(AEB),
        .O(PACKET_OUT[6]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[7]_INST_0 
       (.I0(DL_IN[7]),
        .I1(DL_EX[7]),
        .I2(AEB),
        .O(PACKET_OUT[7]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[8]_INST_0 
       (.I0(DL_IN[8]),
        .I1(DL_EX[8]),
        .I2(AEB),
        .O(PACKET_OUT[8]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[9]_INST_0 
       (.I0(DL_IN[9]),
        .I1(DL_EX[9]),
        .I2(AEB),
        .O(PACKET_OUT[9]));
  (* DONT_TOUCH *) 
  CM cm
       (.AEB(AEB),
        .Ack_in(Ack_in),
        .Ack_out_a(Ack_out_EX),
        .Ack_out_b(Ack_out_IN),
        .CP_a(CP_EXTERNAL),
        .CP_b(CP_INTERNAL),
        .MR(MR),
        .Send_in_a(Send_in_EX),
        .Send_in_b(Send_in_IN),
        .Send_out(Send_out));
endmodule

(* dont_touch = "true" *) 
module OR_AM_MA
   (FIRE,
    VALID,
    MF,
    CP,
    MR,
    EN,
    WR_E,
    DEL,
    ADDR);
  input [19:0]FIRE;
  input [19:0]VALID;
  input MF;
  input CP;
  input MR;
  output [19:0]EN;
  output WR_E;
  output DEL;
  output [5:0]ADDR;

  wire [5:0]ADDR;
  wire \ADDR[0]_i_1_n_0 ;
  wire \ADDR[1]_i_1_n_0 ;
  wire \ADDR[2]_i_1_n_0 ;
  wire \ADDR[3]_i_1_n_0 ;
  wire \ADDR[4]_i_1_n_0 ;
  wire \ADDR[5]_i_1_n_0 ;
  wire CP;
  wire DEL;
  wire DEL_i_1_n_0;
  wire [19:0]EN;
  wire \EN[12]_INST_0_i_1_n_0 ;
  wire \EN[17]_INST_0_i_1_n_0 ;
  wire \EN[19]_INST_0_i_1_n_0 ;
  wire \EN[19]_INST_0_i_2_n_0 ;
  wire \EN[8]_INST_0_i_1_n_0 ;
  wire [19:0]FIRE;
  (* DONT_TOUCH *) wire FIRE_OR;
  wire FIRE_OR_inferred_i_2_n_0;
  wire FIRE_OR_inferred_i_3_n_0;
  wire FIRE_OR_inferred_i_4_n_0;
  wire MF;
  wire MR;
  (* DONT_TOUCH *) wire [5:0]R_ADDR;
  wire R_ADDR_inferred_i_10_n_0;
  wire R_ADDR_inferred_i_11_n_0;
  wire R_ADDR_inferred_i_12_n_0;
  wire R_ADDR_inferred_i_13_n_0;
  wire R_ADDR_inferred_i_14_n_0;
  wire R_ADDR_inferred_i_15_n_0;
  wire R_ADDR_inferred_i_16_n_0;
  wire R_ADDR_inferred_i_17_n_0;
  wire R_ADDR_inferred_i_18_n_0;
  wire R_ADDR_inferred_i_6_n_0;
  wire R_ADDR_inferred_i_7_n_0;
  wire R_ADDR_inferred_i_8_n_0;
  wire R_ADDR_inferred_i_9_n_0;
  wire [19:0]VALID;
  wire WR_E;
  wire WR_E0_out;
  (* DONT_TOUCH *) wire [5:0]W_ADDR;
  wire W_ADDR_inferred_i_10_n_0;
  wire W_ADDR_inferred_i_11_n_0;
  wire W_ADDR_inferred_i_12_n_0;
  wire W_ADDR_inferred_i_13_n_0;
  wire W_ADDR_inferred_i_14_n_0;
  wire W_ADDR_inferred_i_15_n_0;
  wire W_ADDR_inferred_i_6_n_0;
  wire W_ADDR_inferred_i_7_n_0;
  wire W_ADDR_inferred_i_8_n_0;
  wire W_ADDR_inferred_i_9_n_0;

  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[0]_i_1 
       (.I0(R_ADDR[0]),
        .I1(FIRE_OR),
        .I2(W_ADDR[0]),
        .O(\ADDR[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[1]_i_1 
       (.I0(R_ADDR[1]),
        .I1(FIRE_OR),
        .I2(W_ADDR[1]),
        .O(\ADDR[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[2]_i_1 
       (.I0(R_ADDR[2]),
        .I1(FIRE_OR),
        .I2(W_ADDR[2]),
        .O(\ADDR[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[3]_i_1 
       (.I0(R_ADDR[3]),
        .I1(FIRE_OR),
        .I2(W_ADDR[3]),
        .O(\ADDR[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[4]_i_1 
       (.I0(R_ADDR[4]),
        .I1(FIRE_OR),
        .I2(W_ADDR[4]),
        .O(\ADDR[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[5]_i_1 
       (.I0(R_ADDR[5]),
        .I1(FIRE_OR),
        .I2(W_ADDR[5]),
        .O(\ADDR[5]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[0] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[0]_i_1_n_0 ),
        .Q(ADDR[0]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[1] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[1]_i_1_n_0 ),
        .Q(ADDR[1]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[2] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[2]_i_1_n_0 ),
        .Q(ADDR[2]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[3] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[3]_i_1_n_0 ),
        .Q(ADDR[3]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[4] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[4]_i_1_n_0 ),
        .Q(ADDR[4]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[5] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[5]_i_1_n_0 ),
        .Q(ADDR[5]));
  LUT2 #(
    .INIT(4'hB)) 
    DEL_i_1
       (.I0(FIRE_OR),
        .I1(MF),
        .O(DEL_i_1_n_0));
  FDPE #(
    .INIT(1'b1)) 
    DEL_reg
       (.C(CP),
        .CE(1'b1),
        .D(DEL_i_1_n_0),
        .PRE(MR),
        .Q(DEL));
  LUT3 #(
    .INIT(8'h02)) 
    \EN[0]_INST_0 
       (.I0(MF),
        .I1(FIRE_OR),
        .I2(VALID[0]),
        .O(EN[0]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \EN[10]_INST_0 
       (.I0(VALID[10]),
        .I1(VALID[8]),
        .I2(VALID[9]),
        .I3(\EN[12]_INST_0_i_1_n_0 ),
        .O(EN[10]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \EN[11]_INST_0 
       (.I0(VALID[8]),
        .I1(VALID[9]),
        .I2(VALID[10]),
        .I3(VALID[11]),
        .I4(\EN[12]_INST_0_i_1_n_0 ),
        .O(EN[11]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \EN[12]_INST_0 
       (.I0(VALID[11]),
        .I1(VALID[10]),
        .I2(VALID[9]),
        .I3(VALID[8]),
        .I4(\EN[12]_INST_0_i_1_n_0 ),
        .I5(VALID[12]),
        .O(EN[12]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \EN[12]_INST_0_i_1 
       (.I0(\EN[8]_INST_0_i_1_n_0 ),
        .I1(VALID[4]),
        .I2(VALID[5]),
        .I3(VALID[6]),
        .I4(VALID[7]),
        .O(\EN[12]_INST_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \EN[13]_INST_0 
       (.I0(VALID[13]),
        .I1(VALID[12]),
        .I2(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[13]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \EN[14]_INST_0 
       (.I0(VALID[14]),
        .I1(VALID[12]),
        .I2(VALID[13]),
        .I3(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[14]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \EN[15]_INST_0 
       (.I0(VALID[12]),
        .I1(VALID[13]),
        .I2(VALID[14]),
        .I3(VALID[15]),
        .I4(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[15]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \EN[16]_INST_0 
       (.I0(VALID[13]),
        .I1(VALID[12]),
        .I2(VALID[15]),
        .I3(VALID[14]),
        .I4(\EN[19]_INST_0_i_2_n_0 ),
        .I5(VALID[16]),
        .O(EN[16]));
  LUT6 #(
    .INIT(64'h0400000000000000)) 
    \EN[17]_INST_0 
       (.I0(VALID[17]),
        .I1(VALID[16]),
        .I2(\EN[17]_INST_0_i_1_n_0 ),
        .I3(VALID[15]),
        .I4(VALID[14]),
        .I5(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[17]));
  LUT2 #(
    .INIT(4'h7)) 
    \EN[17]_INST_0_i_1 
       (.I0(VALID[12]),
        .I1(VALID[13]),
        .O(\EN[17]_INST_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    \EN[18]_INST_0 
       (.I0(VALID[18]),
        .I1(VALID[16]),
        .I2(VALID[17]),
        .I3(\EN[19]_INST_0_i_1_n_0 ),
        .I4(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[18]));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \EN[19]_INST_0 
       (.I0(VALID[16]),
        .I1(VALID[17]),
        .I2(VALID[18]),
        .I3(VALID[19]),
        .I4(\EN[19]_INST_0_i_1_n_0 ),
        .I5(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[19]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \EN[19]_INST_0_i_1 
       (.I0(VALID[13]),
        .I1(VALID[12]),
        .I2(VALID[15]),
        .I3(VALID[14]),
        .O(\EN[19]_INST_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \EN[19]_INST_0_i_2 
       (.I0(\EN[12]_INST_0_i_1_n_0 ),
        .I1(VALID[8]),
        .I2(VALID[9]),
        .I3(VALID[10]),
        .I4(VALID[11]),
        .O(\EN[19]_INST_0_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0040)) 
    \EN[1]_INST_0 
       (.I0(FIRE_OR),
        .I1(MF),
        .I2(VALID[0]),
        .I3(VALID[1]),
        .O(EN[1]));
  LUT5 #(
    .INIT(32'h00000080)) 
    \EN[2]_INST_0 
       (.I0(VALID[1]),
        .I1(VALID[0]),
        .I2(MF),
        .I3(FIRE_OR),
        .I4(VALID[2]),
        .O(EN[2]));
  LUT6 #(
    .INIT(64'h0000000040000000)) 
    \EN[3]_INST_0 
       (.I0(VALID[3]),
        .I1(VALID[2]),
        .I2(VALID[1]),
        .I3(VALID[0]),
        .I4(MF),
        .I5(FIRE_OR),
        .O(EN[3]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \EN[4]_INST_0 
       (.I0(\EN[8]_INST_0_i_1_n_0 ),
        .I1(VALID[4]),
        .O(EN[4]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \EN[5]_INST_0 
       (.I0(VALID[5]),
        .I1(VALID[4]),
        .I2(\EN[8]_INST_0_i_1_n_0 ),
        .O(EN[5]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \EN[6]_INST_0 
       (.I0(VALID[6]),
        .I1(VALID[4]),
        .I2(VALID[5]),
        .I3(\EN[8]_INST_0_i_1_n_0 ),
        .O(EN[6]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \EN[7]_INST_0 
       (.I0(VALID[4]),
        .I1(VALID[5]),
        .I2(VALID[6]),
        .I3(VALID[7]),
        .I4(\EN[8]_INST_0_i_1_n_0 ),
        .O(EN[7]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \EN[8]_INST_0 
       (.I0(VALID[7]),
        .I1(VALID[6]),
        .I2(VALID[5]),
        .I3(VALID[4]),
        .I4(\EN[8]_INST_0_i_1_n_0 ),
        .I5(VALID[8]),
        .O(EN[8]));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \EN[8]_INST_0_i_1 
       (.I0(VALID[1]),
        .I1(VALID[0]),
        .I2(MF),
        .I3(FIRE_OR),
        .I4(VALID[3]),
        .I5(VALID[2]),
        .O(\EN[8]_INST_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \EN[9]_INST_0 
       (.I0(VALID[9]),
        .I1(VALID[8]),
        .I2(\EN[12]_INST_0_i_1_n_0 ),
        .O(EN[9]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    FIRE_OR_inferred_i_1
       (.I0(FIRE[17]),
        .I1(FIRE[16]),
        .I2(FIRE[19]),
        .I3(FIRE[18]),
        .I4(FIRE_OR_inferred_i_2_n_0),
        .I5(FIRE_OR_inferred_i_3_n_0),
        .O(FIRE_OR));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    FIRE_OR_inferred_i_2
       (.I0(FIRE[10]),
        .I1(FIRE[11]),
        .I2(FIRE[8]),
        .I3(FIRE[9]),
        .I4(FIRE_OR_inferred_i_4_n_0),
        .O(FIRE_OR_inferred_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    FIRE_OR_inferred_i_3
       (.I0(FIRE[1]),
        .I1(FIRE[5]),
        .I2(FIRE[3]),
        .I3(FIRE[7]),
        .I4(R_ADDR_inferred_i_6_n_0),
        .O(FIRE_OR_inferred_i_3_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    FIRE_OR_inferred_i_4
       (.I0(FIRE[13]),
        .I1(FIRE[12]),
        .I2(FIRE[15]),
        .I3(FIRE[14]),
        .O(FIRE_OR_inferred_i_4_n_0));
  LUT6 #(
    .INIT(64'h0000000055555554)) 
    R_ADDR_inferred_i_1
       (.I0(FIRE_OR_inferred_i_2_n_0),
        .I1(FIRE[17]),
        .I2(FIRE[16]),
        .I3(FIRE[19]),
        .I4(FIRE[18]),
        .I5(FIRE_OR_inferred_i_3_n_0),
        .O(R_ADDR[4]));
  LUT6 #(
    .INIT(64'h000A000A000A000E)) 
    R_ADDR_inferred_i_10
       (.I0(FIRE[5]),
        .I1(R_ADDR_inferred_i_14_n_0),
        .I2(R_ADDR_inferred_i_15_n_0),
        .I3(FIRE[4]),
        .I4(FIRE[6]),
        .I5(FIRE[8]),
        .O(R_ADDR_inferred_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    R_ADDR_inferred_i_11
       (.I0(FIRE[9]),
        .I1(FIRE[8]),
        .I2(FIRE[11]),
        .I3(FIRE[10]),
        .O(R_ADDR_inferred_i_11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'hE)) 
    R_ADDR_inferred_i_12
       (.I0(FIRE[1]),
        .I1(FIRE[5]),
        .O(R_ADDR_inferred_i_12_n_0));
  LUT6 #(
    .INIT(64'h00000000EEEEEEFE)) 
    R_ADDR_inferred_i_13
       (.I0(FIRE[10]),
        .I1(FIRE[11]),
        .I2(R_ADDR_inferred_i_16_n_0),
        .I3(FIRE[13]),
        .I4(FIRE[12]),
        .I5(R_ADDR_inferred_i_17_n_0),
        .O(R_ADDR_inferred_i_13_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF55551110)) 
    R_ADDR_inferred_i_14
       (.I0(FIRE[10]),
        .I1(FIRE[12]),
        .I2(R_ADDR_inferred_i_18_n_0),
        .I3(FIRE[13]),
        .I4(FIRE[11]),
        .I5(FIRE[9]),
        .O(R_ADDR_inferred_i_14_n_0));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'hE)) 
    R_ADDR_inferred_i_15
       (.I0(FIRE[0]),
        .I1(FIRE[2]),
        .O(R_ADDR_inferred_i_15_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF1110)) 
    R_ADDR_inferred_i_16
       (.I0(FIRE[16]),
        .I1(FIRE[17]),
        .I2(FIRE[18]),
        .I3(FIRE[19]),
        .I4(FIRE[15]),
        .I5(FIRE[14]),
        .O(R_ADDR_inferred_i_16_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    R_ADDR_inferred_i_17
       (.I0(FIRE[8]),
        .I1(FIRE[9]),
        .O(R_ADDR_inferred_i_17_n_0));
  LUT6 #(
    .INIT(64'h00000000AAAAEEFE)) 
    R_ADDR_inferred_i_18
       (.I0(FIRE[15]),
        .I1(FIRE[17]),
        .I2(FIRE[19]),
        .I3(FIRE[18]),
        .I4(FIRE[16]),
        .I5(FIRE[14]),
        .O(R_ADDR_inferred_i_18_n_0));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    R_ADDR_inferred_i_2
       (.I0(FIRE_OR_inferred_i_2_n_0),
        .I1(R_ADDR_inferred_i_6_n_0),
        .I2(FIRE[7]),
        .I3(FIRE[3]),
        .I4(FIRE[5]),
        .I5(FIRE[1]),
        .O(R_ADDR[3]));
  LUT5 #(
    .INIT(32'h00010000)) 
    R_ADDR_inferred_i_3
       (.I0(FIRE[0]),
        .I1(FIRE[2]),
        .I2(FIRE[1]),
        .I3(FIRE[3]),
        .I4(R_ADDR_inferred_i_7_n_0),
        .O(R_ADDR[2]));
  LUT5 #(
    .INIT(32'hFFFF000E)) 
    R_ADDR_inferred_i_4
       (.I0(FIRE[2]),
        .I1(FIRE[3]),
        .I2(FIRE[0]),
        .I3(FIRE[1]),
        .I4(R_ADDR_inferred_i_8_n_0),
        .O(R_ADDR[1]));
  LUT4 #(
    .INIT(16'hFFF2)) 
    R_ADDR_inferred_i_5
       (.I0(FIRE[1]),
        .I1(FIRE[0]),
        .I2(R_ADDR_inferred_i_9_n_0),
        .I3(R_ADDR_inferred_i_10_n_0),
        .O(R_ADDR[0]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    R_ADDR_inferred_i_6
       (.I0(FIRE[6]),
        .I1(FIRE[4]),
        .I2(FIRE[2]),
        .I3(FIRE[0]),
        .O(R_ADDR_inferred_i_6_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF4)) 
    R_ADDR_inferred_i_7
       (.I0(R_ADDR_inferred_i_11_n_0),
        .I1(FIRE_OR_inferred_i_4_n_0),
        .I2(FIRE[4]),
        .I3(FIRE[6]),
        .I4(FIRE[5]),
        .I5(FIRE[7]),
        .O(R_ADDR_inferred_i_7_n_0));
  LUT6 #(
    .INIT(64'h0101010101010100)) 
    R_ADDR_inferred_i_8
       (.I0(R_ADDR_inferred_i_12_n_0),
        .I1(FIRE[0]),
        .I2(FIRE[4]),
        .I3(FIRE[6]),
        .I4(FIRE[7]),
        .I5(R_ADDR_inferred_i_13_n_0),
        .O(R_ADDR_inferred_i_8_n_0));
  LUT6 #(
    .INIT(64'h000000AB000000AA)) 
    R_ADDR_inferred_i_9
       (.I0(FIRE[3]),
        .I1(FIRE[6]),
        .I2(FIRE[4]),
        .I3(FIRE[2]),
        .I4(FIRE[0]),
        .I5(FIRE[7]),
        .O(R_ADDR_inferred_i_9_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    WR_E_i_1
       (.I0(MF),
        .I1(FIRE_OR),
        .O(WR_E0_out));
  FDCE #(
    .INIT(1'b0)) 
    WR_E_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(WR_E0_out),
        .Q(WR_E));
  LUT6 #(
    .INIT(64'h000000007FFF0000)) 
    W_ADDR_inferred_i_1
       (.I0(VALID[16]),
        .I1(VALID[17]),
        .I2(VALID[18]),
        .I3(VALID[19]),
        .I4(\EN[19]_INST_0_i_2_n_0 ),
        .I5(\EN[19]_INST_0_i_1_n_0 ),
        .O(W_ADDR[4]));
  LUT6 #(
    .INIT(64'hF777555500000000)) 
    W_ADDR_inferred_i_10
       (.I0(VALID[5]),
        .I1(VALID[7]),
        .I2(W_ADDR_inferred_i_13_n_0),
        .I3(VALID[8]),
        .I4(VALID[6]),
        .I5(VALID[4]),
        .O(W_ADDR_inferred_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h7)) 
    W_ADDR_inferred_i_11
       (.I0(VALID[8]),
        .I1(VALID[9]),
        .O(W_ADDR_inferred_i_11_n_0));
  LUT6 #(
    .INIT(64'h0000000077777FFF)) 
    W_ADDR_inferred_i_12
       (.I0(VALID[14]),
        .I1(VALID[15]),
        .I2(VALID[19]),
        .I3(VALID[18]),
        .I4(W_ADDR_inferred_i_14_n_0),
        .I5(\EN[17]_INST_0_i_1_n_0 ),
        .O(W_ADDR_inferred_i_12_n_0));
  LUT6 #(
    .INIT(64'h8088AAAAFFFFFFFF)) 
    W_ADDR_inferred_i_13
       (.I0(VALID[10]),
        .I1(VALID[12]),
        .I2(W_ADDR_inferred_i_15_n_0),
        .I3(VALID[13]),
        .I4(VALID[11]),
        .I5(VALID[9]),
        .O(W_ADDR_inferred_i_13_n_0));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h7)) 
    W_ADDR_inferred_i_14
       (.I0(VALID[16]),
        .I1(VALID[17]),
        .O(W_ADDR_inferred_i_14_n_0));
  LUT6 #(
    .INIT(64'h77F7555500000000)) 
    W_ADDR_inferred_i_15
       (.I0(VALID[15]),
        .I1(VALID[17]),
        .I2(VALID[18]),
        .I3(VALID[19]),
        .I4(VALID[16]),
        .I5(VALID[14]),
        .O(W_ADDR_inferred_i_15_n_0));
  LUT6 #(
    .INIT(64'hFFFF00007FFF0000)) 
    W_ADDR_inferred_i_2
       (.I0(VALID[11]),
        .I1(VALID[10]),
        .I2(VALID[9]),
        .I3(VALID[8]),
        .I4(\EN[12]_INST_0_i_1_n_0 ),
        .I5(\EN[19]_INST_0_i_1_n_0 ),
        .O(W_ADDR[3]));
  LUT6 #(
    .INIT(64'hF700F700FF00F700)) 
    W_ADDR_inferred_i_3
       (.I0(VALID[7]),
        .I1(VALID[6]),
        .I2(W_ADDR_inferred_i_6_n_0),
        .I3(\EN[8]_INST_0_i_1_n_0 ),
        .I4(\EN[19]_INST_0_i_1_n_0 ),
        .I5(W_ADDR_inferred_i_7_n_0),
        .O(W_ADDR[2]));
  LUT6 #(
    .INIT(64'hF700770077007700)) 
    W_ADDR_inferred_i_4
       (.I0(VALID[2]),
        .I1(VALID[3]),
        .I2(W_ADDR_inferred_i_8_n_0),
        .I3(W_ADDR_inferred_i_9_n_0),
        .I4(VALID[5]),
        .I5(VALID[4]),
        .O(W_ADDR[1]));
  LUT6 #(
    .INIT(64'h00DF000000550000)) 
    W_ADDR_inferred_i_5
       (.I0(VALID[1]),
        .I1(W_ADDR_inferred_i_10_n_0),
        .I2(VALID[3]),
        .I3(DEL_i_1_n_0),
        .I4(VALID[0]),
        .I5(VALID[2]),
        .O(W_ADDR[0]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h7)) 
    W_ADDR_inferred_i_6
       (.I0(VALID[4]),
        .I1(VALID[5]),
        .O(W_ADDR_inferred_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    W_ADDR_inferred_i_7
       (.I0(VALID[11]),
        .I1(VALID[10]),
        .I2(VALID[9]),
        .I3(VALID[8]),
        .O(W_ADDR_inferred_i_7_n_0));
  LUT6 #(
    .INIT(64'h4555FFFFFFFFFFFF)) 
    W_ADDR_inferred_i_8
       (.I0(W_ADDR_inferred_i_11_n_0),
        .I1(W_ADDR_inferred_i_12_n_0),
        .I2(VALID[11]),
        .I3(VALID[10]),
        .I4(VALID[7]),
        .I5(VALID[6]),
        .O(W_ADDR_inferred_i_8_n_0));
  LUT4 #(
    .INIT(16'h4000)) 
    W_ADDR_inferred_i_9
       (.I0(FIRE_OR),
        .I1(MF),
        .I2(VALID[0]),
        .I3(VALID[1]),
        .O(W_ADDR_inferred_i_9_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(W_ADDR[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(R_ADDR[5]));
endmodule

(* CHECK_LICENSE_TYPE = "PS,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module PS
   (clka,
    addra,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [16:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [16:0]douta;
  wire NLW_U0_clkb_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_ena_UNCONNECTED;
  wire NLW_U0_enb_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [4:0]NLW_U0_addrb_UNCONNECTED;
  wire [16:0]NLW_U0_dina_UNCONNECTED;
  wire [16:0]NLW_U0_dinb_UNCONNECTED;
  wire [16:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [16:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [16:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_wea_UNCONNECTED;
  wire [0:0]NLW_U0_web_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.751199 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "PS.mem" *) 
  (* C_INIT_FILE_NAME = "PS.mif" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "1" *) 
  (* C_MEM_TYPE = "3" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "17" *) 
  (* C_READ_WIDTH_B = "17" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "17" *) 
  (* C_WRITE_WIDTH_B = "17" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  PS_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb(NLW_U0_addrb_UNCONNECTED[4:0]),
        .clka(clka),
        .clkb(NLW_U0_clkb_UNCONNECTED),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(NLW_U0_dina_UNCONNECTED[16:0]),
        .dinb(NLW_U0_dinb_UNCONNECTED[16:0]),
        .douta(douta),
        .doutb(NLW_U0_doutb_UNCONNECTED[16:0]),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(NLW_U0_ena_UNCONNECTED),
        .enb(NLW_U0_enb_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[16:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[16:0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(NLW_U0_wea_UNCONNECTED[0]),
        .web(NLW_U0_web_UNCONNECTED[0]));
endmodule

(* ABSORB = "6'b111111" *) (* ADD = "6'b000000" *) (* ADDC = "6'b000001" *) 
(* ADDGEN = "6'b101010" *) (* AND = "6'b000100" *) (* BC = "6'b010010" *) 
(* BNC = "6'b010011" *) (* BNZ = "6'b010001" *) (* BNZL = "6'b011000" *) 
(* BZ = "6'b010000" *) (* BZL = "6'b011000" *) (* CHGCOL = "6'b101001" *) 
(* CHGDEST = "6'b110000" *) (* DECGEN = "6'b101100" *) (* LDM = "6'b100000" *) 
(* MUL = "6'b000111" *) (* OR = "6'b000101" *) (* ROL = "6'b001010" *) 
(* ROR = "6'b001011" *) (* SHL = "6'b001000" *) (* SHR = "6'b001001" *) 
(* STM = "6'b100001" *) (* SUB = "6'b000010" *) (* SUBC = "6'b000011" *) 
(* XOR = "6'b000110" *) (* dont_touch = "true" *) 
module PS_Stage
   (Send_in,
    Ack_in,
    MR,
    PACKET_IN,
    PACKET_OUT,
    DEL,
    Send_out,
    Ack_out);
  input Send_in;
  input Ack_in;
  input MR;
  input [51:0]PACKET_IN;
  output [61:0]PACKET_OUT;
  output DEL;
  output Send_out;
  output Ack_out;

  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  wire DEL;
  (* DONT_TOUCH *) wire [51:0]DL;
  wire MR;
  wire [51:0]\^PACKET_IN ;
  (* DONT_TOUCH *) wire [16:0]PSData;
  wire Send_in;
  wire Send_out;
  (* DONT_TOUCH *) wire [6:0]dest;

  assign PACKET_OUT[61:51] = DL[51:41];
  assign PACKET_OUT[50:34] = PSData;
  assign PACKET_OUT[33:0] = DL[33:0];
  assign \^PACKET_IN [51:41] = PACKET_IN[51:41];
  assign \^PACKET_IN [33:0] = PACKET_IN[33:0];
  assign dest = PACKET_IN[40:34];
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    DEL_INST_0
       (.I0(PSData[5]),
        .I1(PSData[4]),
        .I2(PSData[1]),
        .I3(PSData[0]),
        .I4(PSData[3]),
        .I5(PSData[2]),
        .O(DEL));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[0]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[1]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[2]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[3]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[38] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[4]),
        .Q(DL[38]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[39] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[5]),
        .Q(DL[39]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[40] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[6]),
        .Q(DL[40]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[41] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [41]),
        .Q(DL[41]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[42] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [42]),
        .Q(DL[42]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[43] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [43]),
        .Q(DL[43]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[44] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [44]),
        .Q(DL[44]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[45] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [45]),
        .Q(DL[45]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[46] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [46]),
        .Q(DL[46]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[47] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [47]),
        .Q(DL[47]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[48] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [48]),
        .Q(DL[48]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[49] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [49]),
        .Q(DL[49]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[50] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [50]),
        .Q(DL[50]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[51] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [51]),
        .Q(DL[51]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  C__2 c
       (.Ack_in(Ack_in),
        .Ack_out(Ack_out),
        .CP(CP),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(Send_out));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/PS/PS.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  PS ps
       (.addra(dest[4:0]),
        .clka(CP),
        .douta(PSData));
endmodule

(* CHECK_LICENSE_TYPE = "SubPS,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module SubPS
   (clka,
    addra,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [0:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [0:0]douta;
  wire NLW_U0_clkb_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_ena_UNCONNECTED;
  wire NLW_U0_enb_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [4:0]NLW_U0_addrb_UNCONNECTED;
  wire [0:0]NLW_U0_dina_UNCONNECTED;
  wire [0:0]NLW_U0_dinb_UNCONNECTED;
  wire [0:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_wea_UNCONNECTED;
  wire [0:0]NLW_U0_web_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     1.903721 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "SubPS.mem" *) 
  (* C_INIT_FILE_NAME = "SubPS.mif" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "1" *) 
  (* C_MEM_TYPE = "3" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  SubPS_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb(NLW_U0_addrb_UNCONNECTED[4:0]),
        .clka(clka),
        .clkb(NLW_U0_clkb_UNCONNECTED),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(NLW_U0_dina_UNCONNECTED[0]),
        .dinb(NLW_U0_dinb_UNCONNECTED[0]),
        .douta(douta),
        .doutb(NLW_U0_doutb_UNCONNECTED[0]),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(NLW_U0_ena_UNCONNECTED),
        .enb(NLW_U0_enb_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(NLW_U0_wea_UNCONNECTED[0]),
        .web(NLW_U0_web_UNCONNECTED[0]));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2024.1"
`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
RSqbsRZSIb+QlYJMfFv1T7uHQ7PiCEXQkl687MHGm2LgPB15GIYcPmqKUSXgtkLsIFes91PTAyyB
9H9cyY4ZUxedcRg/9ZOB5pm3zPqAbcvGPmg1ivMhr/MlS19t5lYKM2tQo+0Yd+arJXlVZu2BMnvn
+I3G9t9tJuWUIWKjI+I=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
VRSQ05ZaB6bIhFIQ823mTvlJaG9+5iW5C3+KxGjq0sq9ziCshKOLpOGPDMmOWDqA4uBaxC5IKISr
w8+A8mqbYjXo5m1g8sGjNaETS0HKJsK+l5Y++tN4IEUs+DwxgrPR/+LWtChuOzVkfC7BG3LVUEMj
zM3GAyGcXGJ3sdBItZAfsevyiy7kr4Fw+nk2hWytGteu1NZk3VzPE7KQHLkOlHBPXf6P0j8LpKcr
2oNDgQ/WaEmg6OOvFeJuaWDaee8Sn6wKP/caMyoGdSeczsPtRrJeoSRlbNHlxhCv7zg+Cn2AgwrR
PTqGsMrkhv9U0sq+waS0CmwChsk4WB7RspGYUg==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
tNziOjCznlvIl4dadmB9r23Duf+HQHWOuHmupEU3PJxrazHVtZdNKspG9sRXhF9mjbpnSiKYCdFK
Jr9W/dxUid36faFIPKQazVTuOiE0hkzVQAGpYxXjT/ITB/9EFBvgvP5L3EAhHv32x6MA1vkFSI7x
HrZ09YNFEF6T7DPTZE4=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
QCYfxgkUHlX1cre1q9aS3sVDIOX36YBK4ZwJXAVUwA6f1OQ77XibjpWJHt5FK9F0PcYp/j21pqzO
BRdkDcFLVAjxER4J5t5iMVhoeMk+3fpiKfYrm4WFl1ygsJsfFJP0jqO1OkjC8iFBtm3n6b7CTl1o
cjBbcBp8UgW6E8rf5inXA0dRqybnyxKJSnMFYLinvpVU6QEc4OKO7mi/i/s9p/efiP+CdQf0yDRU
Fw7o7x0D7tjBv943g5L+4wGZ2JYU+ISqn4Ajxy/bWTTJDe6T/15evhngS61MC8Xjamzc4YLZBP8o
ShfSLoeZeO+Hk5n3xzJRghM0DQ6Sj7NqXFY68w==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Uy8FDDy3dZQGAnMQV0HBesEs+/oZdaq35Kj1PGhy9J/+EBZm0nhhQgYtku8tWABW2jKAC1GtNTvo
uReQyr1hteMxTbD5OIuqv86eb1hXZVENlZ7ichG8auUjkeHAkaSYNbHOuDLIhSqHEL67XbcZ9zPG
1JOY3+VONSww0KYPcQbGSo/2DaC5C0Y+mZODRfJ4+b0WXjce6UaJetilBc3VtqqmodIM2d3HDawF
R0xVJfHj86rXmUkY+SNUw60zsV6raCY6G3k/rXpei1d6zn8tCThkKG5fwiWY8zA7kRdTFIlVKP9h
fb6kfzRBRT/BgVQ8d4RgEcEVV8m3u/Mf4KIlTw==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2023_11", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Pk1GeRlkUK9lt6DVXYVdtOABlzDEWQDcBsP/p+Wo5HaglDLG5b8gk08xTP3IcJ1RKcfuARPMGO2s
/VqFbnVADV90T1rhjIuWMcBnzYQK/ALUvwv11Uju9Gn0fvPIz52l3QBnpjHI1nlsFB7WeqkzVfHZ
tg9gO9bPHjHLjVd9BzH6McrEWY5RkZ0UBy0Fmh/SownJX1b0YGE7LdwKydEMEpyvb28bwTOwfEv/
4RtsfYtEvTjo6e1ZBm66D9IQmKUu32wzTfn5bFZHdyjZg6+HcTzvHMtQX2+AggXfP6FsO2/83qkb
0bfj226fnLhr32dJxtsaJS5OR63GYtzDJ05ITA==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
LCfWqKmUoUSVOTKNAl5p8n1hfz7SMU2kDOUMBjsDncgSFqiu2zUy1I6GSDrVnF/2umJG5/mWcpvi
rQaFJOlrJ8DNctSuavdlopRAwTMsVi6dAlNGrAawSiDIxtI3tN3MDVdMiH5H+pJMqMt59yXneyCf
2RRSRz2sUQK/aj0lXlqKjVJzVbk8HaBQ8akBJF4iWSMK4foIzJ6iO1EupYovuW6uEiO7jQRWezlW
pbbDenOHHWbfinuX5cbkjpTKHGsEKct65q+ZXJp60m3sconSK3Y2eLQxusuJ1FHDJ4GGKO8mEzCv
3cfGdXX3pVL81OfGO/JD1aMs9H98CO5ssbHqlw==

`pragma protect key_keyowner="Atrenta", key_keyname="ATR-SG-RSA-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=384)
`pragma protect key_block
A4S1e3DHcTeWzaDVuWDRb3Yf1BjiEsR1RtAeL0BJ7J/oPWMNj96MeGsUiHtZoiYqteTZxqax2cyZ
PV0cMLoBK4Ya8CyM+BTnkFA2ablsGt5Es4TgG/nFS9VEhmeKxu8boAsqW5697aiqOATJf/LucQh5
GOnPXHAuPrDj0A/fu8N2QduqGyysWUSc1KsoJ0/0noJYvLJ2yOhFi4uIUYQfG5LOuOrca5P43pqA
iwUKW/RrFXal2acJdFeXIKffZpKanSV97urdzKyBvf9EPV/M8g9uPFJJ1z6aS+FbknhVPs0pt6eD
+J/qib4gVp/HGnRo4YlxauUMv6Yv9wxiaObY6ttDfYf5p3uzWZMlf3i7YOzZwcd4aS/6+vkD28LG
L9piBIpLx2dvQy74RdvCVdvaP1LC6RMju9RfuXJhuX4ZAmDxRi0zQyRda838ikzwYeOCSKLIvRPb
nuJ8Zx2ot8EFqSeGaaRFaEMU6Zf5SptCUuVMHvSkinBewcwrLB5uiJTJ

`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="CDS_RSA_KEY_VER_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
gj+uMxV+tK4Di7pgSOE82FOBeWmUB1A7OKFOSMUW3qrmQ4/YhryfHMlWPxfAq8avQL7tnBTnRFEg
czbErdIcNzYjrM7Qq00QC/mTqmeQX4/apbqGvN+rwK4RR5oj22wfTib/UQNEQX6fbpi6PtmAeUR9
eShsfq+YWcf7z2Zw4Q+o4+E6m4/3CzU68vglNpzNsJ8S9/8XpdIrvAA/WRAX6OEOC4wlNIKDZsq/
+zMbFgSzN1rP844I/CDmxYM0NIzBWWhYBkPfJyQyigmUoXb84lDip0/Dmnq4EHvu7D/tZNnDl5st
JpftRfEpT6S8e/5MBeKUuhbfg6etHo/oFZvPKQ==

`pragma protect key_keyowner="Synplicity", key_keyname="SYNP15_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
aWTy3xv6SqKsldtLS2gY4KrTS8U+KtFNRHS314f6EYZy1MHE9t7oICJ8eNB8up8A+odoE23N3fJb
1alhaadeRWU2GjlIiK1LjZ5PQw+jb1u1GWtRiY+TcTlD75XUlqwykVBrCDfm565DmgZjZle9T3/t
WEfLo+m/8GfBe8trVnoftsk/XI00BMFXRzw8doPGDhNECS1NUrLebryb9iO5Hf4A/40dtslTARsR
nicN0KoIIyiQ+QzliqyXU/8VjS45inON8R0Kv9Qx46EXUp7bds5uQ7QycRhpLG0IPnMIweudU67w
eQmpHJzvZKBCZks/R0OafZx44H6Jib2+QazBCw==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-PREC-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
UGdPiChIPj1lSozqzCQx17Bi+8FWSuMUMzXUkDLH5zcP1t8tZLzh4CU4WAR8lmJxn8gH763fLp5c
RYU6zA0yxHzl2ksc5YRU1XEfQQT9ha8fQnz+18wVKcsa5UIOfMbGDwnS9yfX59ntG8CB0uF8bJKE
y1CS6U/1Stfs1w2mF94iDxI2n2GJlb1UPtWpmxMBI88hY0GktTPXP2Y7JKl8zRl/Lq0wIF8pHwXk
B4nOgKm6hfzPj0xZ6E/TuER/JE3fy8RSm24IlL/CUgpReEslEOYjQ4EKKZRG9/fxg26utQWW9p+G
fWVU53qrFGzBhKQ96Paj1ROkv6hDHyUb6n7uSw==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 78480)
`pragma protect data_block
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
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
