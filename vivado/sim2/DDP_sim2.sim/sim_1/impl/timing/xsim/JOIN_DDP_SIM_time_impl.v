// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2024.1 (win64) Build 5076996 Wed May 22 18:37:14 MDT 2024
// Date        : Wed Oct  9 14:59:13 2024
// Host        : DESKTOP-B2190GF running 64-bit major release  (build 9200)
// Command     : write_verilog -mode timesim -nolib -sdf_anno true -force -file
//               C:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.sim/sim_1/impl/timing/xsim/JOIN_DDP_SIM_time_impl.v
// Design      : JOIN_DDP
// Purpose     : This verilog netlist is a timing simulation representation of the design and should not be modified or
//               synthesized. Please ensure that this netlist is used with the corresponding SDF file.
// Device      : xc7z010clg400-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps
`define XIL_TIMING

module FDCP_UNIQ_BASE_
   (Q,
    C,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b1)) 
    F1
       (.C(C),
        .CE(VCC_1),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(VCC_1),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_UNIQ_BASE_
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD1
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD10
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD100
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD101
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD102
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD103
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD104
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD105
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD106
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD107
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD108
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD109
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD11
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD110
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD111
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD112
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD113
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD114
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD115
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD116
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD117
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD118
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD119
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD12
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD120
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD121
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD122
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD123
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD124
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD125
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD126
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD127
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD128
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD129
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD13
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD130
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD131
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD132
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD133
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD134
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD135
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD136
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD137
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD138
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD139
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD14
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD140
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD141
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD142
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD143
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD144
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD145
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD146
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD147
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD148
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD149
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD15
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD150
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD151
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD152
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD153
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD154
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD155
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD156
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD157
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD158
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD159
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD16
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD160
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD161
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD162
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD163
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD164
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD165
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD166
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD167
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD168
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD169
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD17
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD170
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD171
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD172
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD173
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD174
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD175
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD176
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD177
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD178
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD179
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD18
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD180
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD181
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD182
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD183
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD184
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD185
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD186
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD187
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD188
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD189
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD19
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD190
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD191
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD192
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD193
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD194
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD195
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD196
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD197
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD198
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD199
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD2
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD20
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD200
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD201
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD202
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD203
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD204
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD205
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD206
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD207
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD208
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD209
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD21
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD210
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD211
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD212
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD213
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD214
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD215
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD216
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD217
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD218
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD219
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD22
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD220
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD221
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD222
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD223
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD224
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD225
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD226
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD227
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD228
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD229
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD23
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD230
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD231
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD232
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD233
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD234
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD235
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD236
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD237
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD238
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD239
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD24
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD240
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD241
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD242
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD243
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD244
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD245
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD246
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD247
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD248
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD249
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD25
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD250
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD251
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD252
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD253
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD254
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD255
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD256
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD257
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD258
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD259
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD26
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD260
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD261
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD262
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD263
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD264
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD265
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD266
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD267
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD268
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD269
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD27
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD270
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD271
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD272
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD273
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD274
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD275
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD276
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD277
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD278
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD279
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD28
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD280
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD281
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD282
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD283
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD284
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD285
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD286
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD287
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD288
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD289
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD29
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD290
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD291
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD292
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD293
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD294
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD295
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD296
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD297
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD298
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD299
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD3
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD30
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD300
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD301
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD302
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD303
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD304
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD305
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD306
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD307
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD308
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD309
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD31
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD310
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD311
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD312
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD313
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD314
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD315
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD316
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD317
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD318
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD319
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD32
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD320
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD321
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD322
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD323
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD324
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD325
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD326
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD327
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD328
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD329
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD33
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD330
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD331
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD332
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD333
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD334
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD335
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD336
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD337
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD338
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD339
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD34
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD340
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD341
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD342
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD343
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD344
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD345
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD346
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD347
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD348
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD349
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD35
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD350
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD351
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD352
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD353
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD354
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD355
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD356
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD357
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD358
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD359
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD36
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD360
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD361
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD362
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD363
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD364
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD365
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD366
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD367
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD368
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD369
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD37
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD370
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD371
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD372
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD373
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD374
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD375
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD376
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD377
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD378
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD379
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD38
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD39
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD4
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD40
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD41
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD42
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD43
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD44
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD45
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD46
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD47
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD48
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD49
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD5
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD50
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD51
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD52
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD53
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD54
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD55
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD56
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD57
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD58
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD59
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD6
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD60
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD61
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD62
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD63
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD64
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD65
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD66
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD67
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD68
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD69
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD7
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD70
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD71
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD72
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD73
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD74
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD75
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD76
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD77
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD78
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD79
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD8
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD80
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD81
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD82
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD83
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD84
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD85
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD86
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD87
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD88
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD89
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD9
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD90
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD91
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD92
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD93
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD94
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD95
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD96
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD97
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD98
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

module FDCPE_HD99
   (Q,
    C,
    CE,
    CLR,
    D,
    PRE);
  output Q;
  input C;
  input CE;
  input CLR;
  input D;
  input PRE;

  wire C;
  wire CE;
  wire CLR;
  wire D;
  wire D0;
  wire D1;
  wire PRE;
  wire Q;
  wire S0;
  wire VCC_1;

  FDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_C_INVERTED(1'b0)) 
    F1
       (.C(C),
        .CE(CE),
        .CLR(CLR),
        .D(D),
        .Q(D0));
  FDPE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    F2
       (.C(C),
        .CE(CE),
        .D(D),
        .PRE(PRE),
        .Q(D1));
  LUT3 #(
    .INIT(8'hCA)) 
    L3
       (.I0(D0),
        .I1(D1),
        .I2(S0),
        .O(Q));
  (* XILINX_TRANSFORM_PINMAP = "VCC:D,GE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    L7
       (.CLR(CLR),
        .D(VCC_1),
        .G(PRE),
        .GE(VCC_1),
        .Q(S0));
  VCC VCC
       (.P(VCC_1));
endmodule

(* dont_touch = "true" *) 
module ARB
   (ARB_Send_in_a,
    ARB_Ack_out_a,
    ARB_Send_in_b,
    ARB_Ack_out_b,
    ARB_Za,
    ARB_Zb,
    MR,
    ARB_Ga,
    ARB_Gb);
  input ARB_Send_in_a;
  input ARB_Ack_out_a;
  input ARB_Send_in_b;
  input ARB_Ack_out_b;
  input ARB_Za;
  input ARB_Zb;
  input MR;
  output ARB_Ga;
  output ARB_Gb;

  wire ARB_Ack_out_a;
  wire ARB_Ack_out_b;
  wire ARB_Send_in_a;
  wire ARB_Send_in_b;
  wire ARB_Za;
  wire ARB_Zb;
  wire MR;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire nand6_out;
  (* DONT_TOUCH *) wire nand7_out;
  (* DONT_TOUCH *) wire nand8_out;

  assign ARB_Ga = nand8_out;
  assign ARB_Gb = nand7_out;
  LUT3 #(
    .INIT(8'h7F)) 
    nand1_out_inferred_i_1
       (.I0(ARB_Send_in_a),
        .I1(nand2_out),
        .I2(ARB_Ack_out_a),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'hDF)) 
    nand2_out_inferred_i_1
       (.I0(ARB_Za),
        .I1(MR),
        .I2(nand1_out),
        .O(nand2_out));
  LUT3 #(
    .INIT(8'hDF)) 
    nand3_out_inferred_i_1
       (.I0(nand4_out),
        .I1(MR),
        .I2(ARB_Zb),
        .O(nand3_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(ARB_Ack_out_b),
        .I2(ARB_Send_in_b),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'hBF)) 
    nand5_out_inferred_i_1
       (.I0(MR),
        .I1(nand6_out),
        .I2(nand2_out),
        .O(nand5_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand6_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand6_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand7_out_inferred_i_1
       (.I0(nand8_out),
        .I1(nand5_out),
        .O(nand7_out));
  LUT3 #(
    .INIT(8'hBF)) 
    nand8_out_inferred_i_1
       (.I0(MR),
        .I1(nand6_out),
        .I2(nand7_out),
        .O(nand8_out));
endmodule

(* dont_touch = "true" *) 
module B_Stage
   (PACKET_IN,
    Send_in,
    Ack_in_a,
    Ack_in_b,
    MR,
    Send_out_a,
    Send_out_b,
    Ack_out,
    PACKET_OUT);
  input [37:0]PACKET_IN;
  input Send_in;
  input Ack_in_a;
  input Ack_in_b;
  input MR;
  output Send_out_a;
  output Send_out_b;
  output Ack_out;
  output [37:0]PACKET_OUT;

  wire Ack_in_a;
  wire Ack_in_b;
  wire Ack_out;
  (* DONT_TOUCH *) wire BR;
  wire CP;
  (* DONT_TOUCH *) wire [37:0]DL;
  (* DONT_TOUCH *) wire MF;
  wire MR;
  wire [37:0]\^PACKET_IN ;
  wire Send_in;
  wire Send_out_a;
  wire Send_out_b;
  (* DONT_TOUCH *) wire [6:0]dest;

  assign BR = PACKET_IN[18];
  assign PACKET_OUT[37:19] = DL[37:19];
  assign PACKET_OUT[18] = MF;
  assign PACKET_OUT[17:0] = DL[17:0];
  assign \^PACKET_IN [37:27] = PACKET_IN[37:27];
  assign \^PACKET_IN [19] = PACKET_IN[19];
  assign \^PACKET_IN [17:0] = PACKET_IN[17:0];
  assign dest = PACKET_IN[26:20];
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(BR),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[0]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[1]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[2]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[3]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[4]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[5]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[6]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  CB cb
       (.BR(BR),
        .CB_Ack_in_a(Ack_in_a),
        .CB_Ack_in_b(Ack_in_b),
        .CB_Ack_out(Ack_out),
        .CB_CP(CP),
        .CB_Send_in(Send_in),
        .CB_Send_out_a(Send_out_a),
        .CB_Send_out_b(Send_out_b),
        .MR(MR));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/SubPS/SubPS.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  SubPS subps
       (.addra(dest[4:0]),
        .clka(CP),
        .douta(MF));
endmodule

(* dont_touch = "true" *) 
module C
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__5 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__6 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__7 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__8 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* dont_touch = "true" *) 
module CB
   (CB_Send_in,
    CB_Ack_in_a,
    CB_Ack_in_b,
    MR,
    BR,
    CB_Ack_out,
    CB_Send_out_a,
    CB_Send_out_b,
    CB_CP);
  input CB_Send_in;
  input CB_Ack_in_a;
  input CB_Ack_in_b;
  input MR;
  input BR;
  output CB_Ack_out;
  output CB_Send_out_a;
  output CB_Send_out_b;
  output CB_CP;

  wire BR;
  wire CB_Ack_in_a;
  wire CB_Ack_in_b;
  wire CB_Send_in;
  wire CB_Send_out_a;
  wire CB_Send_out_b;
  (* DONT_TOUCH *) wire DL;
  wire MR;
  (* DONT_TOUCH *) wire and_1;
  (* DONT_TOUCH *) wire cf_ack_out;
  (* DONT_TOUCH *) wire cf_send_out;
  (* DONT_TOUCH *) wire cp;

  assign CB_Ack_out = cf_ack_out;
  assign CB_CP = cp;
  LUT2 #(
    .INIT(4'hE)) 
    CB_Send_out_a_INST_0
       (.I0(cf_send_out),
        .I1(DL),
        .O(CB_Send_out_a));
  LUT2 #(
    .INIT(4'hB)) 
    CB_Send_out_b_INST_0
       (.I0(cf_send_out),
        .I1(DL),
        .O(CB_Send_out_b));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b1)) 
    DL_reg
       (.C(cp),
        .CE(1'b1),
        .CLR(MR),
        .D(BR),
        .Q(DL));
  LUT2 #(
    .INIT(4'h8)) 
    and_1_inferred_i_1
       (.I0(CB_Ack_in_a),
        .I1(CB_Ack_in_b),
        .O(and_1));
  (* DONT_TOUCH *) 
  CF cf
       (.Ack_in(and_1),
        .Ack_out(cf_ack_out),
        .CP(cp),
        .MR(MR),
        .Send_in(CB_Send_in),
        .Send_out(cf_send_out));
endmodule

(* dont_touch = "true" *) 
module CE
   (CE_Send_in,
    CE_Ack_in,
    MR,
    Exb,
    CE_Ack_out,
    CE_Send_out,
    CE_CP);
  input CE_Send_in;
  input CE_Ack_in;
  input MR;
  input Exb;
  output CE_Ack_out;
  output CE_Send_out;
  output CE_CP;

  wire CE_Ack_in;
  wire CE_Send_in;
  (* DONT_TOUCH *) wire DL;
  wire Exb;
  wire MR;
  (* DONT_TOUCH *) wire and_1;
  (* DONT_TOUCH *) wire cf_ack_out;
  (* DONT_TOUCH *) wire cf_send_out;
  (* DONT_TOUCH *) wire cp;
  (* DONT_TOUCH *) wire or_1;
  (* DONT_TOUCH *) wire or_2;

  assign CE_Ack_out = cf_ack_out;
  assign CE_CP = cp;
  assign CE_Send_out = or_1;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    DL_reg
       (.C(cp),
        .CE(1'b1),
        .D(Exb),
        .Q(DL),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    and_1_inferred_i_1
       (.I0(or_2),
        .I1(CE_Ack_in),
        .O(and_1));
  (* DONT_TOUCH *) 
  CF__1 cf
       (.Ack_in(and_1),
        .Ack_out(cf_ack_out),
        .CP(cp),
        .MR(MR),
        .Send_in(CE_Send_in),
        .Send_out(cf_send_out));
  LUT2 #(
    .INIT(4'hB)) 
    or_1_inferred_i_1
       (.I0(cf_send_out),
        .I1(DL),
        .O(or_1));
  LUT2 #(
    .INIT(4'hE)) 
    or_2_inferred_i_1
       (.I0(DL),
        .I1(cf_send_out),
        .O(or_2));
endmodule

(* ORIG_REF_NAME = "CE" *) (* dont_touch = "true" *) 
module CE__1
   (CE_Send_in,
    CE_Ack_in,
    MR,
    Exb,
    CE_Ack_out,
    CE_Send_out,
    CE_CP);
  input CE_Send_in;
  input CE_Ack_in;
  input MR;
  input Exb;
  output CE_Ack_out;
  output CE_Send_out;
  output CE_CP;

  wire CE_Ack_in;
  wire CE_Send_in;
  (* DONT_TOUCH *) wire DL;
  wire Exb;
  wire MR;
  (* DONT_TOUCH *) wire and_1;
  (* DONT_TOUCH *) wire cf_ack_out;
  (* DONT_TOUCH *) wire cf_send_out;
  (* DONT_TOUCH *) wire cp;
  (* DONT_TOUCH *) wire or_1;
  (* DONT_TOUCH *) wire or_2;

  assign CE_Ack_out = cf_ack_out;
  assign CE_CP = cp;
  assign CE_Send_out = or_1;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    DL_reg
       (.C(cp),
        .CE(1'b1),
        .D(Exb),
        .Q(DL),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    and_1_inferred_i_1
       (.I0(or_2),
        .I1(CE_Ack_in),
        .O(and_1));
  (* DONT_TOUCH *) 
  CF__4 cf
       (.Ack_in(and_1),
        .Ack_out(cf_ack_out),
        .CP(cp),
        .MR(MR),
        .Send_in(CE_Send_in),
        .Send_out(cf_send_out));
  LUT2 #(
    .INIT(4'hB)) 
    or_1_inferred_i_1
       (.I0(cf_send_out),
        .I1(DL),
        .O(or_1));
  LUT2 #(
    .INIT(4'hE)) 
    or_2_inferred_i_1
       (.I0(DL),
        .I1(cf_send_out),
        .O(or_2));
endmodule

(* dont_touch = "true" *) 
module CF
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__9 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__10 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CF" *) (* dont_touch = "true" *) 
module CF__1
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__25 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__24 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__23 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns__1 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CF" *) (* dont_touch = "true" *) 
module CF__2
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__28 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__27 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__26 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns__2 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CF" *) (* dont_touch = "true" *) 
module CF__3
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__31 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__30 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__29 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns__3 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CF" *) (* dont_touch = "true" *) 
module CF__4
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__34 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__33 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__32 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns__4 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* dont_touch = "true" *) 
module CJ
   (Send_in,
    Ack_in,
    MR,
    G,
    Z_1,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  input G;
  input Z_1;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  wire G;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  wire Send_out;
  wire Z_1;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  LUT1 #(
    .INIT(2'h1)) 
    Send_out_INST_0
       (.I0(LD_out),
        .O(Send_out));
  (* DONT_TOUCH *) 
  Delay_4ns__1 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__2 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__3 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__4 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    nand3_out_inferred_i_1
       (.I0(Z_1),
        .I1(Send_in),
        .I2(Ack_in),
        .I3(LA_out),
        .I4(G),
        .I5(LC_out),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CJ" *) (* dont_touch = "true" *) 
module CJ__1
   (Send_in,
    Ack_in,
    MR,
    G,
    Z_1,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  input G;
  input Z_1;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  wire G;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  wire Send_out;
  wire Z_1;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  LUT1 #(
    .INIT(2'h1)) 
    Send_out_INST_0
       (.I0(LD_out),
        .O(Send_out));
  (* DONT_TOUCH *) 
  Delay_4ns__38 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__37 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__36 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__35 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    nand3_out_inferred_i_1
       (.I0(Z_1),
        .I1(Send_in),
        .I2(Ack_in),
        .I3(LA_out),
        .I4(G),
        .I5(LC_out),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* dont_touch = "true" *) 
module CM
   (Send_in_a,
    Send_in_b,
    Ack_in,
    MR,
    Ack_out_a,
    Ack_out_b,
    Send_out,
    CP_a,
    CP_b,
    AEB);
  input Send_in_a;
  input Send_in_b;
  input Ack_in;
  input MR;
  output Ack_out_a;
  output Ack_out_b;
  output Send_out;
  output CP_a;
  output CP_b;
  output AEB;

  wire Ack_in;
  wire MR;
  wire Send_in_a;
  wire Send_in_b;
  (* DONT_TOUCH *) wire ack_out_a;
  (* DONT_TOUCH *) wire ack_out_b;
  wire cj_a_i_1_n_0;
  wire cj_b_i_1_n_0;
  (* DONT_TOUCH *) wire cp_a;
  (* DONT_TOUCH *) wire cp_b;
  (* DONT_TOUCH *) wire ga;
  (* DONT_TOUCH *) wire gb;
  (* DONT_TOUCH *) wire nor1;
  (* DONT_TOUCH *) wire nor2;
  (* DONT_TOUCH *) wire nor3;
  (* DONT_TOUCH *) wire send_in_b;
  (* DONT_TOUCH *) wire send_out_a;
  wire send_out_b;

  assign AEB = nor2;
  assign Ack_out_a = ack_out_a;
  assign Ack_out_b = ack_out_b;
  assign CP_a = cp_a;
  assign CP_b = cp_b;
  assign Send_out = nor1;
  (* DONT_TOUCH *) 
  ARB arb
       (.ARB_Ack_out_a(ack_out_a),
        .ARB_Ack_out_b(ack_out_b),
        .ARB_Ga(ga),
        .ARB_Gb(gb),
        .ARB_Send_in_a(Send_in_a),
        .ARB_Send_in_b(Send_in_b),
        .ARB_Za(cj_b_i_1_n_0),
        .ARB_Zb(cj_a_i_1_n_0),
        .MR(MR));
  (* DONT_TOUCH *) 
  CJ__1 cj_a
       (.Ack_in(Ack_in),
        .Ack_out(ack_out_a),
        .CP(cp_a),
        .G(ga),
        .MR(MR),
        .Send_in(Send_in_a),
        .Send_out(send_out_a),
        .Z_1(cj_a_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    cj_a_i_1
       (.I0(cp_b),
        .O(cj_a_i_1_n_0));
  (* DONT_TOUCH *) 
  CJ cj_b
       (.Ack_in(Ack_in),
        .Ack_out(ack_out_b),
        .CP(cp_b),
        .G(gb),
        .MR(MR),
        .Send_in(Send_in_b),
        .Send_out(send_out_b),
        .Z_1(cj_b_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    cj_b_i_1
       (.I0(cp_a),
        .O(cj_b_i_1_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(send_in_b));
  LUT2 #(
    .INIT(4'h1)) 
    nor1_inferred_i_1
       (.I0(send_out_a),
        .I1(send_out_b),
        .O(nor1));
  LUT2 #(
    .INIT(4'h1)) 
    nor2_inferred_i_1
       (.I0(cp_a),
        .I1(nor3),
        .O(nor2));
  LUT3 #(
    .INIT(8'h01)) 
    nor3_inferred_i_1
       (.I0(cp_b),
        .I1(nor2),
        .I2(MR),
        .O(nor3));
endmodule

(* CHECK_LICENSE_TYPE = "CMEM,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module CMEM
   (clka,
    addra,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [15:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [15:0]douta;
  wire NLW_U0_clkb_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_ena_UNCONNECTED;
  wire NLW_U0_enb_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [4:0]NLW_U0_addrb_UNCONNECTED;
  wire [15:0]NLW_U0_dina_UNCONNECTED;
  wire [15:0]NLW_U0_dinb_UNCONNECTED;
  wire [15:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [15:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [15:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_wea_UNCONNECTED;
  wire [0:0]NLW_U0_web_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.7096 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "CMEM.mem" *) 
  (* C_INIT_FILE_NAME = "CMEM.mif" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "1" *) 
  (* C_MEM_TYPE = "3" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "16" *) 
  (* C_READ_WIDTH_B = "16" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "16" *) 
  (* C_WRITE_WIDTH_B = "16" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  CMEM_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb(NLW_U0_addrb_UNCONNECTED[4:0]),
        .clka(clka),
        .clkb(NLW_U0_clkb_UNCONNECTED),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(NLW_U0_dina_UNCONNECTED[15:0]),
        .dinb(NLW_U0_dinb_UNCONNECTED[15:0]),
        .douta(douta),
        .doutb(NLW_U0_doutb_UNCONNECTED[15:0]),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(NLW_U0_ena_UNCONNECTED),
        .enb(NLW_U0_enb_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[15:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[15:0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(NLW_U0_wea_UNCONNECTED[0]),
        .web(NLW_U0_web_UNCONNECTED[0]));
endmodule

(* dont_touch = "true" *) 
module COPY_Stage
   (Send_in,
    Ack_in,
    MR,
    PACKET_IN,
    Send_out,
    Ack_out,
    PACKET_OUT);
  input Send_in;
  input Ack_in;
  input MR;
  input [39:0]PACKET_IN;
  output Send_out;
  output Ack_out;
  output [37:0]PACKET_OUT;

  (* DONT_TOUCH *) wire [6:0]ADDER;
  wire ADDER_inferred_i_8_n_0;
  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire [39:0]DL;
  (* DONT_TOUCH *) wire EXB;
  (* DONT_TOUCH *) wire FEB;
  wire MR;
  wire [39:0]PACKET_IN;
  wire Send_in;
  wire Send_out;
  (* DONT_TOUCH *) wire [6:0]dest;
  (* DONT_TOUCH *) wire [6:0]mux1;
  (* DONT_TOUCH *) wire mux2;

  assign PACKET_OUT[37:27] = DL[39:29];
  assign PACKET_OUT[26:20] = mux1;
  assign PACKET_OUT[19] = mux2;
  assign PACKET_OUT[18] = DL[19];
  assign PACKET_OUT[17:0] = DL[17:0];
  LUT3 #(
    .INIT(8'h78)) 
    ADDER_inferred_i_1
       (.I0(ADDER_inferred_i_8_n_0),
        .I1(dest[5]),
        .I2(dest[6]),
        .O(ADDER[6]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    ADDER_inferred_i_2
       (.I0(dest[3]),
        .I1(dest[1]),
        .I2(dest[0]),
        .I3(dest[2]),
        .I4(dest[4]),
        .I5(dest[5]),
        .O(ADDER[5]));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    ADDER_inferred_i_3
       (.I0(dest[2]),
        .I1(dest[0]),
        .I2(dest[1]),
        .I3(dest[3]),
        .I4(dest[4]),
        .O(ADDER[4]));
  LUT4 #(
    .INIT(16'h7F80)) 
    ADDER_inferred_i_4
       (.I0(dest[1]),
        .I1(dest[0]),
        .I2(dest[2]),
        .I3(dest[3]),
        .O(ADDER[3]));
  LUT3 #(
    .INIT(8'h78)) 
    ADDER_inferred_i_5
       (.I0(dest[0]),
        .I1(dest[1]),
        .I2(dest[2]),
        .O(ADDER[2]));
  LUT2 #(
    .INIT(4'h6)) 
    ADDER_inferred_i_6
       (.I0(dest[0]),
        .I1(dest[1]),
        .O(ADDER[1]));
  LUT1 #(
    .INIT(2'h1)) 
    ADDER_inferred_i_7
       (.I0(dest[0]),
        .O(ADDER[0]));
  LUT5 #(
    .INIT(32'h80000000)) 
    ADDER_inferred_i_8
       (.I0(dest[4]),
        .I1(dest[2]),
        .I2(dest[0]),
        .I3(dest[1]),
        .I4(dest[3]),
        .O(ADDER_inferred_i_8_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst
       (.I0(DL[28]),
        .O(dest[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__0
       (.I0(DL[27]),
        .O(dest[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__1
       (.I0(DL[26]),
        .O(dest[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__2
       (.I0(DL[25]),
        .O(dest[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__3
       (.I0(DL[24]),
        .O(dest[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__4
       (.I0(DL[23]),
        .O(dest[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__5
       (.I0(DL[22]),
        .O(dest[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[38] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[38]),
        .Q(DL[38]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[39] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[39]),
        .Q(DL[39]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  (* GROUND = "1'b0" *) 
  CX2 cx2
       (.Ack_in(Ack_in),
        .Ack_out(Ack_out),
        .CP(CP),
        .CPY(PACKET_IN[18]),
        .EXB(EXB),
        .FEB(FEB),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(Send_out));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(EXB));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_1
       (.I0(ADDER[6]),
        .I1(dest[6]),
        .I2(FEB),
        .O(mux1[6]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_2
       (.I0(ADDER[5]),
        .I1(dest[5]),
        .I2(FEB),
        .O(mux1[5]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_3
       (.I0(ADDER[4]),
        .I1(dest[4]),
        .I2(FEB),
        .O(mux1[4]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_4
       (.I0(ADDER[3]),
        .I1(dest[3]),
        .I2(FEB),
        .O(mux1[3]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_5
       (.I0(ADDER[2]),
        .I1(dest[2]),
        .I2(FEB),
        .O(mux1[2]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_6
       (.I0(ADDER[1]),
        .I1(dest[1]),
        .I2(FEB),
        .O(mux1[1]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_7
       (.I0(ADDER[0]),
        .I1(dest[0]),
        .I2(FEB),
        .O(mux1[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    mux2_inferred_i_1
       (.I0(DL[20]),
        .I1(FEB),
        .I2(DL[21]),
        .O(mux2));
endmodule

(* GROUND = "1'b0" *) (* dont_touch = "true" *) 
module CX2
   (Send_in,
    Ack_in,
    CPY,
    EXB,
    MR,
    Ack_out,
    Send_out,
    CP,
    FEB);
  input Send_in;
  input Ack_in;
  input CPY;
  input EXB;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;
  output FEB;

  wire Ack_in;
  wire CPY;
  (* DONT_TOUCH *) wire DL1S;
  wire DL1S_i_1_n_0;
  wire DL1S_i_2_n_0;
  wire DL1S_reg_C_n_0;
  wire DL1S_reg_LDC_n_0;
  wire DL1S_reg_P_n_0;
  (* DONT_TOUCH *) wire DL_cpy;
  (* DONT_TOUCH *) wire DL_exb;
  wire EXB;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire and1_out;
  (* DONT_TOUCH *) wire and2_out;
  (* DONT_TOUCH *) wire cf1_ack_out;
  (* DONT_TOUCH *) wire cf1_cp;
  (* DONT_TOUCH *) wire cf1_send_out;
  (* DONT_TOUCH *) wire cf2_ack_out;
  (* DONT_TOUCH *) wire cf2_cp;
  (* DONT_TOUCH *) wire cf2_send_out;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nor1_out;
  (* DONT_TOUCH *) wire nor2_out;
  (* DONT_TOUCH *) wire or1_out;
  (* DONT_TOUCH *) wire or2_out;
  wire NLW_DL1S_reg_Q_UNCONNECTED;

  assign Ack_out = cf1_ack_out;
  assign CP = cf1_cp;
  assign FEB = nor2_out;
  assign Send_out = and1_out;
  LUT2 #(
    .INIT(4'h8)) 
    DL1S_i_1
       (.I0(cf2_cp),
        .I1(DL1S),
        .O(DL1S_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    DL1S_i_2
       (.I0(or2_out),
        .O(DL1S_i_2_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    DL1S_inferred_i_1
       (.I0(DL1S_reg_P_n_0),
        .I1(DL1S_reg_LDC_n_0),
        .I2(DL1S_reg_C_n_0),
        .O(DL1S));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* IS_C_INVERTED = "1'b1" *) 
  (* KEEP = "yes" *) 
  (* XILINX_LEGACY_PRIM = "FDCP_1" *) 
  FDCP_UNIQ_BASE_ DL1S_reg
       (.C(cf2_cp),
        .CLR(MR),
        .D(DL1S_i_1_n_0),
        .PRE(DL1S_i_2_n_0),
        .Q(NLW_DL1S_reg_Q_UNCONNECTED));
  (* XILINX_LEGACY_PRIM = "FDC_1" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    DL1S_reg_C
       (.C(cf2_cp),
        .CE(1'b1),
        .CLR(MR),
        .D(DL1S_i_1_n_0),
        .Q(DL1S_reg_C_n_0));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    DL1S_reg_LDC
       (.CLR(MR),
        .D(1'b1),
        .G(DL1S_i_2_n_0),
        .GE(1'b1),
        .Q(DL1S_reg_LDC_n_0));
  (* XILINX_LEGACY_PRIM = "FDP_1" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b1)) 
    DL1S_reg_P
       (.C(cf2_cp),
        .CE(1'b1),
        .D(DL1S_i_1_n_0),
        .PRE(DL1S_i_2_n_0),
        .Q(DL1S_reg_P_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    DL_cpy_reg
       (.C(cf1_cp),
        .CE(1'b1),
        .CLR(MR),
        .D(CPY),
        .Q(DL_cpy));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    DL_exb_reg
       (.C(cf1_cp),
        .CE(1'b1),
        .D(EXB),
        .PRE(MR),
        .Q(DL_exb));
  LUT2 #(
    .INIT(4'h8)) 
    and1_out_inferred_i_1
       (.I0(nand2_out),
        .I1(cf2_send_out),
        .O(and1_out));
  LUT3 #(
    .INIT(8'h20)) 
    and2_out_inferred_i_1
       (.I0(or1_out),
        .I1(DL1S),
        .I2(Ack_in),
        .O(and2_out));
  (* DONT_TOUCH *) 
  CF__2 cf1
       (.Ack_in(and2_out),
        .Ack_out(cf1_ack_out),
        .CP(cf1_cp),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(cf1_send_out));
  (* DONT_TOUCH *) 
  CF__3 cf2
       (.Ack_in(Ack_in),
        .Ack_out(cf2_ack_out),
        .CP(cf2_cp),
        .MR(MR),
        .Send_in(nand1_out),
        .Send_out(cf2_send_out));
  LUT3 #(
    .INIT(8'hBF)) 
    nand1_out_inferred_i_1
       (.I0(cf1_send_out),
        .I1(DL_exb),
        .I2(DL_cpy),
        .O(nand1_out));
  LUT2 #(
    .INIT(4'hB)) 
    nand2_out_inferred_i_1
       (.I0(cf1_send_out),
        .I1(DL_exb),
        .O(nand2_out));
  LUT2 #(
    .INIT(4'h1)) 
    nor1_out_inferred_i_1
       (.I0(cf2_cp),
        .I1(nor2_out),
        .O(nor1_out));
  LUT2 #(
    .INIT(4'h1)) 
    nor2_out_inferred_i_1
       (.I0(cf1_cp),
        .I1(nor1_out),
        .O(nor2_out));
  LUT2 #(
    .INIT(4'hE)) 
    or1_out_inferred_i_1
       (.I0(DL_exb),
        .I1(cf1_send_out),
        .O(or1_out));
  LUT2 #(
    .INIT(4'hE)) 
    or2_out_inferred_i_1
       (.I0(cf2_ack_out),
        .I1(Ack_in),
        .O(or2_out));
endmodule

(* ORIG_REF_NAME = "C" *) (* dont_touch = "true" *) 
module C__1
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__14 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__13 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__12 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__11 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "C" *) (* dont_touch = "true" *) 
module C__2
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__18 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__17 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__16 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__15 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "C" *) (* dont_touch = "true" *) 
module C__3
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__22 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__21 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__20 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__19 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* CHECK_LICENSE_TYPE = "DMEM,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module DMEM
   (clka,
    wea,
    addra,
    dina,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [15:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [15:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [15:0]dina;
  wire [15:0]douta;
  wire [0:0]wea;
  wire NLW_U0_clkb_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_ena_UNCONNECTED;
  wire NLW_U0_enb_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [4:0]NLW_U0_addrb_UNCONNECTED;
  wire [15:0]NLW_U0_dinb_UNCONNECTED;
  wire [15:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [15:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [15:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_web_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.87285 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "DMEM.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "0" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "16" *) 
  (* C_READ_WIDTH_B = "16" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "16" *) 
  (* C_WRITE_WIDTH_B = "16" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  DMEM_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb(NLW_U0_addrb_UNCONNECTED[4:0]),
        .clka(clka),
        .clkb(NLW_U0_clkb_UNCONNECTED),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(dina),
        .dinb(NLW_U0_dinb_UNCONNECTED[15:0]),
        .douta(douta),
        .doutb(NLW_U0_doutb_UNCONNECTED[15:0]),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(NLW_U0_ena_UNCONNECTED),
        .enb(NLW_U0_enb_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[15:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[15:0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(wea),
        .web(NLW_U0_web_UNCONNECTED[0]));
endmodule

(* dont_touch = "true" *) 
module Delay_2ns
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__1
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__2
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__3
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__4
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
endmodule

(* dont_touch = "true" *) 
module Delay_4ns
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__1
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__10
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__11
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__12
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__13
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__14
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__15
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__16
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__17
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__18
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__19
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__2
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__20
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__21
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__22
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__23
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__24
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__25
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__26
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__27
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__28
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__29
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__3
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__30
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__31
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__32
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__33
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__34
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__35
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__36
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__37
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__38
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__4
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__5
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__6
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__7
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__8
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__9
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* dont_touch = "true" *) 
module ENTRY_FD
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD190 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD191 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD192 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD193 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD194 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD195 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD196 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD197 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD198 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD199 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD200 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD201 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD202 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD203 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD204 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD205 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD206 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD207 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD208 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__1
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_UNIQ_BASE_ \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD1 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD2 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD3 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD4 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD5 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD6 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD7 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD8 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD9 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD10 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD11 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD12 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD13 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD14 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD15 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD16 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD17 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD18 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__10
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD361 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD362 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD363 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD364 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD365 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD366 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD367 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD368 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD369 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD370 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD371 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD372 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD373 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD374 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD375 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD376 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD377 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD378 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD379 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__11
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD19 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD20 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD21 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD22 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD23 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD24 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD25 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD26 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD27 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD28 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD29 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD30 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD31 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD32 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD33 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD34 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD35 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD36 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD37 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__12
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD38 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD39 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD40 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD41 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD42 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD43 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD44 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD45 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD46 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD47 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD48 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD49 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD50 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD51 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD52 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD53 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD54 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD55 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD56 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__13
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD57 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD58 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD59 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD60 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD61 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD62 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD63 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD64 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD65 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD66 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD67 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD68 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD69 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD70 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD71 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD72 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD73 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD74 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD75 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__14
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD76 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD77 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD78 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD79 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD80 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD81 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD82 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD83 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD84 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD85 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD86 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD87 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD88 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD89 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD90 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD91 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD92 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD93 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD94 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__15
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD95 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD96 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD97 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD98 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD99 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD100 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD101 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD102 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD103 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD104 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD105 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD106 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD107 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD108 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD109 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD110 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD111 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD112 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD113 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__16
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD114 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD115 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD116 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD117 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD118 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD119 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD120 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD121 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD122 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD123 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD124 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD125 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD126 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD127 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD128 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD129 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD130 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD131 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD132 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__17
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD133 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD134 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD135 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD136 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD137 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD138 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD139 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD140 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD141 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD142 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD143 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD144 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD145 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD146 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD147 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD148 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD149 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD150 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD151 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__18
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD152 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD153 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD154 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD155 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD156 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD157 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD158 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD159 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD160 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD161 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD162 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD163 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD164 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD165 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD166 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD167 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD168 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD169 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD170 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__19
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD171 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD172 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD173 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD174 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD175 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD176 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD177 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD178 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD179 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD180 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD181 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD182 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD183 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD184 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD185 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD186 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD187 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD188 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD189 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__2
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD209 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD210 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD211 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD212 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD213 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD214 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD215 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD216 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD217 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD218 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD219 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD220 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD221 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD222 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD223 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD224 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD225 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD226 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD227 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__3
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD228 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD229 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD230 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD231 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD232 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD233 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD234 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD235 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD236 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD237 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD238 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD239 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD240 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD241 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD242 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD243 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD244 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD245 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD246 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__4
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD247 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD248 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD249 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD250 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD251 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD252 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD253 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD254 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD255 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD256 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD257 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD258 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD259 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD260 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD261 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD262 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD263 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD264 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD265 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__5
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD266 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD267 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD268 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD269 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD270 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD271 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD272 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD273 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD274 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD275 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD276 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD277 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD278 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD279 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD280 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD281 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD282 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD283 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD284 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__6
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD285 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD286 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD287 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD288 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD289 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD290 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD291 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD292 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD293 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD294 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD295 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD296 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD297 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD298 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD299 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD300 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD301 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD302 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD303 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__7
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD304 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD305 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD306 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD307 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD308 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD309 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD310 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD311 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD312 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD313 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD314 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD315 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD316 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD317 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD318 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD319 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD320 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD321 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD322 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__8
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD323 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD324 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD325 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD326 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD327 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD328 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD329 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD330 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD331 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD332 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD333 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD334 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD335 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD336 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD337 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD338 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD339 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD340 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD341 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__9
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:0]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [2:0]NLW_FIRE_INST_0_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD342 \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD343 \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD344 \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD345 \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD346 \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD347 \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD348 \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD349 \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD350 \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD351 \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD352 \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD353 \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD354 \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD355 \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD356 \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD357 \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD358 \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD359 \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* INIT = "1'b0" *) 
  (* KEEP = "yes" *) 
  FDCPE_HD360 \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,NLW_FIRE_INST_0_i_2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* dont_touch = "true" *) 
module FP_Stage
   (PACKET_IN,
    DEL,
    Send_in,
    Ack_in,
    MR,
    Send_out,
    Ack_out,
    WRITE_DATA,
    PACKET_OUT,
    WRITE_EN,
    LOAD_FLG);
  input [61:0]PACKET_IN;
  input DEL;
  input Send_in;
  input Ack_in;
  input MR;
  output Send_out;
  output Ack_out;
  output [15:0]WRITE_DATA;
  output [39:0]PACKET_OUT;
  output WRITE_EN;
  output LOAD_FLG;

  wire ALU1__0;
  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire BR;
  (* DONT_TOUCH *) wire C;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire CPY;
  wire DEL;
  (* DONT_TOUCH *) wire [61:0]DL;
  (* DONT_TOUCH *) wire [15:0]DataL;
  (* DONT_TOUCH *) wire [15:0]DataR;
  wire LOAD_FLG;
  (* DONT_TOUCH *) wire [1:0]LR2;
  wire MR;
  (* DONT_TOUCH *) wire [5:0]OPC;
  wire [61:0]PACKET_IN;
  wire [39:0]PACKET_OUT;
  wire \PACKET_OUT[0]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[0]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[0]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[0]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[0]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[10]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[10]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[10]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[10]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_4 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_5 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_6 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_7 ;
  wire \PACKET_OUT[11]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[12]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[12]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[12]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[12]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_16_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_17_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_100_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_101_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_102_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_103_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_104_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_105_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_106_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_16_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_17_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_22_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_23_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_24_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_25_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_26_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_27_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_28_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_29_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_30_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_31_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_32_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_33_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_34_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_35_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_36_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_38_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_39_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_40_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_41_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_42_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_43_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_44_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_45_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_46_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_47_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_48_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_49_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_50_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_51_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_52_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_53_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_54_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_55_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_56_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_57_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_58_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_59_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_60_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_61_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_62_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_63_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_64_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_65_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_66_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_67_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_68_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_69_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_70_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_71_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_72_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_73_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_74_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_75_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_76_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_77_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_78_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_79_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_80_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_81_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_82_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_83_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_84_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_85_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_86_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_87_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_88_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_89_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_90_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_91_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_92_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_93_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_94_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_95_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_96_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_97_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_98_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_99_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_16_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_17_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_22_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_23_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_24_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_25_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_2_n_3 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_4 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_5 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_6 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_7 ;
  wire \PACKET_OUT[17]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[20]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[21]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[23]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[24]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[25]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[26]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[27]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[28]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_4 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_5 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_6 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_7 ;
  wire \PACKET_OUT[29]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[30]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[31]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[32]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[33]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[33]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[34]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[34]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[35]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_4 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_5 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_6 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_7 ;
  wire \PACKET_OUT[36]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[37]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[38]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_5_n_5 ;
  wire \PACKET_OUT[39]_INST_0_i_5_n_6 ;
  wire \PACKET_OUT[39]_INST_0_i_5_n_7 ;
  wire \PACKET_OUT[39]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_22_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_4 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_5 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_6 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_7 ;
  wire \PACKET_OUT[3]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[4]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[4]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[4]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[4]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[5]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[5]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[5]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[5]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[6]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[6]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[6]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[6]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_4 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_5 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_6 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_7 ;
  wire \PACKET_OUT[7]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[8]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[8]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[8]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[8]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[9]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[9]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[9]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[9]_INST_0_i_4_n_0 ;
  wire Send_in;
  wire Send_out;
  wire [15:0]WRITE_DATA;
  wire \WRITE_DATA[15]_INST_0_i_1_n_0 ;
  wire \WRITE_DATA[15]_INST_0_i_2_n_0 ;
  wire \WRITE_DATA[15]_INST_0_i_3_n_0 ;
  wire WRITE_EN;
  (* DONT_TOUCH *) wire Z;
  (* DONT_TOUCH *) wire [2:0]color;
  wire [17:17]data4;
  wire [16:1]data5;
  wire [17:1]data6;
  wire [17:1]data7;
  wire [16:2]data9;
  (* DONT_TOUCH *) wire [6:0]dest;
  (* DONT_TOUCH *) wire [7:0]gen;
  wire [15:0]p_0_in__0;
  wire NLW_ALU1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_ALU1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_ALU1_OVERFLOW_UNCONNECTED;
  wire NLW_ALU1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_ALU1_PATTERNDETECT_UNCONNECTED;
  wire NLW_ALU1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_ALU1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_ALU1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_ALU1_CARRYOUT_UNCONNECTED;
  wire [47:16]NLW_ALU1_P_UNCONNECTED;
  wire [47:0]NLW_ALU1_PCOUT_UNCONNECTED;
  wire [2:0]\NLW_PACKET_OUT[11]_INST_0_i_15_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[11]_INST_0_i_4_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[11]_INST_0_i_5_CO_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[15]_INST_0_i_10_CO_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[15]_INST_0_i_4_CO_UNCONNECTED ;
  wire [3:1]\NLW_PACKET_OUT[17]_INST_0_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[17]_INST_0_i_2_O_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[17]_INST_0_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[17]_INST_0_i_3_O_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[17]_INST_0_i_4_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[17]_INST_0_i_5_CO_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[17]_INST_0_i_5_O_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[29]_INST_0_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[36]_INST_0_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[39]_INST_0_i_5_CO_UNCONNECTED ;
  wire [3:3]\NLW_PACKET_OUT[39]_INST_0_i_5_O_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[3]_INST_0_i_15_CO_UNCONNECTED ;
  wire [0:0]\NLW_PACKET_OUT[3]_INST_0_i_15_O_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[3]_INST_0_i_4_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[3]_INST_0_i_5_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[7]_INST_0_i_15_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[7]_INST_0_i_4_CO_UNCONNECTED ;
  wire [2:0]\NLW_PACKET_OUT[7]_INST_0_i_5_CO_UNCONNECTED ;

  (* METHODOLOGY_DRC_VIOS = "{SYNTH-13 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    ALU1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DataL}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_ALU1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,DataR}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_ALU1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_ALU1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_ALU1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_ALU1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_ALU1_OVERFLOW_UNCONNECTED),
        .P({NLW_ALU1_P_UNCONNECTED[47:16],data5}),
        .PATTERNBDETECT(NLW_ALU1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_ALU1_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_ALU1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_ALU1_UNDERFLOW_UNCONNECTED));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst
       (.I0(DL[61]),
        .O(color[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__0
       (.I0(DL[60]),
        .O(color[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__1
       (.I0(DL[59]),
        .O(color[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__10
       (.I0(DL[50]),
        .O(dest[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__11
       (.I0(DL[49]),
        .O(dest[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__12
       (.I0(DL[48]),
        .O(dest[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__13
       (.I0(DL[47]),
        .O(dest[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__14
       (.I0(DL[46]),
        .O(dest[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__15
       (.I0(DL[45]),
        .O(dest[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__16
       (.I0(DL[44]),
        .O(dest[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__17
       (.I0(DL[43]),
        .O(LR2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__18
       (.I0(DL[42]),
        .O(LR2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__19
       (.I0(DL[41]),
        .O(BR));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__2
       (.I0(DL[58]),
        .O(gen[7]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__20
       (.I0(DL[40]),
        .O(CPY));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__21
       (.I0(DL[39]),
        .O(OPC[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__22
       (.I0(DL[38]),
        .O(OPC[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__23
       (.I0(DL[37]),
        .O(OPC[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__24
       (.I0(DL[36]),
        .O(OPC[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__25
       (.I0(DL[35]),
        .O(OPC[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__26
       (.I0(DL[34]),
        .O(OPC[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__27
       (.I0(DL[33]),
        .O(C));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__28
       (.I0(DL[32]),
        .O(Z));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__29
       (.I0(DL[31]),
        .O(DataL[15]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__3
       (.I0(DL[57]),
        .O(gen[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__30
       (.I0(DL[30]),
        .O(DataL[14]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__31
       (.I0(DL[29]),
        .O(DataL[13]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__32
       (.I0(DL[28]),
        .O(DataL[12]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__33
       (.I0(DL[27]),
        .O(DataL[11]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__34
       (.I0(DL[26]),
        .O(DataL[10]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__35
       (.I0(DL[25]),
        .O(DataL[9]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__36
       (.I0(DL[24]),
        .O(DataL[8]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__37
       (.I0(DL[23]),
        .O(DataL[7]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__38
       (.I0(DL[22]),
        .O(DataL[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__39
       (.I0(DL[21]),
        .O(DataL[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__4
       (.I0(DL[56]),
        .O(gen[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__40
       (.I0(DL[20]),
        .O(DataL[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__41
       (.I0(DL[19]),
        .O(DataL[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__42
       (.I0(DL[18]),
        .O(DataL[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__43
       (.I0(DL[17]),
        .O(DataL[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__44
       (.I0(DL[16]),
        .O(DataL[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__45
       (.I0(DL[15]),
        .O(DataR[15]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__46
       (.I0(DL[14]),
        .O(DataR[14]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__47
       (.I0(DL[13]),
        .O(DataR[13]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__48
       (.I0(DL[12]),
        .O(DataR[12]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__49
       (.I0(DL[11]),
        .O(DataR[11]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__5
       (.I0(DL[55]),
        .O(gen[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__50
       (.I0(DL[10]),
        .O(DataR[10]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__51
       (.I0(DL[9]),
        .O(DataR[9]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__52
       (.I0(DL[8]),
        .O(DataR[8]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__53
       (.I0(DL[7]),
        .O(DataR[7]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__54
       (.I0(DL[6]),
        .O(DataR[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__55
       (.I0(DL[5]),
        .O(DataR[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__56
       (.I0(DL[4]),
        .O(DataR[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__57
       (.I0(DL[3]),
        .O(DataR[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__58
       (.I0(DL[2]),
        .O(DataR[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__59
       (.I0(DL[1]),
        .O(DataR[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__6
       (.I0(DL[54]),
        .O(gen[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__60
       (.I0(DL[0]),
        .O(DataR[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__7
       (.I0(DL[53]),
        .O(gen[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__8
       (.I0(DL[52]),
        .O(gen[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__9
       (.I0(DL[51]),
        .O(gen[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[38] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[38]),
        .Q(DL[38]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[39] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[39]),
        .Q(DL[39]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[40] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[40]),
        .Q(DL[40]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[41] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[41]),
        .Q(DL[41]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[42] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[42]),
        .Q(DL[42]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[43] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[43]),
        .Q(DL[43]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[44] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[44]),
        .Q(DL[44]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[45] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[45]),
        .Q(DL[45]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[46] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[46]),
        .Q(DL[46]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[47] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[47]),
        .Q(DL[47]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[48] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[48]),
        .Q(DL[48]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[49] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[49]),
        .Q(DL[49]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[50] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[50]),
        .Q(DL[50]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[51] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[51]),
        .Q(DL[51]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[52] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[52]),
        .Q(DL[52]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[53] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[53]),
        .Q(DL[53]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[54] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[54]),
        .Q(DL[54]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[55] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[55]),
        .Q(DL[55]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[56] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[56]),
        .Q(DL[56]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[57] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[57]),
        .Q(DL[57]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[58] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[58]),
        .Q(DL[58]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[59] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[59]),
        .Q(DL[59]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[60] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[60]),
        .Q(DL[60]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[61] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[61]),
        .Q(DL[61]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[9]),
        .Q(DL[9]));
  LUT6 #(
    .INIT(64'h0A0000000A010200)) 
    LOAD_FLG_INST_0
       (.I0(OPC[4]),
        .I1(OPC[1]),
        .I2(OPC[0]),
        .I3(OPC[2]),
        .I4(OPC[5]),
        .I5(OPC[3]),
        .O(LOAD_FLG));
  MUXF7 \PACKET_OUT[0]_INST_0 
       (.I0(\PACKET_OUT[0]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[0]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[0]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[0]_INST_0_i_1 
       (.I0(\PACKET_OUT[0]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_7 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[0]),
        .O(\PACKET_OUT[0]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF40FD5DBF40A808)) 
    \PACKET_OUT[0]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I1(DataR[0]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[0]),
        .I4(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I5(\PACKET_OUT[0]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[0]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[0]_INST_0_i_3 
       (.I0(data5[1]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[0]),
        .I4(DataR[0]),
        .O(\PACKET_OUT[0]_INST_0_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[0]_INST_0_i_4 
       (.I0(data7[1]),
        .I1(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I2(data6[1]),
        .O(\PACKET_OUT[0]_INST_0_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \PACKET_OUT[0]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[0]_INST_0_i_7_n_0 ),
        .I2(DataR[1]),
        .I3(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I4(DataR[0]),
        .I5(\PACKET_OUT[1]_INST_0_i_7_n_0 ),
        .O(data7[1]));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \PACKET_OUT[0]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(DataR[0]),
        .I2(DataR[2]),
        .I3(DataL[0]),
        .I4(DataR[3]),
        .I5(DataR[1]),
        .O(data6[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[0]_INST_0_i_7 
       (.I0(DataL[12]),
        .I1(DataL[4]),
        .I2(DataR[2]),
        .I3(DataL[8]),
        .I4(DataR[3]),
        .I5(DataL[0]),
        .O(\PACKET_OUT[0]_INST_0_i_7_n_0 ));
  MUXF7 \PACKET_OUT[10]_INST_0 
       (.I0(\PACKET_OUT[10]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[10]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[10]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[10]_INST_0_i_1 
       (.I0(\PACKET_OUT[10]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_5 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[10]),
        .O(\PACKET_OUT[10]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[10]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[10]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[10]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[10]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[10]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[10]_INST_0_i_3 
       (.I0(data5[11]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[10]),
        .I4(DataR[10]),
        .O(\PACKET_OUT[10]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[10]_INST_0_i_4 
       (.I0(data9[11]),
        .I1(DataL[10]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[11]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[11]),
        .O(\PACKET_OUT[10]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[10]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_52_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_54_n_0 ),
        .O(data7[11]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[10]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_69_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_68_n_0 ),
        .O(data6[11]));
  MUXF7 \PACKET_OUT[11]_INST_0 
       (.I0(\PACKET_OUT[11]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[11]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[11]_INST_0_i_1 
       (.I0(\PACKET_OUT[11]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_4 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[11]),
        .O(\PACKET_OUT[11]_INST_0_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_10 
       (.I0(DataR[8]),
        .I1(DataL[8]),
        .O(\PACKET_OUT[11]_INST_0_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[11]_INST_0_i_11 
       (.I0(DataL[11]),
        .I1(DataR[11]),
        .O(\PACKET_OUT[11]_INST_0_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[11]_INST_0_i_12 
       (.I0(DataL[10]),
        .I1(DataR[10]),
        .O(\PACKET_OUT[11]_INST_0_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[11]_INST_0_i_13 
       (.I0(DataL[9]),
        .I1(DataR[9]),
        .O(\PACKET_OUT[11]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[11]_INST_0_i_14 
       (.I0(DataL[8]),
        .I1(DataR[8]),
        .O(\PACKET_OUT[11]_INST_0_i_14_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[11]_INST_0_i_15 
       (.CI(\PACKET_OUT[7]_INST_0_i_15_n_0 ),
        .CO({\PACKET_OUT[11]_INST_0_i_15_n_0 ,\NLW_PACKET_OUT[11]_INST_0_i_15_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[11:8]),
        .O(data9[12:9]),
        .S({\PACKET_OUT[11]_INST_0_i_18_n_0 ,\PACKET_OUT[11]_INST_0_i_19_n_0 ,\PACKET_OUT[11]_INST_0_i_20_n_0 ,\PACKET_OUT[11]_INST_0_i_21_n_0 }));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[11]_INST_0_i_16 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_54_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_49_n_0 ),
        .O(data7[12]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[11]_INST_0_i_17 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_70_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_69_n_0 ),
        .O(data6[12]));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_18 
       (.I0(DataR[11]),
        .I1(DataL[11]),
        .O(\PACKET_OUT[11]_INST_0_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_19 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .O(\PACKET_OUT[11]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[11]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[11]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[11]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[11]_INST_0_i_6_n_0 ),
        .O(\PACKET_OUT[11]_INST_0_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_20 
       (.I0(DataR[9]),
        .I1(DataL[9]),
        .O(\PACKET_OUT[11]_INST_0_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_21 
       (.I0(DataR[8]),
        .I1(DataL[8]),
        .O(\PACKET_OUT[11]_INST_0_i_21_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[11]_INST_0_i_3 
       (.I0(data5[12]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[11]),
        .I4(DataR[11]),
        .O(\PACKET_OUT[11]_INST_0_i_3_n_0 ));
  CARRY4 \PACKET_OUT[11]_INST_0_i_4 
       (.CI(\PACKET_OUT[7]_INST_0_i_4_n_0 ),
        .CO({\PACKET_OUT[11]_INST_0_i_4_n_0 ,\NLW_PACKET_OUT[11]_INST_0_i_4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[11:8]),
        .O({\PACKET_OUT[11]_INST_0_i_4_n_4 ,\PACKET_OUT[11]_INST_0_i_4_n_5 ,\PACKET_OUT[11]_INST_0_i_4_n_6 ,\PACKET_OUT[11]_INST_0_i_4_n_7 }),
        .S({\PACKET_OUT[11]_INST_0_i_7_n_0 ,\PACKET_OUT[11]_INST_0_i_8_n_0 ,\PACKET_OUT[11]_INST_0_i_9_n_0 ,\PACKET_OUT[11]_INST_0_i_10_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[11]_INST_0_i_5 
       (.CI(\PACKET_OUT[7]_INST_0_i_5_n_0 ),
        .CO({\PACKET_OUT[11]_INST_0_i_5_n_0 ,\NLW_PACKET_OUT[11]_INST_0_i_5_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[11:8]),
        .O(p_0_in__0[11:8]),
        .S({\PACKET_OUT[11]_INST_0_i_11_n_0 ,\PACKET_OUT[11]_INST_0_i_12_n_0 ,\PACKET_OUT[11]_INST_0_i_13_n_0 ,\PACKET_OUT[11]_INST_0_i_14_n_0 }));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[11]_INST_0_i_6 
       (.I0(data9[12]),
        .I1(DataL[11]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[12]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[12]),
        .O(\PACKET_OUT[11]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_7 
       (.I0(DataR[11]),
        .I1(DataL[11]),
        .O(\PACKET_OUT[11]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_8 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .O(\PACKET_OUT[11]_INST_0_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_9 
       (.I0(DataR[9]),
        .I1(DataL[9]),
        .O(\PACKET_OUT[11]_INST_0_i_9_n_0 ));
  MUXF7 \PACKET_OUT[12]_INST_0 
       (.I0(\PACKET_OUT[12]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[12]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[12]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[12]_INST_0_i_1 
       (.I0(\PACKET_OUT[12]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_7 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[12]),
        .O(\PACKET_OUT[12]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[12]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[12]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[12]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[12]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[12]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[12]_INST_0_i_3 
       (.I0(data5[13]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[12]),
        .I4(DataR[12]),
        .O(\PACKET_OUT[12]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[12]_INST_0_i_4 
       (.I0(data9[13]),
        .I1(DataL[12]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[13]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[13]),
        .O(\PACKET_OUT[12]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[12]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_49_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_48_n_0 ),
        .O(data7[13]));
  LUT6 #(
    .INIT(64'hFF00B8000000B800)) 
    \PACKET_OUT[12]_INST_0_i_6 
       (.I0(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I4(DataR[0]),
        .I5(\PACKET_OUT[16]_INST_0_i_70_n_0 ),
        .O(data6[13]));
  MUXF7 \PACKET_OUT[13]_INST_0 
       (.I0(\PACKET_OUT[13]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[13]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[13]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[13]_INST_0_i_1 
       (.I0(\PACKET_OUT[13]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_6 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[13]),
        .O(\PACKET_OUT[13]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[13]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[13]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[13]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[13]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[13]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[13]_INST_0_i_3 
       (.I0(data5[14]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[13]),
        .I4(DataR[13]),
        .O(\PACKET_OUT[13]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[13]_INST_0_i_4 
       (.I0(data9[14]),
        .I1(DataL[13]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[14]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[14]),
        .O(\PACKET_OUT[13]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[13]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_48_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_51_n_0 ),
        .O(data7[14]));
  LUT6 #(
    .INIT(64'hB800B800FF000000)) 
    \PACKET_OUT[13]_INST_0_i_6 
       (.I0(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I4(\PACKET_OUT[14]_INST_0_i_8_n_0 ),
        .I5(DataR[0]),
        .O(data6[14]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[13]_INST_0_i_7 
       (.I0(DataL[6]),
        .I1(DataR[2]),
        .I2(DataL[2]),
        .I3(DataR[3]),
        .I4(DataL[10]),
        .O(\PACKET_OUT[13]_INST_0_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[13]_INST_0_i_8 
       (.I0(DataL[0]),
        .I1(DataL[8]),
        .I2(DataR[2]),
        .I3(DataL[4]),
        .I4(DataR[3]),
        .I5(DataL[12]),
        .O(\PACKET_OUT[13]_INST_0_i_8_n_0 ));
  MUXF7 \PACKET_OUT[14]_INST_0 
       (.I0(\PACKET_OUT[14]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[14]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[14]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[14]_INST_0_i_1 
       (.I0(\PACKET_OUT[14]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_5 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[14]),
        .O(\PACKET_OUT[14]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[14]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[14]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[14]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[14]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[14]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[14]_INST_0_i_3 
       (.I0(data5[15]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[14]),
        .I4(DataR[14]),
        .O(\PACKET_OUT[14]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[14]_INST_0_i_4 
       (.I0(data9[15]),
        .I1(DataL[14]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[15]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[15]),
        .O(\PACKET_OUT[14]_INST_0_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \PACKET_OUT[14]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[14]_INST_0_i_7_n_0 ),
        .O(data7[15]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[14]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[15]_INST_0_i_19_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[14]_INST_0_i_8_n_0 ),
        .O(data6[15]));
  LUT6 #(
    .INIT(64'h0000000000000B08)) 
    \PACKET_OUT[14]_INST_0_i_7 
       (.I0(DataL[15]),
        .I1(DataR[0]),
        .I2(DataR[2]),
        .I3(DataL[14]),
        .I4(DataR[3]),
        .I5(DataR[1]),
        .O(\PACKET_OUT[14]_INST_0_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[14]_INST_0_i_8 
       (.I0(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .O(\PACKET_OUT[14]_INST_0_i_8_n_0 ));
  MUXF7 \PACKET_OUT[15]_INST_0 
       (.I0(\PACKET_OUT[15]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[15]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[15]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[15]_INST_0_i_1 
       (.I0(\PACKET_OUT[15]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_4 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[15]),
        .O(\PACKET_OUT[15]_INST_0_i_1_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[15]_INST_0_i_10 
       (.CI(\PACKET_OUT[11]_INST_0_i_15_n_0 ),
        .CO(\NLW_PACKET_OUT[15]_INST_0_i_10_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,DataL[14:12]}),
        .O(data9[16:13]),
        .S({\PACKET_OUT[15]_INST_0_i_13_n_0 ,\PACKET_OUT[15]_INST_0_i_14_n_0 ,\PACKET_OUT[15]_INST_0_i_15_n_0 ,\PACKET_OUT[15]_INST_0_i_16_n_0 }));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \PACKET_OUT[15]_INST_0_i_11 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(DataR[0]),
        .I2(DataR[2]),
        .I3(DataL[15]),
        .I4(DataR[3]),
        .I5(DataR[1]),
        .O(data7[16]));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \PACKET_OUT[15]_INST_0_i_12 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[15]_INST_0_i_17_n_0 ),
        .I2(DataR[1]),
        .I3(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .I4(DataR[0]),
        .I5(\PACKET_OUT[15]_INST_0_i_19_n_0 ),
        .O(data6[16]));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[15]_INST_0_i_13 
       (.I0(DataR[15]),
        .I1(DataL[15]),
        .O(\PACKET_OUT[15]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[15]_INST_0_i_14 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .O(\PACKET_OUT[15]_INST_0_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[15]_INST_0_i_15 
       (.I0(DataR[13]),
        .I1(DataL[13]),
        .O(\PACKET_OUT[15]_INST_0_i_15_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[15]_INST_0_i_16 
       (.I0(DataR[12]),
        .I1(DataL[12]),
        .O(\PACKET_OUT[15]_INST_0_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[15]_INST_0_i_17 
       (.I0(DataL[3]),
        .I1(DataL[11]),
        .I2(DataR[2]),
        .I3(DataL[7]),
        .I4(DataR[3]),
        .I5(DataL[15]),
        .O(\PACKET_OUT[15]_INST_0_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[15]_INST_0_i_18 
       (.I0(DataL[1]),
        .I1(DataL[9]),
        .I2(DataR[2]),
        .I3(DataL[5]),
        .I4(DataR[3]),
        .I5(DataL[13]),
        .O(\PACKET_OUT[15]_INST_0_i_18_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[15]_INST_0_i_19 
       (.I0(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_97_n_0 ),
        .O(\PACKET_OUT[15]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[15]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[15]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[15]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[15]_INST_0_i_5_n_0 ),
        .O(\PACKET_OUT[15]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[15]_INST_0_i_3 
       (.I0(data5[16]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[15]),
        .I4(DataR[15]),
        .O(\PACKET_OUT[15]_INST_0_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[15]_INST_0_i_4 
       (.CI(\PACKET_OUT[11]_INST_0_i_5_n_0 ),
        .CO(\NLW_PACKET_OUT[15]_INST_0_i_4_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,DataL[14:12]}),
        .O(p_0_in__0[15:12]),
        .S({\PACKET_OUT[15]_INST_0_i_6_n_0 ,\PACKET_OUT[15]_INST_0_i_7_n_0 ,\PACKET_OUT[15]_INST_0_i_8_n_0 ,\PACKET_OUT[15]_INST_0_i_9_n_0 }));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[15]_INST_0_i_5 
       (.I0(data9[16]),
        .I1(DataL[15]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[16]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[16]),
        .O(\PACKET_OUT[15]_INST_0_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[15]_INST_0_i_6 
       (.I0(DataL[15]),
        .I1(DataR[15]),
        .O(\PACKET_OUT[15]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[15]_INST_0_i_7 
       (.I0(DataL[14]),
        .I1(DataR[14]),
        .O(\PACKET_OUT[15]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[15]_INST_0_i_8 
       (.I0(DataL[13]),
        .I1(DataR[13]),
        .O(\PACKET_OUT[15]_INST_0_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[15]_INST_0_i_9 
       (.I0(DataL[12]),
        .I1(DataR[12]),
        .O(\PACKET_OUT[15]_INST_0_i_9_n_0 ));
  MUXF7 \PACKET_OUT[16]_INST_0 
       (.I0(\PACKET_OUT[16]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[16]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAFF0300AA000300)) 
    \PACKET_OUT[16]_INST_0_i_1 
       (.I0(\PACKET_OUT[16]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_4_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_5_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I4(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_6_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0001FFFF00010000)) 
    \PACKET_OUT[16]_INST_0_i_10 
       (.I0(\PACKET_OUT[16]_INST_0_i_33_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_34_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_35_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_36_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data4),
        .O(\PACKET_OUT[16]_INST_0_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_100 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .I2(DataR[15]),
        .I3(DataL[15]),
        .O(\PACKET_OUT[16]_INST_0_i_100_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \PACKET_OUT[16]_INST_0_i_101 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .I2(DataR[7]),
        .I3(DataL[7]),
        .O(\PACKET_OUT[16]_INST_0_i_101_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \PACKET_OUT[16]_INST_0_i_102 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .I2(DataR[15]),
        .I3(DataL[15]),
        .O(\PACKET_OUT[16]_INST_0_i_102_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_103 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .I2(DataR[11]),
        .I3(DataL[11]),
        .O(\PACKET_OUT[16]_INST_0_i_103_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[16]_INST_0_i_104 
       (.I0(DataL[9]),
        .I1(DataR[9]),
        .O(\PACKET_OUT[16]_INST_0_i_104_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_105 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .I2(DataR[15]),
        .I3(DataL[15]),
        .O(\PACKET_OUT[16]_INST_0_i_105_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_106 
       (.I0(DataR[12]),
        .I1(DataL[12]),
        .I2(DataR[13]),
        .I3(DataL[13]),
        .O(\PACKET_OUT[16]_INST_0_i_106_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_11 
       (.I0(\PACKET_OUT[7]_INST_0_i_4_n_6 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_7 ),
        .I2(\PACKET_OUT[7]_INST_0_i_4_n_4 ),
        .I3(\PACKET_OUT[7]_INST_0_i_4_n_5 ),
        .O(\PACKET_OUT[16]_INST_0_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_12 
       (.I0(\PACKET_OUT[17]_INST_0_i_4_n_6 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_7 ),
        .I2(\PACKET_OUT[17]_INST_0_i_4_n_4 ),
        .I3(\PACKET_OUT[17]_INST_0_i_4_n_5 ),
        .O(\PACKET_OUT[16]_INST_0_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_13 
       (.I0(p_0_in__0[5]),
        .I1(p_0_in__0[4]),
        .I2(p_0_in__0[7]),
        .I3(p_0_in__0[6]),
        .O(\PACKET_OUT[16]_INST_0_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_14 
       (.I0(p_0_in__0[1]),
        .I1(p_0_in__0[0]),
        .I2(p_0_in__0[3]),
        .I3(p_0_in__0[2]),
        .O(\PACKET_OUT[16]_INST_0_i_14_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_15 
       (.I0(p_0_in__0[13]),
        .I1(p_0_in__0[12]),
        .I2(p_0_in__0[15]),
        .I3(p_0_in__0[14]),
        .O(\PACKET_OUT[16]_INST_0_i_15_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_16 
       (.I0(p_0_in__0[9]),
        .I1(p_0_in__0[8]),
        .I2(p_0_in__0[11]),
        .I3(p_0_in__0[10]),
        .O(\PACKET_OUT[16]_INST_0_i_16_n_0 ));
  LUT5 #(
    .INIT(32'hFFCA0000)) 
    \PACKET_OUT[16]_INST_0_i_17 
       (.I0(\PACKET_OUT[16]_INST_0_i_38_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_39_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_40_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_17_n_0 ));
  LUT5 #(
    .INIT(32'hFFCA0000)) 
    \PACKET_OUT[16]_INST_0_i_18 
       (.I0(\PACKET_OUT[16]_INST_0_i_39_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_42_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_43_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_18_n_0 ));
  LUT5 #(
    .INIT(32'hF0F0F0E0)) 
    \PACKET_OUT[16]_INST_0_i_19 
       (.I0(\PACKET_OUT[16]_INST_0_i_44_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_45_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_46_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_47_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8CDCDCDC8C8C8)) 
    \PACKET_OUT[16]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I1(Z),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[17]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[17]),
        .O(\PACKET_OUT[16]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F0F0F0F0A0E0)) 
    \PACKET_OUT[16]_INST_0_i_20 
       (.I0(\PACKET_OUT[16]_INST_0_i_48_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_49_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I3(DataR[0]),
        .I4(\PACKET_OUT[16]_INST_0_i_50_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_51_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_20_n_0 ));
  LUT5 #(
    .INIT(32'hFFCA0000)) 
    \PACKET_OUT[16]_INST_0_i_21 
       (.I0(\PACKET_OUT[16]_INST_0_i_42_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_52_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_53_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_21_n_0 ));
  LUT5 #(
    .INIT(32'hFFCA0000)) 
    \PACKET_OUT[16]_INST_0_i_22 
       (.I0(\PACKET_OUT[16]_INST_0_i_52_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_49_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_54_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_22_n_0 ));
  LUT5 #(
    .INIT(32'hEFEC0000)) 
    \PACKET_OUT[16]_INST_0_i_23 
       (.I0(\PACKET_OUT[16]_INST_0_i_55_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_56_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_57_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_23_n_0 ));
  LUT5 #(
    .INIT(32'hEFEC0000)) 
    \PACKET_OUT[16]_INST_0_i_24 
       (.I0(\PACKET_OUT[16]_INST_0_i_57_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_58_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_59_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_24_n_0 ));
  LUT6 #(
    .INIT(64'hCCCCCCCCCCCC88C8)) 
    \PACKET_OUT[16]_INST_0_i_25 
       (.I0(\PACKET_OUT[16]_INST_0_i_60_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_55_n_0 ),
        .I3(DataR[0]),
        .I4(\PACKET_OUT[16]_INST_0_i_61_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_62_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_25_n_0 ));
  LUT5 #(
    .INIT(32'hF0F0F0E0)) 
    \PACKET_OUT[16]_INST_0_i_26 
       (.I0(\PACKET_OUT[16]_INST_0_i_63_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_64_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_65_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_66_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_26_n_0 ));
  LUT5 #(
    .INIT(32'hEFEC0000)) 
    \PACKET_OUT[16]_INST_0_i_27 
       (.I0(\PACKET_OUT[16]_INST_0_i_59_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_67_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_68_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_27_n_0 ));
  LUT5 #(
    .INIT(32'hEFEC0000)) 
    \PACKET_OUT[16]_INST_0_i_28 
       (.I0(\PACKET_OUT[16]_INST_0_i_68_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_69_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_70_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_28_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_29 
       (.I0(\PACKET_OUT[16]_INST_0_i_71_n_0 ),
        .I1(DataR[0]),
        .I2(DataL[0]),
        .I3(DataR[1]),
        .I4(DataL[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_72_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_29_n_0 ));
  MUXF7 \PACKET_OUT[16]_INST_0_i_3 
       (.I0(\PACKET_OUT[16]_INST_0_i_9_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_10_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_3_n_0 ),
        .S(\PACKET_OUT[39]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_30 
       (.I0(\PACKET_OUT[16]_INST_0_i_73_n_0 ),
        .I1(DataR[8]),
        .I2(DataL[8]),
        .I3(DataR[9]),
        .I4(DataL[9]),
        .I5(\PACKET_OUT[16]_INST_0_i_74_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_30_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \PACKET_OUT[16]_INST_0_i_31 
       (.I0(\PACKET_OUT[16]_INST_0_i_75_n_0 ),
        .I1(DataR[0]),
        .I2(DataL[0]),
        .I3(DataR[1]),
        .I4(DataL[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_76_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_31_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \PACKET_OUT[16]_INST_0_i_32 
       (.I0(\PACKET_OUT[16]_INST_0_i_77_n_0 ),
        .I1(DataR[8]),
        .I2(DataL[8]),
        .I3(DataR[9]),
        .I4(DataL[9]),
        .I5(\PACKET_OUT[16]_INST_0_i_78_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_32_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_33 
       (.I0(data5[6]),
        .I1(data5[5]),
        .I2(data5[8]),
        .I3(data5[7]),
        .O(\PACKET_OUT[16]_INST_0_i_33_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_34 
       (.I0(data5[2]),
        .I1(data5[1]),
        .I2(data5[4]),
        .I3(data5[3]),
        .O(\PACKET_OUT[16]_INST_0_i_34_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_35 
       (.I0(data5[14]),
        .I1(data5[13]),
        .I2(data5[16]),
        .I3(data5[15]),
        .O(\PACKET_OUT[16]_INST_0_i_35_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_36 
       (.I0(data5[10]),
        .I1(data5[9]),
        .I2(data5[12]),
        .I3(data5[11]),
        .O(\PACKET_OUT[16]_INST_0_i_36_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \PACKET_OUT[16]_INST_0_i_37 
       (.I0(\PACKET_OUT[16]_INST_0_i_79_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_80_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_81_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_82_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_83_n_0 ),
        .O(data4));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0_i_38 
       (.I0(\PACKET_OUT[16]_INST_0_i_84_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_38_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_39 
       (.I0(DataL[12]),
        .I1(DataR[2]),
        .I2(DataL[8]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_84_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_39_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_4 
       (.I0(\PACKET_OUT[3]_INST_0_i_4_n_5 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_4 ),
        .I2(\PACKET_OUT[3]_INST_0_i_4_n_7 ),
        .I3(\PACKET_OUT[3]_INST_0_i_4_n_6 ),
        .I4(\PACKET_OUT[16]_INST_0_i_11_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0_i_40 
       (.I0(\PACKET_OUT[16]_INST_0_i_85_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_86_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_40_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \PACKET_OUT[16]_INST_0_i_41 
       (.I0(DataR[13]),
        .I1(DataR[12]),
        .I2(DataR[15]),
        .I3(DataR[14]),
        .I4(\PACKET_OUT[16]_INST_0_i_87_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_88_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_41_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_42 
       (.I0(DataL[14]),
        .I1(DataR[2]),
        .I2(DataL[10]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_89_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_42_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_43 
       (.I0(DataL[13]),
        .I1(DataR[2]),
        .I2(DataL[9]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_85_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_43_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_44 
       (.I0(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I1(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_91_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_44_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_45 
       (.I0(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_91_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[0]_INST_0_i_7_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_45_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_46 
       (.I0(\PACKET_OUT[16]_INST_0_i_84_n_0 ),
        .I1(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_86_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_46_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_47 
       (.I0(\PACKET_OUT[16]_INST_0_i_86_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_47_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \PACKET_OUT[16]_INST_0_i_48 
       (.I0(DataL[15]),
        .I1(DataR[1]),
        .I2(DataR[3]),
        .I3(DataL[13]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[16]_INST_0_i_48_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \PACKET_OUT[16]_INST_0_i_49 
       (.I0(DataL[14]),
        .I1(DataR[1]),
        .I2(DataR[3]),
        .I3(DataL[12]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[16]_INST_0_i_49_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_5 
       (.I0(\PACKET_OUT[11]_INST_0_i_4_n_5 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_4 ),
        .I2(\PACKET_OUT[11]_INST_0_i_4_n_7 ),
        .I3(\PACKET_OUT[11]_INST_0_i_4_n_6 ),
        .I4(\PACKET_OUT[16]_INST_0_i_12_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \PACKET_OUT[16]_INST_0_i_50 
       (.I0(DataR[2]),
        .I1(DataL[15]),
        .I2(DataR[3]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[16]_INST_0_i_50_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \PACKET_OUT[16]_INST_0_i_51 
       (.I0(DataR[2]),
        .I1(DataL[14]),
        .I2(DataR[3]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[16]_INST_0_i_51_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \PACKET_OUT[16]_INST_0_i_52 
       (.I0(DataL[12]),
        .I1(DataR[1]),
        .I2(DataL[14]),
        .I3(DataR[2]),
        .I4(DataL[10]),
        .I5(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_52_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_53 
       (.I0(DataL[15]),
        .I1(DataR[2]),
        .I2(DataL[11]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_92_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_53_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \PACKET_OUT[16]_INST_0_i_54 
       (.I0(DataL[13]),
        .I1(DataR[1]),
        .I2(DataL[15]),
        .I3(DataR[2]),
        .I4(DataL[11]),
        .I5(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_54_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \PACKET_OUT[16]_INST_0_i_55 
       (.I0(DataL[1]),
        .I1(DataR[1]),
        .I2(DataR[3]),
        .I3(DataL[3]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[16]_INST_0_i_55_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \PACKET_OUT[16]_INST_0_i_56 
       (.I0(DataL[2]),
        .I1(DataR[1]),
        .I2(DataL[0]),
        .I3(DataR[2]),
        .I4(DataL[4]),
        .I5(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_56_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \PACKET_OUT[16]_INST_0_i_57 
       (.I0(DataL[3]),
        .I1(DataR[1]),
        .I2(DataL[1]),
        .I3(DataR[2]),
        .I4(DataL[5]),
        .I5(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_57_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_58 
       (.I0(DataL[0]),
        .I1(DataR[2]),
        .I2(DataL[4]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_93_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_58_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_59 
       (.I0(DataL[1]),
        .I1(DataR[2]),
        .I2(DataL[5]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_94_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_59_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \PACKET_OUT[16]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_13_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_14_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_15_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_16_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \PACKET_OUT[16]_INST_0_i_60 
       (.I0(DataR[2]),
        .I1(DataL[0]),
        .I2(DataR[3]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[16]_INST_0_i_60_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \PACKET_OUT[16]_INST_0_i_61 
       (.I0(DataL[0]),
        .I1(DataR[1]),
        .I2(DataR[3]),
        .I3(DataL[2]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[16]_INST_0_i_61_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \PACKET_OUT[16]_INST_0_i_62 
       (.I0(DataR[2]),
        .I1(DataL[1]),
        .I2(DataR[3]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[16]_INST_0_i_62_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_63 
       (.I0(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .I1(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_63_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_64 
       (.I0(\PACKET_OUT[16]_INST_0_i_96_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_64_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_65 
       (.I0(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_97_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[15]_INST_0_i_17_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_65_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_66 
       (.I0(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .I1(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_97_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_66_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_67 
       (.I0(DataL[2]),
        .I1(DataR[2]),
        .I2(DataL[6]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_98_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_67_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_68 
       (.I0(DataL[3]),
        .I1(DataR[2]),
        .I2(DataL[7]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_96_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_68_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0_i_69 
       (.I0(\PACKET_OUT[16]_INST_0_i_98_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_69_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \PACKET_OUT[16]_INST_0_i_7 
       (.I0(\PACKET_OUT[16]_INST_0_i_17_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_18_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_19_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_20_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_21_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_22_n_0 ),
        .O(data7[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0_i_70 
       (.I0(\PACKET_OUT[16]_INST_0_i_96_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_70_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_71 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .I2(DataR[3]),
        .I3(DataL[3]),
        .O(\PACKET_OUT[16]_INST_0_i_71_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_72 
       (.I0(DataL[5]),
        .I1(DataR[5]),
        .I2(DataL[4]),
        .I3(DataR[4]),
        .I4(\PACKET_OUT[16]_INST_0_i_99_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_72_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_73 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .I2(DataR[11]),
        .I3(DataL[11]),
        .O(\PACKET_OUT[16]_INST_0_i_73_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_74 
       (.I0(DataL[13]),
        .I1(DataR[13]),
        .I2(DataL[12]),
        .I3(DataR[12]),
        .I4(\PACKET_OUT[16]_INST_0_i_100_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_74_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \PACKET_OUT[16]_INST_0_i_75 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .I2(DataR[3]),
        .I3(DataL[3]),
        .O(\PACKET_OUT[16]_INST_0_i_75_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \PACKET_OUT[16]_INST_0_i_76 
       (.I0(DataL[5]),
        .I1(DataR[5]),
        .I2(DataL[4]),
        .I3(DataR[4]),
        .I4(\PACKET_OUT[16]_INST_0_i_101_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_76_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \PACKET_OUT[16]_INST_0_i_77 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .I2(DataR[11]),
        .I3(DataL[11]),
        .O(\PACKET_OUT[16]_INST_0_i_77_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \PACKET_OUT[16]_INST_0_i_78 
       (.I0(DataL[13]),
        .I1(DataR[13]),
        .I2(DataL[12]),
        .I3(DataR[12]),
        .I4(\PACKET_OUT[16]_INST_0_i_102_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_78_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_79 
       (.I0(DataR[4]),
        .I1(DataL[4]),
        .I2(DataR[5]),
        .I3(DataL[5]),
        .O(\PACKET_OUT[16]_INST_0_i_79_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \PACKET_OUT[16]_INST_0_i_8 
       (.I0(\PACKET_OUT[16]_INST_0_i_23_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_24_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_25_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_26_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_27_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_28_n_0 ),
        .O(data6[17]));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_80 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .I2(DataR[7]),
        .I3(DataL[7]),
        .O(\PACKET_OUT[16]_INST_0_i_80_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_81 
       (.I0(DataR[0]),
        .I1(DataL[0]),
        .I2(DataR[1]),
        .I3(DataL[1]),
        .O(\PACKET_OUT[16]_INST_0_i_81_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_82 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .I2(DataR[3]),
        .I3(DataL[3]),
        .O(\PACKET_OUT[16]_INST_0_i_82_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFBEFF)) 
    \PACKET_OUT[16]_INST_0_i_83 
       (.I0(\PACKET_OUT[16]_INST_0_i_103_n_0 ),
        .I1(DataR[8]),
        .I2(DataL[8]),
        .I3(\PACKET_OUT[16]_INST_0_i_104_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_105_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_106_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_83_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_84 
       (.I0(DataL[10]),
        .I1(DataR[2]),
        .I2(DataL[14]),
        .I3(DataR[3]),
        .I4(DataL[6]),
        .O(\PACKET_OUT[16]_INST_0_i_84_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_85 
       (.I0(DataL[11]),
        .I1(DataR[2]),
        .I2(DataL[15]),
        .I3(DataR[3]),
        .I4(DataL[7]),
        .O(\PACKET_OUT[16]_INST_0_i_85_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_86 
       (.I0(DataL[9]),
        .I1(DataR[2]),
        .I2(DataL[13]),
        .I3(DataR[3]),
        .I4(DataL[5]),
        .O(\PACKET_OUT[16]_INST_0_i_86_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_87 
       (.I0(DataR[6]),
        .I1(DataR[7]),
        .I2(DataR[4]),
        .I3(DataR[5]),
        .O(\PACKET_OUT[16]_INST_0_i_87_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_88 
       (.I0(DataR[10]),
        .I1(DataR[11]),
        .I2(DataR[8]),
        .I3(DataR[9]),
        .O(\PACKET_OUT[16]_INST_0_i_88_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \PACKET_OUT[16]_INST_0_i_89 
       (.I0(DataL[12]),
        .I1(DataR[2]),
        .I2(DataL[8]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_89_n_0 ));
  LUT5 #(
    .INIT(32'h1010101F)) 
    \PACKET_OUT[16]_INST_0_i_9 
       (.I0(\PACKET_OUT[16]_INST_0_i_29_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_30_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_31_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_32_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_90 
       (.I0(DataL[15]),
        .I1(DataL[7]),
        .I2(DataR[2]),
        .I3(DataL[11]),
        .I4(DataR[3]),
        .I5(DataL[3]),
        .O(\PACKET_OUT[16]_INST_0_i_90_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_91 
       (.I0(DataL[13]),
        .I1(DataL[5]),
        .I2(DataR[2]),
        .I3(DataL[9]),
        .I4(DataR[3]),
        .I5(DataL[1]),
        .O(\PACKET_OUT[16]_INST_0_i_91_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \PACKET_OUT[16]_INST_0_i_92 
       (.I0(DataL[13]),
        .I1(DataR[2]),
        .I2(DataL[9]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_92_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \PACKET_OUT[16]_INST_0_i_93 
       (.I0(DataL[2]),
        .I1(DataR[2]),
        .I2(DataL[6]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_93_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \PACKET_OUT[16]_INST_0_i_94 
       (.I0(DataL[3]),
        .I1(DataR[2]),
        .I2(DataL[7]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_94_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_95 
       (.I0(DataL[7]),
        .I1(DataR[2]),
        .I2(DataL[3]),
        .I3(DataR[3]),
        .I4(DataL[11]),
        .O(\PACKET_OUT[16]_INST_0_i_95_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_96 
       (.I0(DataL[5]),
        .I1(DataR[2]),
        .I2(DataL[1]),
        .I3(DataR[3]),
        .I4(DataL[9]),
        .O(\PACKET_OUT[16]_INST_0_i_96_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_97 
       (.I0(DataL[2]),
        .I1(DataL[10]),
        .I2(DataR[2]),
        .I3(DataL[6]),
        .I4(DataR[3]),
        .I5(DataL[14]),
        .O(\PACKET_OUT[16]_INST_0_i_97_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_98 
       (.I0(DataL[4]),
        .I1(DataR[2]),
        .I2(DataL[0]),
        .I3(DataR[3]),
        .I4(DataL[8]),
        .O(\PACKET_OUT[16]_INST_0_i_98_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_99 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .I2(DataR[7]),
        .I3(DataL[7]),
        .O(\PACKET_OUT[16]_INST_0_i_99_n_0 ));
  LUT6 #(
    .INIT(64'h88BBB8888888B888)) 
    \PACKET_OUT[17]_INST_0 
       (.I0(\PACKET_OUT[17]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[17]_INST_0_i_2_n_3 ),
        .I3(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I4(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I5(ALU1__0),
        .O(PACKET_OUT[17]));
  LUT3 #(
    .INIT(8'hE0)) 
    \PACKET_OUT[17]_INST_0_i_1 
       (.I0(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(C),
        .O(\PACKET_OUT[17]_INST_0_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_10 
       (.I0(DataL[15]),
        .I1(DataR[15]),
        .I2(DataL[14]),
        .I3(DataR[14]),
        .O(\PACKET_OUT[17]_INST_0_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_11 
       (.I0(DataL[13]),
        .I1(DataR[13]),
        .I2(DataL[12]),
        .I3(DataR[12]),
        .O(\PACKET_OUT[17]_INST_0_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_12 
       (.I0(DataL[11]),
        .I1(DataR[11]),
        .I2(DataL[10]),
        .I3(DataR[10]),
        .O(\PACKET_OUT[17]_INST_0_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_13 
       (.I0(DataL[9]),
        .I1(DataR[9]),
        .I2(DataL[8]),
        .I3(DataR[8]),
        .O(\PACKET_OUT[17]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[17]_INST_0_i_14 
       (.I0(DataR[15]),
        .I1(DataL[15]),
        .O(\PACKET_OUT[17]_INST_0_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[17]_INST_0_i_15 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .O(\PACKET_OUT[17]_INST_0_i_15_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[17]_INST_0_i_16 
       (.I0(DataR[13]),
        .I1(DataL[13]),
        .O(\PACKET_OUT[17]_INST_0_i_16_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[17]_INST_0_i_17 
       (.I0(DataR[12]),
        .I1(DataL[12]),
        .O(\PACKET_OUT[17]_INST_0_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_18 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .I2(DataL[7]),
        .I3(DataR[7]),
        .O(\PACKET_OUT[17]_INST_0_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_19 
       (.I0(DataR[4]),
        .I1(DataL[4]),
        .I2(DataL[5]),
        .I3(DataR[5]),
        .O(\PACKET_OUT[17]_INST_0_i_19_n_0 ));
  CARRY4 \PACKET_OUT[17]_INST_0_i_2 
       (.CI(\PACKET_OUT[17]_INST_0_i_4_n_0 ),
        .CO({\NLW_PACKET_OUT[17]_INST_0_i_2_CO_UNCONNECTED [3:1],\PACKET_OUT[17]_INST_0_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_PACKET_OUT[17]_INST_0_i_2_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,1'b0,1'b1}));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_20 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .I2(DataL[3]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[17]_INST_0_i_20_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_21 
       (.I0(DataR[0]),
        .I1(DataL[0]),
        .I2(DataL[1]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[17]_INST_0_i_21_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_22 
       (.I0(DataL[7]),
        .I1(DataR[7]),
        .I2(DataL[6]),
        .I3(DataR[6]),
        .O(\PACKET_OUT[17]_INST_0_i_22_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_23 
       (.I0(DataL[5]),
        .I1(DataR[5]),
        .I2(DataL[4]),
        .I3(DataR[4]),
        .O(\PACKET_OUT[17]_INST_0_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_24 
       (.I0(DataL[3]),
        .I1(DataR[3]),
        .I2(DataL[2]),
        .I3(DataR[2]),
        .O(\PACKET_OUT[17]_INST_0_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_25 
       (.I0(DataL[1]),
        .I1(DataR[1]),
        .I2(DataL[0]),
        .I3(DataR[0]),
        .O(\PACKET_OUT[17]_INST_0_i_25_n_0 ));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \PACKET_OUT[17]_INST_0_i_3 
       (.CI(\PACKET_OUT[17]_INST_0_i_5_n_0 ),
        .CO({ALU1__0,\NLW_PACKET_OUT[17]_INST_0_i_3_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\PACKET_OUT[17]_INST_0_i_6_n_0 ,\PACKET_OUT[17]_INST_0_i_7_n_0 ,\PACKET_OUT[17]_INST_0_i_8_n_0 ,\PACKET_OUT[17]_INST_0_i_9_n_0 }),
        .O(\NLW_PACKET_OUT[17]_INST_0_i_3_O_UNCONNECTED [3:0]),
        .S({\PACKET_OUT[17]_INST_0_i_10_n_0 ,\PACKET_OUT[17]_INST_0_i_11_n_0 ,\PACKET_OUT[17]_INST_0_i_12_n_0 ,\PACKET_OUT[17]_INST_0_i_13_n_0 }));
  CARRY4 \PACKET_OUT[17]_INST_0_i_4 
       (.CI(\PACKET_OUT[11]_INST_0_i_4_n_0 ),
        .CO({\PACKET_OUT[17]_INST_0_i_4_n_0 ,\NLW_PACKET_OUT[17]_INST_0_i_4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[15:12]),
        .O({\PACKET_OUT[17]_INST_0_i_4_n_4 ,\PACKET_OUT[17]_INST_0_i_4_n_5 ,\PACKET_OUT[17]_INST_0_i_4_n_6 ,\PACKET_OUT[17]_INST_0_i_4_n_7 }),
        .S({\PACKET_OUT[17]_INST_0_i_14_n_0 ,\PACKET_OUT[17]_INST_0_i_15_n_0 ,\PACKET_OUT[17]_INST_0_i_16_n_0 ,\PACKET_OUT[17]_INST_0_i_17_n_0 }));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \PACKET_OUT[17]_INST_0_i_5 
       (.CI(1'b0),
        .CO({\PACKET_OUT[17]_INST_0_i_5_n_0 ,\NLW_PACKET_OUT[17]_INST_0_i_5_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\PACKET_OUT[17]_INST_0_i_18_n_0 ,\PACKET_OUT[17]_INST_0_i_19_n_0 ,\PACKET_OUT[17]_INST_0_i_20_n_0 ,\PACKET_OUT[17]_INST_0_i_21_n_0 }),
        .O(\NLW_PACKET_OUT[17]_INST_0_i_5_O_UNCONNECTED [3:0]),
        .S({\PACKET_OUT[17]_INST_0_i_22_n_0 ,\PACKET_OUT[17]_INST_0_i_23_n_0 ,\PACKET_OUT[17]_INST_0_i_24_n_0 ,\PACKET_OUT[17]_INST_0_i_25_n_0 }));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_6 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .I2(DataL[15]),
        .I3(DataR[15]),
        .O(\PACKET_OUT[17]_INST_0_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_7 
       (.I0(DataR[12]),
        .I1(DataL[12]),
        .I2(DataL[13]),
        .I3(DataR[13]),
        .O(\PACKET_OUT[17]_INST_0_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_8 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .I2(DataL[11]),
        .I3(DataR[11]),
        .O(\PACKET_OUT[17]_INST_0_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_9 
       (.I0(DataR[8]),
        .I1(DataL[8]),
        .I2(DataL[9]),
        .I3(DataR[9]),
        .O(\PACKET_OUT[17]_INST_0_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hFE00)) 
    \PACKET_OUT[18]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(CPY),
        .O(PACKET_OUT[18]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \PACKET_OUT[19]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(BR),
        .O(PACKET_OUT[19]));
  MUXF7 \PACKET_OUT[1]_INST_0 
       (.I0(\PACKET_OUT[1]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[1]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[1]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[1]_INST_0_i_1 
       (.I0(\PACKET_OUT[1]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_6 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[1]),
        .O(\PACKET_OUT[1]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[1]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[1]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[1]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[1]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[1]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[1]_INST_0_i_3 
       (.I0(data5[2]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[1]),
        .I4(DataR[1]),
        .O(\PACKET_OUT[1]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[1]_INST_0_i_4 
       (.I0(data9[2]),
        .I1(DataL[1]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[2]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[2]),
        .O(\PACKET_OUT[1]_INST_0_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB800B800FF000000)) 
    \PACKET_OUT[1]_INST_0_i_5 
       (.I0(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I4(\PACKET_OUT[1]_INST_0_i_7_n_0 ),
        .I5(DataR[0]),
        .O(data7[2]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \PACKET_OUT[1]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[1]_INST_0_i_8_n_0 ),
        .O(data6[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[1]_INST_0_i_7 
       (.I0(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_91_n_0 ),
        .O(\PACKET_OUT[1]_INST_0_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000B08)) 
    \PACKET_OUT[1]_INST_0_i_8 
       (.I0(DataL[0]),
        .I1(DataR[0]),
        .I2(DataR[2]),
        .I3(DataL[1]),
        .I4(DataR[3]),
        .I5(DataR[1]),
        .O(\PACKET_OUT[1]_INST_0_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF00000800)) 
    \PACKET_OUT[20]_INST_0 
       (.I0(\PACKET_OUT[20]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(LR2[0]),
        .O(PACKET_OUT[20]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[20]_INST_0_i_1 
       (.I0(LR2[1]),
        .I1(Z),
        .I2(LR2[0]),
        .O(\PACKET_OUT[20]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF00000800)) 
    \PACKET_OUT[21]_INST_0 
       (.I0(\PACKET_OUT[21]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(LR2[1]),
        .O(PACKET_OUT[21]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[21]_INST_0_i_1 
       (.I0(LR2[0]),
        .I1(Z),
        .I2(LR2[1]),
        .O(\PACKET_OUT[21]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[22]_INST_0 
       (.I0(Z),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[0]),
        .O(PACKET_OUT[22]));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[23]_INST_0 
       (.I0(\PACKET_OUT[23]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[1]),
        .O(PACKET_OUT[23]));
  LUT2 #(
    .INIT(4'h8)) 
    \PACKET_OUT[23]_INST_0_i_1 
       (.I0(Z),
        .I1(dest[0]),
        .O(\PACKET_OUT[23]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[24]_INST_0 
       (.I0(\PACKET_OUT[24]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[2]),
        .O(PACKET_OUT[24]));
  LUT3 #(
    .INIT(8'h80)) 
    \PACKET_OUT[24]_INST_0_i_1 
       (.I0(dest[1]),
        .I1(dest[0]),
        .I2(Z),
        .O(\PACKET_OUT[24]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[25]_INST_0 
       (.I0(\PACKET_OUT[25]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[3]),
        .O(PACKET_OUT[25]));
  LUT4 #(
    .INIT(16'h8000)) 
    \PACKET_OUT[25]_INST_0_i_1 
       (.I0(dest[2]),
        .I1(Z),
        .I2(dest[0]),
        .I3(dest[1]),
        .O(\PACKET_OUT[25]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[26]_INST_0 
       (.I0(\PACKET_OUT[26]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[4]),
        .O(PACKET_OUT[26]));
  LUT5 #(
    .INIT(32'h80000000)) 
    \PACKET_OUT[26]_INST_0_i_1 
       (.I0(dest[3]),
        .I1(dest[1]),
        .I2(dest[0]),
        .I3(Z),
        .I4(dest[2]),
        .O(\PACKET_OUT[26]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[27]_INST_0 
       (.I0(\PACKET_OUT[27]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[5]),
        .O(PACKET_OUT[27]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \PACKET_OUT[27]_INST_0_i_1 
       (.I0(dest[4]),
        .I1(dest[2]),
        .I2(Z),
        .I3(dest[0]),
        .I4(dest[1]),
        .I5(dest[3]),
        .O(\PACKET_OUT[27]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF00000800)) 
    \PACKET_OUT[28]_INST_0 
       (.I0(\PACKET_OUT[28]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[6]),
        .O(PACKET_OUT[28]));
  LUT3 #(
    .INIT(8'h78)) 
    \PACKET_OUT[28]_INST_0_i_1 
       (.I0(\PACKET_OUT[27]_INST_0_i_1_n_0 ),
        .I1(dest[5]),
        .I2(dest[6]),
        .O(\PACKET_OUT[28]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h3FFFBCFFC0008000)) 
    \PACKET_OUT[29]_INST_0 
       (.I0(\PACKET_OUT[29]_INST_0_i_1_n_7 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[0]),
        .O(PACKET_OUT[29]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[29]_INST_0_i_1 
       (.CI(1'b0),
        .CO({\PACKET_OUT[29]_INST_0_i_1_n_0 ,\NLW_PACKET_OUT[29]_INST_0_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(gen[3:0]),
        .O({\PACKET_OUT[29]_INST_0_i_1_n_4 ,\PACKET_OUT[29]_INST_0_i_1_n_5 ,\PACKET_OUT[29]_INST_0_i_1_n_6 ,\PACKET_OUT[29]_INST_0_i_1_n_7 }),
        .S({\PACKET_OUT[29]_INST_0_i_2_n_0 ,\PACKET_OUT[29]_INST_0_i_3_n_0 ,\PACKET_OUT[29]_INST_0_i_4_n_0 ,\PACKET_OUT[29]_INST_0_i_5_n_0 }));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[29]_INST_0_i_2 
       (.I0(gen[3]),
        .I1(DataR[3]),
        .O(\PACKET_OUT[29]_INST_0_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[29]_INST_0_i_3 
       (.I0(gen[2]),
        .I1(DataR[2]),
        .O(\PACKET_OUT[29]_INST_0_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[29]_INST_0_i_4 
       (.I0(gen[1]),
        .I1(DataR[1]),
        .O(\PACKET_OUT[29]_INST_0_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[29]_INST_0_i_5 
       (.I0(gen[0]),
        .I1(DataR[0]),
        .O(\PACKET_OUT[29]_INST_0_i_5_n_0 ));
  MUXF7 \PACKET_OUT[2]_INST_0 
       (.I0(\PACKET_OUT[2]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[2]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[2]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[2]_INST_0_i_1 
       (.I0(\PACKET_OUT[2]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_5 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[2]),
        .O(\PACKET_OUT[2]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[2]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[2]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[2]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[2]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[2]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[2]_INST_0_i_3 
       (.I0(data5[3]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[2]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[2]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[2]_INST_0_i_4 
       (.I0(data9[3]),
        .I1(DataL[2]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[3]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[3]),
        .O(\PACKET_OUT[2]_INST_0_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFF00B8000000B800)) 
    \PACKET_OUT[2]_INST_0_i_5 
       (.I0(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I4(DataR[0]),
        .I5(\PACKET_OUT[3]_INST_0_i_22_n_0 ),
        .O(data7[3]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[2]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_61_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_62_n_0 ),
        .O(data6[3]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[2]_INST_0_i_7 
       (.I0(DataL[8]),
        .I1(DataR[2]),
        .I2(DataL[12]),
        .I3(DataR[3]),
        .I4(DataL[4]),
        .O(\PACKET_OUT[2]_INST_0_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[2]_INST_0_i_8 
       (.I0(DataL[14]),
        .I1(DataL[6]),
        .I2(DataR[2]),
        .I3(DataL[10]),
        .I4(DataR[3]),
        .I5(DataL[2]),
        .O(\PACKET_OUT[2]_INST_0_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[30]_INST_0 
       (.I0(\PACKET_OUT[30]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[1]),
        .O(PACKET_OUT[30]));
  LUT4 #(
    .INIT(16'h9F90)) 
    \PACKET_OUT[30]_INST_0_i_1 
       (.I0(gen[0]),
        .I1(gen[1]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[29]_INST_0_i_1_n_6 ),
        .O(\PACKET_OUT[30]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[31]_INST_0 
       (.I0(\PACKET_OUT[31]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[2]),
        .O(PACKET_OUT[31]));
  LUT5 #(
    .INIT(32'hE1FFE100)) 
    \PACKET_OUT[31]_INST_0_i_1 
       (.I0(gen[1]),
        .I1(gen[0]),
        .I2(gen[2]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(\PACKET_OUT[29]_INST_0_i_1_n_5 ),
        .O(\PACKET_OUT[31]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[32]_INST_0 
       (.I0(\PACKET_OUT[32]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[3]),
        .O(PACKET_OUT[32]));
  LUT6 #(
    .INIT(64'hFE01FFFFFE010000)) 
    \PACKET_OUT[32]_INST_0_i_1 
       (.I0(gen[2]),
        .I1(gen[0]),
        .I2(gen[1]),
        .I3(gen[3]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(\PACKET_OUT[29]_INST_0_i_1_n_4 ),
        .O(\PACKET_OUT[32]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[33]_INST_0 
       (.I0(\PACKET_OUT[33]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[4]),
        .O(PACKET_OUT[33]));
  LUT4 #(
    .INIT(16'h9F90)) 
    \PACKET_OUT[33]_INST_0_i_1 
       (.I0(\PACKET_OUT[33]_INST_0_i_2_n_0 ),
        .I1(gen[4]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[36]_INST_0_i_3_n_7 ),
        .O(\PACKET_OUT[33]_INST_0_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[33]_INST_0_i_2 
       (.I0(gen[2]),
        .I1(gen[0]),
        .I2(gen[1]),
        .I3(gen[3]),
        .O(\PACKET_OUT[33]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[34]_INST_0 
       (.I0(\PACKET_OUT[34]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[5]),
        .O(PACKET_OUT[34]));
  LUT4 #(
    .INIT(16'h9F90)) 
    \PACKET_OUT[34]_INST_0_i_1 
       (.I0(\PACKET_OUT[34]_INST_0_i_2_n_0 ),
        .I1(gen[5]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[36]_INST_0_i_3_n_6 ),
        .O(\PACKET_OUT[34]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[34]_INST_0_i_2 
       (.I0(gen[3]),
        .I1(gen[1]),
        .I2(gen[0]),
        .I3(gen[2]),
        .I4(gen[4]),
        .O(\PACKET_OUT[34]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[35]_INST_0 
       (.I0(\PACKET_OUT[35]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[6]),
        .O(PACKET_OUT[35]));
  LUT4 #(
    .INIT(16'h9F90)) 
    \PACKET_OUT[35]_INST_0_i_1 
       (.I0(\PACKET_OUT[36]_INST_0_i_2_n_0 ),
        .I1(gen[6]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[36]_INST_0_i_3_n_5 ),
        .O(\PACKET_OUT[35]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[36]_INST_0 
       (.I0(\PACKET_OUT[36]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[7]),
        .O(PACKET_OUT[36]));
  LUT5 #(
    .INIT(32'hE1FFE100)) 
    \PACKET_OUT[36]_INST_0_i_1 
       (.I0(gen[6]),
        .I1(\PACKET_OUT[36]_INST_0_i_2_n_0 ),
        .I2(gen[7]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(\PACKET_OUT[36]_INST_0_i_3_n_4 ),
        .O(\PACKET_OUT[36]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \PACKET_OUT[36]_INST_0_i_2 
       (.I0(gen[4]),
        .I1(gen[2]),
        .I2(gen[0]),
        .I3(gen[1]),
        .I4(gen[3]),
        .I5(gen[5]),
        .O(\PACKET_OUT[36]_INST_0_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[36]_INST_0_i_3 
       (.CI(\PACKET_OUT[29]_INST_0_i_1_n_0 ),
        .CO({\PACKET_OUT[36]_INST_0_i_3_n_0 ,\NLW_PACKET_OUT[36]_INST_0_i_3_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\PACKET_OUT[36]_INST_0_i_4_n_0 ,gen[6:4]}),
        .O({\PACKET_OUT[36]_INST_0_i_3_n_4 ,\PACKET_OUT[36]_INST_0_i_3_n_5 ,\PACKET_OUT[36]_INST_0_i_3_n_6 ,\PACKET_OUT[36]_INST_0_i_3_n_7 }),
        .S({\PACKET_OUT[36]_INST_0_i_5_n_0 ,\PACKET_OUT[36]_INST_0_i_6_n_0 ,\PACKET_OUT[36]_INST_0_i_7_n_0 ,\PACKET_OUT[36]_INST_0_i_8_n_0 }));
  LUT1 #(
    .INIT(2'h1)) 
    \PACKET_OUT[36]_INST_0_i_4 
       (.I0(DataR[7]),
        .O(\PACKET_OUT[36]_INST_0_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[36]_INST_0_i_5 
       (.I0(DataR[7]),
        .I1(gen[7]),
        .O(\PACKET_OUT[36]_INST_0_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[36]_INST_0_i_6 
       (.I0(gen[6]),
        .I1(DataR[6]),
        .O(\PACKET_OUT[36]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[36]_INST_0_i_7 
       (.I0(gen[5]),
        .I1(DataR[5]),
        .O(\PACKET_OUT[36]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[36]_INST_0_i_8 
       (.I0(gen[4]),
        .I1(DataR[4]),
        .O(\PACKET_OUT[36]_INST_0_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFBCBF80808080)) 
    \PACKET_OUT[37]_INST_0 
       (.I0(\PACKET_OUT[37]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(color[0]),
        .O(PACKET_OUT[37]));
  LUT5 #(
    .INIT(32'hFCBB3088)) 
    \PACKET_OUT[37]_INST_0_i_1 
       (.I0(\PACKET_OUT[39]_INST_0_i_5_n_7 ),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(color[0]),
        .O(\PACKET_OUT[37]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFBCBF80808080)) 
    \PACKET_OUT[38]_INST_0 
       (.I0(\PACKET_OUT[38]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(color[1]),
        .O(PACKET_OUT[38]));
  LUT5 #(
    .INIT(32'hFCBB3088)) 
    \PACKET_OUT[38]_INST_0_i_1 
       (.I0(\PACKET_OUT[39]_INST_0_i_5_n_6 ),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(DataR[1]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(color[1]),
        .O(\PACKET_OUT[38]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFBCBF80808080)) 
    \PACKET_OUT[39]_INST_0 
       (.I0(\PACKET_OUT[39]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(color[2]),
        .O(PACKET_OUT[39]));
  LUT5 #(
    .INIT(32'hFCBB3088)) 
    \PACKET_OUT[39]_INST_0_i_1 
       (.I0(\PACKET_OUT[39]_INST_0_i_5_n_5 ),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(DataR[2]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(color[2]),
        .O(\PACKET_OUT[39]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h55545500)) 
    \PACKET_OUT[39]_INST_0_i_2 
       (.I0(OPC[4]),
        .I1(OPC[1]),
        .I2(OPC[0]),
        .I3(OPC[2]),
        .I4(OPC[5]),
        .O(\PACKET_OUT[39]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEFEFEEEEFFEFE)) 
    \PACKET_OUT[39]_INST_0_i_3 
       (.I0(OPC[4]),
        .I1(OPC[1]),
        .I2(OPC[5]),
        .I3(OPC[3]),
        .I4(OPC[0]),
        .I5(OPC[2]),
        .O(\PACKET_OUT[39]_INST_0_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h30F430C3)) 
    \PACKET_OUT[39]_INST_0_i_4 
       (.I0(OPC[1]),
        .I1(OPC[0]),
        .I2(OPC[2]),
        .I3(OPC[4]),
        .I4(OPC[3]),
        .O(\PACKET_OUT[39]_INST_0_i_4_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[39]_INST_0_i_5 
       (.CI(\PACKET_OUT[36]_INST_0_i_3_n_0 ),
        .CO(\NLW_PACKET_OUT[39]_INST_0_i_5_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,DataR[8:7]}),
        .O({\NLW_PACKET_OUT[39]_INST_0_i_5_O_UNCONNECTED [3],\PACKET_OUT[39]_INST_0_i_5_n_5 ,\PACKET_OUT[39]_INST_0_i_5_n_6 ,\PACKET_OUT[39]_INST_0_i_5_n_7 }),
        .S({1'b0,\PACKET_OUT[39]_INST_0_i_6_n_0 ,\PACKET_OUT[39]_INST_0_i_7_n_0 ,\PACKET_OUT[39]_INST_0_i_8_n_0 }));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[39]_INST_0_i_6 
       (.I0(DataR[9]),
        .I1(DataR[10]),
        .O(\PACKET_OUT[39]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[39]_INST_0_i_7 
       (.I0(DataR[8]),
        .I1(DataR[9]),
        .O(\PACKET_OUT[39]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[39]_INST_0_i_8 
       (.I0(DataR[7]),
        .I1(DataR[8]),
        .O(\PACKET_OUT[39]_INST_0_i_8_n_0 ));
  MUXF7 \PACKET_OUT[3]_INST_0 
       (.I0(\PACKET_OUT[3]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[3]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[3]_INST_0_i_1 
       (.I0(\PACKET_OUT[3]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_4 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[3]),
        .O(\PACKET_OUT[3]_INST_0_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_10 
       (.I0(DataR[0]),
        .I1(DataL[0]),
        .O(\PACKET_OUT[3]_INST_0_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[3]_INST_0_i_11 
       (.I0(DataL[3]),
        .I1(DataR[3]),
        .O(\PACKET_OUT[3]_INST_0_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[3]_INST_0_i_12 
       (.I0(DataL[2]),
        .I1(DataR[2]),
        .O(\PACKET_OUT[3]_INST_0_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[3]_INST_0_i_13 
       (.I0(DataL[1]),
        .I1(DataR[1]),
        .O(\PACKET_OUT[3]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[3]_INST_0_i_14 
       (.I0(DataL[0]),
        .I1(DataR[0]),
        .O(\PACKET_OUT[3]_INST_0_i_14_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[3]_INST_0_i_15 
       (.CI(1'b0),
        .CO({\PACKET_OUT[3]_INST_0_i_15_n_0 ,\NLW_PACKET_OUT[3]_INST_0_i_15_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[3:0]),
        .O({data9[4:2],\NLW_PACKET_OUT[3]_INST_0_i_15_O_UNCONNECTED [0]}),
        .S({\PACKET_OUT[3]_INST_0_i_18_n_0 ,\PACKET_OUT[3]_INST_0_i_19_n_0 ,\PACKET_OUT[3]_INST_0_i_20_n_0 ,\PACKET_OUT[3]_INST_0_i_21_n_0 }));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[3]_INST_0_i_16 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_22_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_38_n_0 ),
        .O(data7[4]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[3]_INST_0_i_17 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_55_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_61_n_0 ),
        .O(data6[4]));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_18 
       (.I0(DataR[3]),
        .I1(DataL[3]),
        .O(\PACKET_OUT[3]_INST_0_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_19 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .O(\PACKET_OUT[3]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[3]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[3]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[3]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[3]_INST_0_i_6_n_0 ),
        .O(\PACKET_OUT[3]_INST_0_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_20 
       (.I0(DataR[1]),
        .I1(DataL[1]),
        .O(\PACKET_OUT[3]_INST_0_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_21 
       (.I0(DataR[0]),
        .I1(DataL[0]),
        .O(\PACKET_OUT[3]_INST_0_i_21_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[3]_INST_0_i_22 
       (.I0(\PACKET_OUT[16]_INST_0_i_86_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .O(\PACKET_OUT[3]_INST_0_i_22_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[3]_INST_0_i_3 
       (.I0(data5[4]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[3]),
        .I4(DataR[3]),
        .O(\PACKET_OUT[3]_INST_0_i_3_n_0 ));
  CARRY4 \PACKET_OUT[3]_INST_0_i_4 
       (.CI(1'b0),
        .CO({\PACKET_OUT[3]_INST_0_i_4_n_0 ,\NLW_PACKET_OUT[3]_INST_0_i_4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[3:0]),
        .O({\PACKET_OUT[3]_INST_0_i_4_n_4 ,\PACKET_OUT[3]_INST_0_i_4_n_5 ,\PACKET_OUT[3]_INST_0_i_4_n_6 ,\PACKET_OUT[3]_INST_0_i_4_n_7 }),
        .S({\PACKET_OUT[3]_INST_0_i_7_n_0 ,\PACKET_OUT[3]_INST_0_i_8_n_0 ,\PACKET_OUT[3]_INST_0_i_9_n_0 ,\PACKET_OUT[3]_INST_0_i_10_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[3]_INST_0_i_5 
       (.CI(1'b0),
        .CO({\PACKET_OUT[3]_INST_0_i_5_n_0 ,\NLW_PACKET_OUT[3]_INST_0_i_5_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI(DataL[3:0]),
        .O(p_0_in__0[3:0]),
        .S({\PACKET_OUT[3]_INST_0_i_11_n_0 ,\PACKET_OUT[3]_INST_0_i_12_n_0 ,\PACKET_OUT[3]_INST_0_i_13_n_0 ,\PACKET_OUT[3]_INST_0_i_14_n_0 }));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[3]_INST_0_i_6 
       (.I0(data9[4]),
        .I1(DataL[3]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[4]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[4]),
        .O(\PACKET_OUT[3]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_7 
       (.I0(DataR[3]),
        .I1(DataL[3]),
        .O(\PACKET_OUT[3]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_8 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .O(\PACKET_OUT[3]_INST_0_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_9 
       (.I0(DataR[1]),
        .I1(DataL[1]),
        .O(\PACKET_OUT[3]_INST_0_i_9_n_0 ));
  MUXF7 \PACKET_OUT[4]_INST_0 
       (.I0(\PACKET_OUT[4]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[4]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[4]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[4]_INST_0_i_1 
       (.I0(\PACKET_OUT[4]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_7 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[4]),
        .O(\PACKET_OUT[4]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[4]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[4]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[4]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[4]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[4]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[4]_INST_0_i_3 
       (.I0(data5[5]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[4]),
        .I4(DataR[4]),
        .O(\PACKET_OUT[4]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[4]_INST_0_i_4 
       (.I0(data9[5]),
        .I1(DataL[4]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[5]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[5]),
        .O(\PACKET_OUT[4]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[4]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_38_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_40_n_0 ),
        .O(data7[5]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[4]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_56_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_55_n_0 ),
        .O(data6[5]));
  MUXF7 \PACKET_OUT[5]_INST_0 
       (.I0(\PACKET_OUT[5]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[5]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[5]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[5]_INST_0_i_1 
       (.I0(\PACKET_OUT[5]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_6 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[5]),
        .O(\PACKET_OUT[5]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[5]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[5]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[5]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[5]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[5]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[5]_INST_0_i_3 
       (.I0(data5[6]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[5]),
        .I4(DataR[5]),
        .O(\PACKET_OUT[5]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[5]_INST_0_i_4 
       (.I0(data9[6]),
        .I1(DataL[5]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[6]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[6]),
        .O(\PACKET_OUT[5]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[5]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_40_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_39_n_0 ),
        .O(data7[6]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[5]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_57_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_56_n_0 ),
        .O(data6[6]));
  MUXF7 \PACKET_OUT[6]_INST_0 
       (.I0(\PACKET_OUT[6]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[6]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[6]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[6]_INST_0_i_1 
       (.I0(\PACKET_OUT[6]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_5 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[6]),
        .O(\PACKET_OUT[6]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[6]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[6]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[6]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[6]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[6]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[6]_INST_0_i_3 
       (.I0(data5[7]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[6]),
        .I4(DataR[6]),
        .O(\PACKET_OUT[6]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[6]_INST_0_i_4 
       (.I0(data9[7]),
        .I1(DataL[6]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[7]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[7]),
        .O(\PACKET_OUT[6]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[6]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_39_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_43_n_0 ),
        .O(data7[7]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[6]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_58_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_57_n_0 ),
        .O(data6[7]));
  MUXF7 \PACKET_OUT[7]_INST_0 
       (.I0(\PACKET_OUT[7]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[7]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[7]_INST_0_i_1 
       (.I0(\PACKET_OUT[7]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_4 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[7]),
        .O(\PACKET_OUT[7]_INST_0_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_10 
       (.I0(DataR[4]),
        .I1(DataL[4]),
        .O(\PACKET_OUT[7]_INST_0_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[7]_INST_0_i_11 
       (.I0(DataL[7]),
        .I1(DataR[7]),
        .O(\PACKET_OUT[7]_INST_0_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[7]_INST_0_i_12 
       (.I0(DataL[6]),
        .I1(DataR[6]),
        .O(\PACKET_OUT[7]_INST_0_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[7]_INST_0_i_13 
       (.I0(DataL[5]),
        .I1(DataR[5]),
        .O(\PACKET_OUT[7]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[7]_INST_0_i_14 
       (.I0(DataL[4]),
        .I1(DataR[4]),
        .O(\PACKET_OUT[7]_INST_0_i_14_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[7]_INST_0_i_15 
       (.CI(\PACKET_OUT[3]_INST_0_i_15_n_0 ),
        .CO({\PACKET_OUT[7]_INST_0_i_15_n_0 ,\NLW_PACKET_OUT[7]_INST_0_i_15_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[7:4]),
        .O(data9[8:5]),
        .S({\PACKET_OUT[7]_INST_0_i_18_n_0 ,\PACKET_OUT[7]_INST_0_i_19_n_0 ,\PACKET_OUT[7]_INST_0_i_20_n_0 ,\PACKET_OUT[7]_INST_0_i_21_n_0 }));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[7]_INST_0_i_16 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_43_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_42_n_0 ),
        .O(data7[8]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[7]_INST_0_i_17 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_59_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_58_n_0 ),
        .O(data6[8]));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_18 
       (.I0(DataR[7]),
        .I1(DataL[7]),
        .O(\PACKET_OUT[7]_INST_0_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_19 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .O(\PACKET_OUT[7]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[7]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[7]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[7]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[7]_INST_0_i_6_n_0 ),
        .O(\PACKET_OUT[7]_INST_0_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_20 
       (.I0(DataR[5]),
        .I1(DataL[5]),
        .O(\PACKET_OUT[7]_INST_0_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_21 
       (.I0(DataR[4]),
        .I1(DataL[4]),
        .O(\PACKET_OUT[7]_INST_0_i_21_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[7]_INST_0_i_3 
       (.I0(data5[8]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[7]),
        .I4(DataR[7]),
        .O(\PACKET_OUT[7]_INST_0_i_3_n_0 ));
  CARRY4 \PACKET_OUT[7]_INST_0_i_4 
       (.CI(\PACKET_OUT[3]_INST_0_i_4_n_0 ),
        .CO({\PACKET_OUT[7]_INST_0_i_4_n_0 ,\NLW_PACKET_OUT[7]_INST_0_i_4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[7:4]),
        .O({\PACKET_OUT[7]_INST_0_i_4_n_4 ,\PACKET_OUT[7]_INST_0_i_4_n_5 ,\PACKET_OUT[7]_INST_0_i_4_n_6 ,\PACKET_OUT[7]_INST_0_i_4_n_7 }),
        .S({\PACKET_OUT[7]_INST_0_i_7_n_0 ,\PACKET_OUT[7]_INST_0_i_8_n_0 ,\PACKET_OUT[7]_INST_0_i_9_n_0 ,\PACKET_OUT[7]_INST_0_i_10_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[7]_INST_0_i_5 
       (.CI(\PACKET_OUT[3]_INST_0_i_5_n_0 ),
        .CO({\PACKET_OUT[7]_INST_0_i_5_n_0 ,\NLW_PACKET_OUT[7]_INST_0_i_5_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(DataL[7:4]),
        .O(p_0_in__0[7:4]),
        .S({\PACKET_OUT[7]_INST_0_i_11_n_0 ,\PACKET_OUT[7]_INST_0_i_12_n_0 ,\PACKET_OUT[7]_INST_0_i_13_n_0 ,\PACKET_OUT[7]_INST_0_i_14_n_0 }));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[7]_INST_0_i_6 
       (.I0(data9[8]),
        .I1(DataL[7]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[8]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[8]),
        .O(\PACKET_OUT[7]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_7 
       (.I0(DataR[7]),
        .I1(DataL[7]),
        .O(\PACKET_OUT[7]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_8 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .O(\PACKET_OUT[7]_INST_0_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_9 
       (.I0(DataR[5]),
        .I1(DataL[5]),
        .O(\PACKET_OUT[7]_INST_0_i_9_n_0 ));
  MUXF7 \PACKET_OUT[8]_INST_0 
       (.I0(\PACKET_OUT[8]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[8]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[8]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[8]_INST_0_i_1 
       (.I0(\PACKET_OUT[8]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_7 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[8]),
        .O(\PACKET_OUT[8]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[8]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[8]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[8]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[8]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[8]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[8]_INST_0_i_3 
       (.I0(data5[9]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[8]),
        .I4(DataR[8]),
        .O(\PACKET_OUT[8]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[8]_INST_0_i_4 
       (.I0(data9[9]),
        .I1(DataL[8]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[9]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[9]),
        .O(\PACKET_OUT[8]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[8]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_42_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_53_n_0 ),
        .O(data7[9]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[8]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_67_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_59_n_0 ),
        .O(data6[9]));
  MUXF7 \PACKET_OUT[9]_INST_0 
       (.I0(\PACKET_OUT[9]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[9]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[9]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[9]_INST_0_i_1 
       (.I0(\PACKET_OUT[9]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_6 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[9]),
        .O(\PACKET_OUT[9]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[9]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[9]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[9]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[9]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[9]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[9]_INST_0_i_3 
       (.I0(data5[10]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[9]),
        .I4(DataR[9]),
        .O(\PACKET_OUT[9]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[9]_INST_0_i_4 
       (.I0(data9[10]),
        .I1(DataL[9]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[10]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[10]),
        .O(\PACKET_OUT[9]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[9]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_53_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_52_n_0 ),
        .O(data7[10]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[9]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_68_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_67_n_0 ),
        .O(data6[10]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[0]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[0]),
        .O(WRITE_DATA[0]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[10]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[10]),
        .O(WRITE_DATA[10]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[11]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[11]),
        .O(WRITE_DATA[11]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[12]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[12]),
        .O(WRITE_DATA[12]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[13]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[13]),
        .O(WRITE_DATA[13]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[14]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[14]),
        .O(WRITE_DATA[14]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[15]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[15]),
        .O(WRITE_DATA[15]));
  LUT5 #(
    .INIT(32'h0A0AABEE)) 
    \WRITE_DATA[15]_INST_0_i_1 
       (.I0(OPC[5]),
        .I1(OPC[3]),
        .I2(OPC[0]),
        .I3(OPC[4]),
        .I4(OPC[1]),
        .O(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFAAEEFB)) 
    \WRITE_DATA[15]_INST_0_i_2 
       (.I0(OPC[2]),
        .I1(OPC[0]),
        .I2(OPC[3]),
        .I3(OPC[5]),
        .I4(OPC[1]),
        .I5(OPC[4]),
        .O(\WRITE_DATA[15]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5555FFFF50504054)) 
    \WRITE_DATA[15]_INST_0_i_3 
       (.I0(OPC[4]),
        .I1(OPC[1]),
        .I2(OPC[5]),
        .I3(OPC[3]),
        .I4(OPC[0]),
        .I5(OPC[2]),
        .O(\WRITE_DATA[15]_INST_0_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[1]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[1]),
        .O(WRITE_DATA[1]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[2]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[2]),
        .O(WRITE_DATA[2]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[3]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[3]),
        .O(WRITE_DATA[3]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[4]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[4]),
        .O(WRITE_DATA[4]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[5]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[5]),
        .O(WRITE_DATA[5]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[6]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[6]),
        .O(WRITE_DATA[6]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[7]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[7]),
        .O(WRITE_DATA[7]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[8]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[8]),
        .O(WRITE_DATA[8]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[9]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[9]),
        .O(WRITE_DATA[9]));
  LUT6 #(
    .INIT(64'h0000000000020000)) 
    WRITE_EN_INST_0
       (.I0(OPC[5]),
        .I1(OPC[3]),
        .I2(OPC[4]),
        .I3(OPC[2]),
        .I4(OPC[0]),
        .I5(OPC[1]),
        .O(WRITE_EN));
  (* DONT_TOUCH *) 
  CE ce
       (.CE_Ack_in(Ack_in),
        .CE_Ack_out(Ack_out),
        .CE_CP(CP),
        .CE_Send_in(Send_in),
        .CE_Send_out(Send_out),
        .Exb(DEL),
        .MR(MR));
endmodule

(* ECO_CHECKSUM = "f2f483dc" *) (* POWER_OPT_BRAM_CDC = "10" *) (* POWER_OPT_BRAM_SR_ADDR = "2" *) 
(* POWER_OPT_LOOPED_NET_PERCENTAGE = "3" *) (* dont_touch = "true" *) 
(* NotValidForBitStream *)
(* \DesignAttr:ENABLE_NOC_NETLIST_VIEW  *) 
(* \DesignAttr:ENABLE_AIE_NETLIST_VIEW  *) 
module JOIN_DDP
   (MR,
    Send_in,
    Ack_in,
    PACKET_IN,
    Send_out,
    Ack_out,
    PACKET_OUT);
  input MR;
  input Send_in;
  input Ack_in;
  input [37:0]PACKET_IN;
  output Send_out;
  output Ack_out;
  output [37:0]PACKET_OUT;

  (* DONT_TOUCH *) wire [5:0]ADDR;
  wire Ack_in;
  wire Ack_in_IBUF;
  wire Ack_out;
  wire Ack_out_OBUF;
  (* DONT_TOUCH *) wire B_Ack_out;
  (* DONT_TOUCH *) wire [37:0]B_PACKET_OUT;
  (* DONT_TOUCH *) wire B_Send_out_EXTERNAL;
  (* DONT_TOUCH *) wire B_Send_out_INTERNAL;
  (* DONT_TOUCH *) wire COPY_Ack_out;
  (* DONT_TOUCH *) wire [37:0]COPY_PACKET_OUT;
  (* DONT_TOUCH *) wire COPY_Send_out;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire C_Ack_out;
  wire DEL;
  (* DONT_TOUCH *) wire [37:0]DL;
  (* DONT_TOUCH *) wire FP_Ack_out;
  (* DONT_TOUCH *) wire [39:0]FP_PACKET_OUT;
  (* DONT_TOUCH *) wire FP_Send_out;
  wire LOAD_FLG;
  (* DONT_TOUCH *) wire MA_Ack_out;
  (* DONT_TOUCH *) wire [39:0]MA_PACKET_OUT;
  (* DONT_TOUCH *) wire MA_Send_out;
  (* DONT_TOUCH *) wire MMCAM_Ack_out;
  (* DONT_TOUCH *) wire [37:0]MMCAM_PACKET_OUT;
  (* DONT_TOUCH *) wire MMCAM_Send_out;
  (* DONT_TOUCH *) wire MMRAM_Ack_out;
  (* DONT_TOUCH *) wire [51:0]MMRAM_PACKET_OUT;
  (* DONT_TOUCH *) wire MMRAM_Send_out;
  wire MR;
  wire MR_IBUF;
  (* DONT_TOUCH *) wire M_Ack_out;
  wire M_Ack_out_IN;
  (* DONT_TOUCH *) wire [37:0]M_PACKET_OUT;
  (* DONT_TOUCH *) wire M_Send_out;
  wire [37:0]PACKET_IN;
  wire [37:0]PACKET_IN_IBUF;
  wire [37:0]PACKET_OUT;
  (* DONT_TOUCH *) wire PS_Ack_out;
  wire PS_DEL;
  (* DONT_TOUCH *) wire [61:0]PS_PACKET_OUT;
  (* DONT_TOUCH *) wire PS_Send_out;
  wire Send_in;
  wire Send_in_IBUF;
  wire Send_out;
  wire Send_out_OBUF;
  wire WRITE_DATA;
  wire WRITE_EN;
  wire WR_E;
  wire [15:1]NLW_FP_WRITE_DATA_UNCONNECTED;

initial begin
 $sdf_annotate("JOIN_DDP_SIM_time_impl.sdf",,,,"tool_control");
end
  IBUF Ack_in_IBUF_inst
       (.I(Ack_in),
        .O(Ack_in_IBUF));
  OBUF Ack_out_OBUF_inst
       (.I(Ack_out_OBUF),
        .O(Ack_out));
  (* DONT_TOUCH *) 
  B_Stage B
       (.Ack_in_a(M_Ack_out_IN),
        .Ack_in_b(C_Ack_out),
        .Ack_out(B_Ack_out),
        .MR(MR_IBUF),
        .PACKET_IN(COPY_PACKET_OUT),
        .PACKET_OUT(B_PACKET_OUT),
        .Send_in(COPY_Send_out),
        .Send_out_a(B_Send_out_INTERNAL),
        .Send_out_b(B_Send_out_EXTERNAL));
  (* DONT_TOUCH *) 
  COPY_Stage COPY
       (.Ack_in(B_Ack_out),
        .Ack_out(COPY_Ack_out),
        .MR(MR_IBUF),
        .PACKET_IN(MA_PACKET_OUT),
        .PACKET_OUT(COPY_PACKET_OUT),
        .Send_in(MA_Send_out),
        .Send_out(COPY_Send_out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  FP_Stage FP
       (.Ack_in(MA_Ack_out),
        .Ack_out(FP_Ack_out),
        .DEL(PS_DEL),
        .LOAD_FLG(LOAD_FLG),
        .MR(MR_IBUF),
        .PACKET_IN(PS_PACKET_OUT),
        .PACKET_OUT(FP_PACKET_OUT),
        .Send_in(PS_Send_out),
        .Send_out(FP_Send_out),
        .WRITE_DATA({NLW_FP_WRITE_DATA_UNCONNECTED[15:1],WRITE_DATA}),
        .WRITE_EN(WRITE_EN));
  (* DONT_TOUCH *) 
  M_Stage M
       (.Ack_in(MMCAM_Ack_out),
        .Ack_out_EX(Ack_out_OBUF),
        .Ack_out_IN(M_Ack_out_IN),
        .MR(MR_IBUF),
        .PACKET_IN_EXTERNAL(PACKET_IN_IBUF),
        .PACKET_IN_INTERNAL(B_PACKET_OUT),
        .PACKET_OUT(M_PACKET_OUT),
        .Send_in_EX(Send_in_IBUF),
        .Send_in_IN(B_Send_out_INTERNAL),
        .Send_out(M_Send_out));
  (* DONT_TOUCH *) 
  MA_Stage MA
       (.Ack_in(COPY_Ack_out),
        .Ack_out(MA_Ack_out),
        .LOAD_FLG(LOAD_FLG),
        .MR(MR_IBUF),
        .PACKET_IN(FP_PACKET_OUT),
        .PACKET_OUT(MA_PACKET_OUT),
        .Send_in(FP_Send_out),
        .Send_out(MA_Send_out),
        .WRITE_DATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,WRITE_DATA}),
        .WRITE_EN(WRITE_EN));
  (* DONT_TOUCH *) 
  MMCAM_Stage MMCAM
       (.ADDR(ADDR),
        .Ack_in(MMRAM_Ack_out),
        .Ack_out(MMCAM_Ack_out),
        .DEL(DEL),
        .MR(MR_IBUF),
        .PACKET_IN(M_PACKET_OUT),
        .PACKET_OUT(MMCAM_PACKET_OUT),
        .Send_in(M_Send_out),
        .Send_out(MMCAM_Send_out),
        .WR_E(WR_E));
  (* DONT_TOUCH *) 
  MMRAM_Stage MMRAM
       (.ADDR(ADDR),
        .Ack_in(PS_Ack_out),
        .Ack_out(MMRAM_Ack_out),
        .DEL(DEL),
        .MR(MR_IBUF),
        .PACKET_IN(MMCAM_PACKET_OUT),
        .PACKET_OUT(MMRAM_PACKET_OUT),
        .Send_in(MMCAM_Send_out),
        .Send_out(MMRAM_Send_out),
        .WR_E(WR_E));
  IBUF MR_IBUF_inst
       (.I(MR),
        .O(MR_IBUF));
  IBUF \PACKET_IN_IBUF[0]_inst 
       (.I(PACKET_IN[0]),
        .O(PACKET_IN_IBUF[0]));
  IBUF \PACKET_IN_IBUF[10]_inst 
       (.I(PACKET_IN[10]),
        .O(PACKET_IN_IBUF[10]));
  IBUF \PACKET_IN_IBUF[11]_inst 
       (.I(PACKET_IN[11]),
        .O(PACKET_IN_IBUF[11]));
  IBUF \PACKET_IN_IBUF[12]_inst 
       (.I(PACKET_IN[12]),
        .O(PACKET_IN_IBUF[12]));
  IBUF \PACKET_IN_IBUF[13]_inst 
       (.I(PACKET_IN[13]),
        .O(PACKET_IN_IBUF[13]));
  IBUF \PACKET_IN_IBUF[14]_inst 
       (.I(PACKET_IN[14]),
        .O(PACKET_IN_IBUF[14]));
  IBUF \PACKET_IN_IBUF[15]_inst 
       (.I(PACKET_IN[15]),
        .O(PACKET_IN_IBUF[15]));
  IBUF \PACKET_IN_IBUF[16]_inst 
       (.I(PACKET_IN[16]),
        .O(PACKET_IN_IBUF[16]));
  IBUF \PACKET_IN_IBUF[17]_inst 
       (.I(PACKET_IN[17]),
        .O(PACKET_IN_IBUF[17]));
  IBUF \PACKET_IN_IBUF[18]_inst 
       (.I(PACKET_IN[18]),
        .O(PACKET_IN_IBUF[18]));
  IBUF \PACKET_IN_IBUF[19]_inst 
       (.I(PACKET_IN[19]),
        .O(PACKET_IN_IBUF[19]));
  IBUF \PACKET_IN_IBUF[1]_inst 
       (.I(PACKET_IN[1]),
        .O(PACKET_IN_IBUF[1]));
  IBUF \PACKET_IN_IBUF[20]_inst 
       (.I(PACKET_IN[20]),
        .O(PACKET_IN_IBUF[20]));
  IBUF \PACKET_IN_IBUF[21]_inst 
       (.I(PACKET_IN[21]),
        .O(PACKET_IN_IBUF[21]));
  IBUF \PACKET_IN_IBUF[22]_inst 
       (.I(PACKET_IN[22]),
        .O(PACKET_IN_IBUF[22]));
  IBUF \PACKET_IN_IBUF[23]_inst 
       (.I(PACKET_IN[23]),
        .O(PACKET_IN_IBUF[23]));
  IBUF \PACKET_IN_IBUF[24]_inst 
       (.I(PACKET_IN[24]),
        .O(PACKET_IN_IBUF[24]));
  IBUF \PACKET_IN_IBUF[25]_inst 
       (.I(PACKET_IN[25]),
        .O(PACKET_IN_IBUF[25]));
  IBUF \PACKET_IN_IBUF[26]_inst 
       (.I(PACKET_IN[26]),
        .O(PACKET_IN_IBUF[26]));
  IBUF \PACKET_IN_IBUF[27]_inst 
       (.I(PACKET_IN[27]),
        .O(PACKET_IN_IBUF[27]));
  IBUF \PACKET_IN_IBUF[28]_inst 
       (.I(PACKET_IN[28]),
        .O(PACKET_IN_IBUF[28]));
  IBUF \PACKET_IN_IBUF[29]_inst 
       (.I(PACKET_IN[29]),
        .O(PACKET_IN_IBUF[29]));
  IBUF \PACKET_IN_IBUF[2]_inst 
       (.I(PACKET_IN[2]),
        .O(PACKET_IN_IBUF[2]));
  IBUF \PACKET_IN_IBUF[30]_inst 
       (.I(PACKET_IN[30]),
        .O(PACKET_IN_IBUF[30]));
  IBUF \PACKET_IN_IBUF[31]_inst 
       (.I(PACKET_IN[31]),
        .O(PACKET_IN_IBUF[31]));
  IBUF \PACKET_IN_IBUF[32]_inst 
       (.I(PACKET_IN[32]),
        .O(PACKET_IN_IBUF[32]));
  IBUF \PACKET_IN_IBUF[33]_inst 
       (.I(PACKET_IN[33]),
        .O(PACKET_IN_IBUF[33]));
  IBUF \PACKET_IN_IBUF[34]_inst 
       (.I(PACKET_IN[34]),
        .O(PACKET_IN_IBUF[34]));
  IBUF \PACKET_IN_IBUF[35]_inst 
       (.I(PACKET_IN[35]),
        .O(PACKET_IN_IBUF[35]));
  IBUF \PACKET_IN_IBUF[36]_inst 
       (.I(PACKET_IN[36]),
        .O(PACKET_IN_IBUF[36]));
  IBUF \PACKET_IN_IBUF[37]_inst 
       (.I(PACKET_IN[37]),
        .O(PACKET_IN_IBUF[37]));
  IBUF \PACKET_IN_IBUF[3]_inst 
       (.I(PACKET_IN[3]),
        .O(PACKET_IN_IBUF[3]));
  IBUF \PACKET_IN_IBUF[4]_inst 
       (.I(PACKET_IN[4]),
        .O(PACKET_IN_IBUF[4]));
  IBUF \PACKET_IN_IBUF[5]_inst 
       (.I(PACKET_IN[5]),
        .O(PACKET_IN_IBUF[5]));
  IBUF \PACKET_IN_IBUF[6]_inst 
       (.I(PACKET_IN[6]),
        .O(PACKET_IN_IBUF[6]));
  IBUF \PACKET_IN_IBUF[7]_inst 
       (.I(PACKET_IN[7]),
        .O(PACKET_IN_IBUF[7]));
  IBUF \PACKET_IN_IBUF[8]_inst 
       (.I(PACKET_IN[8]),
        .O(PACKET_IN_IBUF[8]));
  IBUF \PACKET_IN_IBUF[9]_inst 
       (.I(PACKET_IN[9]),
        .O(PACKET_IN_IBUF[9]));
  OBUF \PACKET_OUT_OBUF[0]_inst 
       (.I(DL[0]),
        .O(PACKET_OUT[0]));
  OBUF \PACKET_OUT_OBUF[10]_inst 
       (.I(DL[10]),
        .O(PACKET_OUT[10]));
  OBUF \PACKET_OUT_OBUF[11]_inst 
       (.I(DL[11]),
        .O(PACKET_OUT[11]));
  OBUF \PACKET_OUT_OBUF[12]_inst 
       (.I(DL[12]),
        .O(PACKET_OUT[12]));
  OBUF \PACKET_OUT_OBUF[13]_inst 
       (.I(DL[13]),
        .O(PACKET_OUT[13]));
  OBUF \PACKET_OUT_OBUF[14]_inst 
       (.I(DL[14]),
        .O(PACKET_OUT[14]));
  OBUF \PACKET_OUT_OBUF[15]_inst 
       (.I(DL[15]),
        .O(PACKET_OUT[15]));
  OBUF \PACKET_OUT_OBUF[16]_inst 
       (.I(DL[16]),
        .O(PACKET_OUT[16]));
  OBUF \PACKET_OUT_OBUF[17]_inst 
       (.I(DL[17]),
        .O(PACKET_OUT[17]));
  OBUF \PACKET_OUT_OBUF[18]_inst 
       (.I(DL[18]),
        .O(PACKET_OUT[18]));
  OBUF \PACKET_OUT_OBUF[19]_inst 
       (.I(DL[19]),
        .O(PACKET_OUT[19]));
  OBUF \PACKET_OUT_OBUF[1]_inst 
       (.I(DL[1]),
        .O(PACKET_OUT[1]));
  OBUF \PACKET_OUT_OBUF[20]_inst 
       (.I(DL[20]),
        .O(PACKET_OUT[20]));
  OBUF \PACKET_OUT_OBUF[21]_inst 
       (.I(DL[21]),
        .O(PACKET_OUT[21]));
  OBUF \PACKET_OUT_OBUF[22]_inst 
       (.I(DL[22]),
        .O(PACKET_OUT[22]));
  OBUF \PACKET_OUT_OBUF[23]_inst 
       (.I(DL[23]),
        .O(PACKET_OUT[23]));
  OBUF \PACKET_OUT_OBUF[24]_inst 
       (.I(DL[24]),
        .O(PACKET_OUT[24]));
  OBUF \PACKET_OUT_OBUF[25]_inst 
       (.I(DL[25]),
        .O(PACKET_OUT[25]));
  OBUF \PACKET_OUT_OBUF[26]_inst 
       (.I(DL[26]),
        .O(PACKET_OUT[26]));
  OBUF \PACKET_OUT_OBUF[27]_inst 
       (.I(DL[27]),
        .O(PACKET_OUT[27]));
  OBUF \PACKET_OUT_OBUF[28]_inst 
       (.I(DL[28]),
        .O(PACKET_OUT[28]));
  OBUF \PACKET_OUT_OBUF[29]_inst 
       (.I(DL[29]),
        .O(PACKET_OUT[29]));
  OBUF \PACKET_OUT_OBUF[2]_inst 
       (.I(DL[2]),
        .O(PACKET_OUT[2]));
  OBUF \PACKET_OUT_OBUF[30]_inst 
       (.I(DL[30]),
        .O(PACKET_OUT[30]));
  OBUF \PACKET_OUT_OBUF[31]_inst 
       (.I(DL[31]),
        .O(PACKET_OUT[31]));
  OBUF \PACKET_OUT_OBUF[32]_inst 
       (.I(DL[32]),
        .O(PACKET_OUT[32]));
  OBUF \PACKET_OUT_OBUF[33]_inst 
       (.I(DL[33]),
        .O(PACKET_OUT[33]));
  OBUF \PACKET_OUT_OBUF[34]_inst 
       (.I(DL[34]),
        .O(PACKET_OUT[34]));
  OBUF \PACKET_OUT_OBUF[35]_inst 
       (.I(DL[35]),
        .O(PACKET_OUT[35]));
  OBUF \PACKET_OUT_OBUF[36]_inst 
       (.I(DL[36]),
        .O(PACKET_OUT[36]));
  OBUF \PACKET_OUT_OBUF[37]_inst 
       (.I(DL[37]),
        .O(PACKET_OUT[37]));
  OBUF \PACKET_OUT_OBUF[3]_inst 
       (.I(DL[3]),
        .O(PACKET_OUT[3]));
  OBUF \PACKET_OUT_OBUF[4]_inst 
       (.I(DL[4]),
        .O(PACKET_OUT[4]));
  OBUF \PACKET_OUT_OBUF[5]_inst 
       (.I(DL[5]),
        .O(PACKET_OUT[5]));
  OBUF \PACKET_OUT_OBUF[6]_inst 
       (.I(DL[6]),
        .O(PACKET_OUT[6]));
  OBUF \PACKET_OUT_OBUF[7]_inst 
       (.I(DL[7]),
        .O(PACKET_OUT[7]));
  OBUF \PACKET_OUT_OBUF[8]_inst 
       (.I(DL[8]),
        .O(PACKET_OUT[8]));
  OBUF \PACKET_OUT_OBUF[9]_inst 
       (.I(DL[9]),
        .O(PACKET_OUT[9]));
  (* ABSORB = "6'b111111" *) 
  (* ADD = "6'b000000" *) 
  (* ADDC = "6'b000001" *) 
  (* ADDGEN = "6'b101010" *) 
  (* AND = "6'b000100" *) 
  (* BC = "6'b010010" *) 
  (* BNC = "6'b010011" *) 
  (* BNZ = "6'b010001" *) 
  (* BNZL = "6'b011000" *) 
  (* BZ = "6'b010000" *) 
  (* BZL = "6'b011000" *) 
  (* CHGCOL = "6'b101001" *) 
  (* CHGDEST = "6'b110000" *) 
  (* DECGEN = "6'b101100" *) 
  (* DONT_TOUCH *) 
  (* LDM = "6'b100000" *) 
  (* MUL = "6'b000111" *) 
  (* OR = "6'b000101" *) 
  (* ROL = "6'b001010" *) 
  (* ROR = "6'b001011" *) 
  (* SHL = "6'b001000" *) 
  (* SHR = "6'b001001" *) 
  (* STM = "6'b100001" *) 
  (* SUB = "6'b000010" *) 
  (* SUBC = "6'b000011" *) 
  (* XOR = "6'b000110" *) 
  PS_Stage PS
       (.Ack_in(FP_Ack_out),
        .Ack_out(PS_Ack_out),
        .DEL(PS_DEL),
        .MR(MR_IBUF),
        .PACKET_IN(MMRAM_PACKET_OUT),
        .PACKET_OUT(PS_PACKET_OUT),
        .Send_in(MMRAM_Send_out),
        .Send_out(PS_Send_out));
  IBUF Send_in_IBUF_inst
       (.I(Send_in),
        .O(Send_in_IBUF));
  OBUF Send_out_OBUF_inst
       (.I(Send_out_OBUF),
        .O(Send_out));
  (* DONT_TOUCH *) 
  C c
       (.Ack_in(Ack_in_IBUF),
        .Ack_out(C_Ack_out),
        .CP(CP),
        .MR(MR_IBUF),
        .Send_in(B_Send_out_EXTERNAL),
        .Send_out(Send_out_OBUF));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(M_Ack_out));
endmodule

(* dont_touch = "true" *) 
module MA_Stage
   (WRITE_EN,
    LOAD_FLG,
    Send_in,
    Ack_in,
    MR,
    WRITE_DATA,
    PACKET_IN,
    Send_out,
    Ack_out,
    PACKET_OUT);
  input WRITE_EN;
  input LOAD_FLG;
  input Send_in;
  input Ack_in;
  input MR;
  input [15:0]WRITE_DATA;
  input [39:0]PACKET_IN;
  output Send_out;
  output Ack_out;
  output [39:0]PACKET_OUT;

  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire [40:0]DL;
  (* DONT_TOUCH *) wire [15:0]LOAD_DATA;
  wire LOAD_FLG;
  (* DONT_TOUCH *) wire [39:0]MERGE_DATA;
  wire MR;
  (* DONT_TOUCH *) wire [23:0]OTHER_DATA;
  wire [39:16]\^PACKET_IN ;
  wire [39:0]PACKET_OUT;
  (* DONT_TOUCH *) wire [16:0]ResultData;
  wire Send_in;
  wire Send_out;
  wire [15:0]WRITE_DATA;
  wire WRITE_EN;

  assign ResultData[15:0] = PACKET_IN[15:0];
  assign \^PACKET_IN [39:16] = PACKET_IN[39:16];
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst
       (.I0(DL[39]),
        .O(OTHER_DATA[23]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__0
       (.I0(DL[38]),
        .O(OTHER_DATA[22]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__1
       (.I0(DL[37]),
        .O(OTHER_DATA[21]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__10
       (.I0(DL[28]),
        .O(OTHER_DATA[12]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__11
       (.I0(DL[27]),
        .O(OTHER_DATA[11]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__12
       (.I0(DL[26]),
        .O(OTHER_DATA[10]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__13
       (.I0(DL[25]),
        .O(OTHER_DATA[9]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__14
       (.I0(DL[24]),
        .O(OTHER_DATA[8]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__15
       (.I0(DL[23]),
        .O(OTHER_DATA[7]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__16
       (.I0(DL[22]),
        .O(OTHER_DATA[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__17
       (.I0(DL[21]),
        .O(OTHER_DATA[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__18
       (.I0(DL[20]),
        .O(OTHER_DATA[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__19
       (.I0(DL[19]),
        .O(OTHER_DATA[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__2
       (.I0(DL[36]),
        .O(OTHER_DATA[20]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__20
       (.I0(DL[18]),
        .O(OTHER_DATA[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__21
       (.I0(DL[17]),
        .O(OTHER_DATA[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__22
       (.I0(DL[16]),
        .O(OTHER_DATA[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__3
       (.I0(DL[35]),
        .O(OTHER_DATA[19]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__4
       (.I0(DL[34]),
        .O(OTHER_DATA[18]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__5
       (.I0(DL[33]),
        .O(OTHER_DATA[17]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__6
       (.I0(DL[32]),
        .O(OTHER_DATA[16]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__7
       (.I0(DL[31]),
        .O(OTHER_DATA[15]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__8
       (.I0(DL[30]),
        .O(OTHER_DATA[14]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__9
       (.I0(DL[29]),
        .O(OTHER_DATA[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[38] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [38]),
        .Q(DL[38]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[39] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [39]),
        .Q(DL[39]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[40] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(LOAD_FLG),
        .Q(DL[40]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[9]),
        .Q(DL[9]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst
       (.I0(LOAD_DATA[15]),
        .O(MERGE_DATA[15]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__0
       (.I0(LOAD_DATA[14]),
        .O(MERGE_DATA[14]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__1
       (.I0(LOAD_DATA[13]),
        .O(MERGE_DATA[13]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__10
       (.I0(LOAD_DATA[4]),
        .O(MERGE_DATA[4]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__11
       (.I0(LOAD_DATA[3]),
        .O(MERGE_DATA[3]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__12
       (.I0(LOAD_DATA[2]),
        .O(MERGE_DATA[2]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__13
       (.I0(LOAD_DATA[1]),
        .O(MERGE_DATA[1]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__14
       (.I0(LOAD_DATA[0]),
        .O(MERGE_DATA[0]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__2
       (.I0(LOAD_DATA[12]),
        .O(MERGE_DATA[12]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__3
       (.I0(LOAD_DATA[11]),
        .O(MERGE_DATA[11]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__4
       (.I0(LOAD_DATA[10]),
        .O(MERGE_DATA[10]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__5
       (.I0(LOAD_DATA[9]),
        .O(MERGE_DATA[9]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__6
       (.I0(LOAD_DATA[8]),
        .O(MERGE_DATA[8]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__7
       (.I0(LOAD_DATA[7]),
        .O(MERGE_DATA[7]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__8
       (.I0(LOAD_DATA[6]),
        .O(MERGE_DATA[6]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__9
       (.I0(LOAD_DATA[5]),
        .O(MERGE_DATA[5]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst
       (.I0(OTHER_DATA[23]),
        .O(MERGE_DATA[39]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__0
       (.I0(OTHER_DATA[22]),
        .O(MERGE_DATA[38]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__1
       (.I0(OTHER_DATA[21]),
        .O(MERGE_DATA[37]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__10
       (.I0(OTHER_DATA[12]),
        .O(MERGE_DATA[28]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__11
       (.I0(OTHER_DATA[11]),
        .O(MERGE_DATA[27]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__12
       (.I0(OTHER_DATA[10]),
        .O(MERGE_DATA[26]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__13
       (.I0(OTHER_DATA[9]),
        .O(MERGE_DATA[25]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__14
       (.I0(OTHER_DATA[8]),
        .O(MERGE_DATA[24]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__15
       (.I0(OTHER_DATA[7]),
        .O(MERGE_DATA[23]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__16
       (.I0(OTHER_DATA[6]),
        .O(MERGE_DATA[22]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__17
       (.I0(OTHER_DATA[5]),
        .O(MERGE_DATA[21]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__18
       (.I0(OTHER_DATA[4]),
        .O(MERGE_DATA[20]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__19
       (.I0(OTHER_DATA[3]),
        .O(MERGE_DATA[19]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__2
       (.I0(OTHER_DATA[20]),
        .O(MERGE_DATA[36]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__20
       (.I0(OTHER_DATA[2]),
        .O(MERGE_DATA[18]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__21
       (.I0(OTHER_DATA[1]),
        .O(MERGE_DATA[17]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__22
       (.I0(OTHER_DATA[0]),
        .O(MERGE_DATA[16]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__3
       (.I0(OTHER_DATA[19]),
        .O(MERGE_DATA[35]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__4
       (.I0(OTHER_DATA[18]),
        .O(MERGE_DATA[34]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__5
       (.I0(OTHER_DATA[17]),
        .O(MERGE_DATA[33]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__6
       (.I0(OTHER_DATA[16]),
        .O(MERGE_DATA[32]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__7
       (.I0(OTHER_DATA[15]),
        .O(MERGE_DATA[31]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__8
       (.I0(OTHER_DATA[14]),
        .O(MERGE_DATA[30]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__9
       (.I0(OTHER_DATA[13]),
        .O(MERGE_DATA[29]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[0]_INST_0 
       (.I0(MERGE_DATA[0]),
        .I1(DL[40]),
        .I2(DL[0]),
        .O(PACKET_OUT[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[10]_INST_0 
       (.I0(MERGE_DATA[10]),
        .I1(DL[40]),
        .I2(DL[10]),
        .O(PACKET_OUT[10]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[11]_INST_0 
       (.I0(MERGE_DATA[11]),
        .I1(DL[40]),
        .I2(DL[11]),
        .O(PACKET_OUT[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[12]_INST_0 
       (.I0(MERGE_DATA[12]),
        .I1(DL[40]),
        .I2(DL[12]),
        .O(PACKET_OUT[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[13]_INST_0 
       (.I0(MERGE_DATA[13]),
        .I1(DL[40]),
        .I2(DL[13]),
        .O(PACKET_OUT[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[14]_INST_0 
       (.I0(MERGE_DATA[14]),
        .I1(DL[40]),
        .I2(DL[14]),
        .O(PACKET_OUT[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[15]_INST_0 
       (.I0(MERGE_DATA[15]),
        .I1(DL[40]),
        .I2(DL[15]),
        .O(PACKET_OUT[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0 
       (.I0(MERGE_DATA[16]),
        .I1(DL[40]),
        .I2(OTHER_DATA[0]),
        .O(PACKET_OUT[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[17]_INST_0 
       (.I0(MERGE_DATA[17]),
        .I1(DL[40]),
        .I2(OTHER_DATA[1]),
        .O(PACKET_OUT[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[18]_INST_0 
       (.I0(MERGE_DATA[18]),
        .I1(DL[40]),
        .I2(OTHER_DATA[2]),
        .O(PACKET_OUT[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[19]_INST_0 
       (.I0(MERGE_DATA[19]),
        .I1(DL[40]),
        .I2(OTHER_DATA[3]),
        .O(PACKET_OUT[19]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[1]_INST_0 
       (.I0(MERGE_DATA[1]),
        .I1(DL[40]),
        .I2(DL[1]),
        .O(PACKET_OUT[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[20]_INST_0 
       (.I0(MERGE_DATA[20]),
        .I1(DL[40]),
        .I2(OTHER_DATA[4]),
        .O(PACKET_OUT[20]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[21]_INST_0 
       (.I0(MERGE_DATA[21]),
        .I1(DL[40]),
        .I2(OTHER_DATA[5]),
        .O(PACKET_OUT[21]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[22]_INST_0 
       (.I0(MERGE_DATA[22]),
        .I1(DL[40]),
        .I2(OTHER_DATA[6]),
        .O(PACKET_OUT[22]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[23]_INST_0 
       (.I0(MERGE_DATA[23]),
        .I1(DL[40]),
        .I2(OTHER_DATA[7]),
        .O(PACKET_OUT[23]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[24]_INST_0 
       (.I0(MERGE_DATA[24]),
        .I1(DL[40]),
        .I2(OTHER_DATA[8]),
        .O(PACKET_OUT[24]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[25]_INST_0 
       (.I0(MERGE_DATA[25]),
        .I1(DL[40]),
        .I2(OTHER_DATA[9]),
        .O(PACKET_OUT[25]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[26]_INST_0 
       (.I0(MERGE_DATA[26]),
        .I1(DL[40]),
        .I2(OTHER_DATA[10]),
        .O(PACKET_OUT[26]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[27]_INST_0 
       (.I0(MERGE_DATA[27]),
        .I1(DL[40]),
        .I2(OTHER_DATA[11]),
        .O(PACKET_OUT[27]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[28]_INST_0 
       (.I0(MERGE_DATA[28]),
        .I1(DL[40]),
        .I2(OTHER_DATA[12]),
        .O(PACKET_OUT[28]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[29]_INST_0 
       (.I0(MERGE_DATA[29]),
        .I1(DL[40]),
        .I2(OTHER_DATA[13]),
        .O(PACKET_OUT[29]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[2]_INST_0 
       (.I0(MERGE_DATA[2]),
        .I1(DL[40]),
        .I2(DL[2]),
        .O(PACKET_OUT[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[30]_INST_0 
       (.I0(MERGE_DATA[30]),
        .I1(DL[40]),
        .I2(OTHER_DATA[14]),
        .O(PACKET_OUT[30]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[31]_INST_0 
       (.I0(MERGE_DATA[31]),
        .I1(DL[40]),
        .I2(OTHER_DATA[15]),
        .O(PACKET_OUT[31]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[32]_INST_0 
       (.I0(MERGE_DATA[32]),
        .I1(DL[40]),
        .I2(OTHER_DATA[16]),
        .O(PACKET_OUT[32]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[33]_INST_0 
       (.I0(MERGE_DATA[33]),
        .I1(DL[40]),
        .I2(OTHER_DATA[17]),
        .O(PACKET_OUT[33]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[34]_INST_0 
       (.I0(MERGE_DATA[34]),
        .I1(DL[40]),
        .I2(OTHER_DATA[18]),
        .O(PACKET_OUT[34]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[35]_INST_0 
       (.I0(MERGE_DATA[35]),
        .I1(DL[40]),
        .I2(OTHER_DATA[19]),
        .O(PACKET_OUT[35]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[36]_INST_0 
       (.I0(MERGE_DATA[36]),
        .I1(DL[40]),
        .I2(OTHER_DATA[20]),
        .O(PACKET_OUT[36]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[37]_INST_0 
       (.I0(MERGE_DATA[37]),
        .I1(DL[40]),
        .I2(OTHER_DATA[21]),
        .O(PACKET_OUT[37]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[38]_INST_0 
       (.I0(MERGE_DATA[38]),
        .I1(DL[40]),
        .I2(OTHER_DATA[22]),
        .O(PACKET_OUT[38]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[39]_INST_0 
       (.I0(MERGE_DATA[39]),
        .I1(DL[40]),
        .I2(OTHER_DATA[23]),
        .O(PACKET_OUT[39]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[3]_INST_0 
       (.I0(MERGE_DATA[3]),
        .I1(DL[40]),
        .I2(DL[3]),
        .O(PACKET_OUT[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[4]_INST_0 
       (.I0(MERGE_DATA[4]),
        .I1(DL[40]),
        .I2(DL[4]),
        .O(PACKET_OUT[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[5]_INST_0 
       (.I0(MERGE_DATA[5]),
        .I1(DL[40]),
        .I2(DL[5]),
        .O(PACKET_OUT[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[6]_INST_0 
       (.I0(MERGE_DATA[6]),
        .I1(DL[40]),
        .I2(DL[6]),
        .O(PACKET_OUT[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[7]_INST_0 
       (.I0(MERGE_DATA[7]),
        .I1(DL[40]),
        .I2(DL[7]),
        .O(PACKET_OUT[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[8]_INST_0 
       (.I0(MERGE_DATA[8]),
        .I1(DL[40]),
        .I2(DL[8]),
        .O(PACKET_OUT[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[9]_INST_0 
       (.I0(MERGE_DATA[9]),
        .I1(DL[40]),
        .I2(DL[9]),
        .O(PACKET_OUT[9]));
  (* DONT_TOUCH *) 
  C__3 c
       (.Ack_in(Ack_in),
        .Ack_out(Ack_out),
        .CP(CP),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(Send_out));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/DMEM/DMEM.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  DMEM dmem
       (.addra(ResultData[4:0]),
        .clka(CP),
        .dina(WRITE_DATA),
        .douta(LOAD_DATA),
        .wea(WRITE_EN));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(ResultData[16]));
endmodule

(* dont_touch = "true" *) 
module MMCAM_Stage
   (MR,
    Send_in,
    Ack_in,
    PACKET_IN,
    PACKET_OUT,
    WR_E,
    DEL,
    Ack_out,
    Send_out,
    ADDR);
  input MR;
  input Send_in;
  input Ack_in;
  input [37:0]PACKET_IN;
  output [37:0]PACKET_OUT;
  output WR_E;
  output DEL;
  output Ack_out;
  output Send_out;
  output [5:0]ADDR;

  wire [5:0]ADDR;
  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  wire DEL;
  (* DONT_TOUCH *) wire [37:0]DL;
  (* DONT_TOUCH *) wire [19:0]EN;
  (* DONT_TOUCH *) wire [19:0]FIRE;
  wire MR;
  wire [37:0]PACKET_IN;
  wire Send_in;
  wire Send_out;
  (* DONT_TOUCH *) wire [19:0]VALID;
  wire WR_E;

  assign PACKET_OUT[37:0] = DL;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  C__1 c
       (.Ack_in(Ack_in),
        .Ack_out(Ack_out),
        .CP(CP),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(Send_out));
  (* DONT_TOUCH *) 
  ENTRY_FD__1 \entry_fd_loop[0].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[0]),
        .FIRE(FIRE[0]),
        .MR(MR),
        .VALID(VALID[0]));
  (* DONT_TOUCH *) 
  ENTRY_FD__11 \entry_fd_loop[10].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[10]),
        .FIRE(FIRE[10]),
        .MR(MR),
        .VALID(VALID[10]));
  (* DONT_TOUCH *) 
  ENTRY_FD__12 \entry_fd_loop[11].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[11]),
        .FIRE(FIRE[11]),
        .MR(MR),
        .VALID(VALID[11]));
  (* DONT_TOUCH *) 
  ENTRY_FD__13 \entry_fd_loop[12].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[12]),
        .FIRE(FIRE[12]),
        .MR(MR),
        .VALID(VALID[12]));
  (* DONT_TOUCH *) 
  ENTRY_FD__14 \entry_fd_loop[13].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[13]),
        .FIRE(FIRE[13]),
        .MR(MR),
        .VALID(VALID[13]));
  (* DONT_TOUCH *) 
  ENTRY_FD__15 \entry_fd_loop[14].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[14]),
        .FIRE(FIRE[14]),
        .MR(MR),
        .VALID(VALID[14]));
  (* DONT_TOUCH *) 
  ENTRY_FD__16 \entry_fd_loop[15].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[15]),
        .FIRE(FIRE[15]),
        .MR(MR),
        .VALID(VALID[15]));
  (* DONT_TOUCH *) 
  ENTRY_FD__17 \entry_fd_loop[16].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[16]),
        .FIRE(FIRE[16]),
        .MR(MR),
        .VALID(VALID[16]));
  (* DONT_TOUCH *) 
  ENTRY_FD__18 \entry_fd_loop[17].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[17]),
        .FIRE(FIRE[17]),
        .MR(MR),
        .VALID(VALID[17]));
  (* DONT_TOUCH *) 
  ENTRY_FD__19 \entry_fd_loop[18].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[18]),
        .FIRE(FIRE[18]),
        .MR(MR),
        .VALID(VALID[18]));
  (* DONT_TOUCH *) 
  ENTRY_FD \entry_fd_loop[19].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[19]),
        .FIRE(FIRE[19]),
        .MR(MR),
        .VALID(VALID[19]));
  (* DONT_TOUCH *) 
  ENTRY_FD__2 \entry_fd_loop[1].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[1]),
        .FIRE(FIRE[1]),
        .MR(MR),
        .VALID(VALID[1]));
  (* DONT_TOUCH *) 
  ENTRY_FD__3 \entry_fd_loop[2].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[2]),
        .FIRE(FIRE[2]),
        .MR(MR),
        .VALID(VALID[2]));
  (* DONT_TOUCH *) 
  ENTRY_FD__4 \entry_fd_loop[3].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[3]),
        .FIRE(FIRE[3]),
        .MR(MR),
        .VALID(VALID[3]));
  (* DONT_TOUCH *) 
  ENTRY_FD__5 \entry_fd_loop[4].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[4]),
        .FIRE(FIRE[4]),
        .MR(MR),
        .VALID(VALID[4]));
  (* DONT_TOUCH *) 
  ENTRY_FD__6 \entry_fd_loop[5].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[5]),
        .FIRE(FIRE[5]),
        .MR(MR),
        .VALID(VALID[5]));
  (* DONT_TOUCH *) 
  ENTRY_FD__7 \entry_fd_loop[6].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[6]),
        .FIRE(FIRE[6]),
        .MR(MR),
        .VALID(VALID[6]));
  (* DONT_TOUCH *) 
  ENTRY_FD__8 \entry_fd_loop[7].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[7]),
        .FIRE(FIRE[7]),
        .MR(MR),
        .VALID(VALID[7]));
  (* DONT_TOUCH *) 
  ENTRY_FD__9 \entry_fd_loop[8].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[8]),
        .FIRE(FIRE[8]),
        .MR(MR),
        .VALID(VALID[8]));
  (* DONT_TOUCH *) 
  ENTRY_FD__10 \entry_fd_loop[9].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[9]),
        .FIRE(FIRE[9]),
        .MR(MR),
        .VALID(VALID[9]));
  (* DONT_TOUCH *) 
  OR_AM_MA oam
       (.ADDR(ADDR),
        .CP(CP),
        .DEL(DEL),
        .EN(EN),
        .FIRE(FIRE),
        .MF(PACKET_IN[18]),
        .MR(MR),
        .VALID(VALID),
        .WR_E(WR_E));
endmodule

(* CHECK_LICENSE_TYPE = "MMRAM,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module MMRAM
   (clka,
    wea,
    addra,
    dina,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [19:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [19:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [19:0]dina;
  wire [19:0]douta;
  wire [0:0]wea;
  wire NLW_U0_clkb_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_ena_UNCONNECTED;
  wire NLW_U0_enb_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [4:0]NLW_U0_addrb_UNCONNECTED;
  wire [19:0]NLW_U0_dinb_UNCONNECTED;
  wire [19:19]NLW_U0_douta_UNCONNECTED;
  wire [19:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [19:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [19:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_web_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     3.03925 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "MMRAM.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "0" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "20" *) 
  (* C_READ_WIDTH_B = "20" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "20" *) 
  (* C_WRITE_WIDTH_B = "20" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  MMRAM_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb(NLW_U0_addrb_UNCONNECTED[4:0]),
        .clka(clka),
        .clkb(NLW_U0_clkb_UNCONNECTED),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(dina),
        .dinb(NLW_U0_dinb_UNCONNECTED[19:0]),
        .douta({NLW_U0_douta_UNCONNECTED[19],douta[18:0]}),
        .doutb(NLW_U0_doutb_UNCONNECTED[19:0]),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(NLW_U0_ena_UNCONNECTED),
        .enb(NLW_U0_enb_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[19:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[19:0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(wea),
        .web(NLW_U0_web_UNCONNECTED[0]));
endmodule

(* dont_touch = "true" *) 
module MMRAM_Stage
   (WR_E,
    DEL,
    MR,
    Send_in,
    Ack_in,
    ADDR,
    PACKET_IN,
    PACKET_OUT,
    Send_out,
    Ack_out);
  input WR_E;
  input DEL;
  input MR;
  input Send_in;
  input Ack_in;
  input [5:0]ADDR;
  input [37:0]PACKET_IN;
  output [51:0]PACKET_OUT;
  output Send_out;
  output Ack_out;

  wire [5:0]ADDR;
  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire [15:0]CST_DATA;
  (* DONT_TOUCH *) wire [19:0]DATA_IN;
  (* DONT_TOUCH *) wire [19:0]DATA_OUT;
  wire DEL;
  (* DONT_TOUCH *) wire [37:0]DL;
  (* DONT_TOUCH *) wire [53:0]MERGE2_OUT;
  (* DONT_TOUCH *) wire MF;
  wire MR;
  (* DONT_TOUCH *) wire [53:0]MUX_OUT;
  wire [37:27]\^PACKET_IN ;
  wire [31:0]\^PACKET_OUT ;
  wire Send_in;
  wire Send_out;
  wire WR_E;
  (* DONT_TOUCH *) wire [6:0]dest;
  wire NLW_MERGE1_OUT_inferred_i_1_O_UNCONNECTED;
  wire NLW_MERGE1_OUT_inferred_i_2_O_UNCONNECTED;
  wire NLW_MERGE1_OUT_inferred_i_3_O_UNCONNECTED;

  assign DATA_IN = PACKET_IN[19:0];
  assign PACKET_OUT[51:34] = MUX_OUT[53:36];
  assign PACKET_OUT[33:32] = MUX_OUT[33:32];
  assign PACKET_OUT[31:0] = \^PACKET_OUT [31:0];
  assign \^PACKET_IN [37:27] = PACKET_IN[37:27];
  assign dest = PACKET_IN[26:20];
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst
       (.I0(CST_DATA[15]),
        .O(MERGE2_OUT[15]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__0
       (.I0(CST_DATA[14]),
        .O(MERGE2_OUT[14]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__1
       (.I0(CST_DATA[13]),
        .O(MERGE2_OUT[13]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__10
       (.I0(CST_DATA[4]),
        .O(MERGE2_OUT[4]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__11
       (.I0(CST_DATA[3]),
        .O(MERGE2_OUT[3]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__12
       (.I0(CST_DATA[2]),
        .O(MERGE2_OUT[2]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__13
       (.I0(CST_DATA[1]),
        .O(MERGE2_OUT[1]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__14
       (.I0(CST_DATA[0]),
        .O(MERGE2_OUT[0]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__2
       (.I0(CST_DATA[12]),
        .O(MERGE2_OUT[12]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__3
       (.I0(CST_DATA[11]),
        .O(MERGE2_OUT[11]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__4
       (.I0(CST_DATA[10]),
        .O(MERGE2_OUT[10]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__5
       (.I0(CST_DATA[9]),
        .O(MERGE2_OUT[9]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__6
       (.I0(CST_DATA[8]),
        .O(MERGE2_OUT[8]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__7
       (.I0(CST_DATA[7]),
        .O(MERGE2_OUT[7]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__8
       (.I0(CST_DATA[6]),
        .O(MERGE2_OUT[6]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__9
       (.I0(CST_DATA[5]),
        .O(MERGE2_OUT[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst
       (.I0(DL[37]),
        .O(MERGE2_OUT[53]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__0
       (.I0(DL[36]),
        .O(MERGE2_OUT[52]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__1
       (.I0(DL[35]),
        .O(MERGE2_OUT[51]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__10
       (.I0(DL[26]),
        .O(MERGE2_OUT[42]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__11
       (.I0(DL[25]),
        .O(MERGE2_OUT[41]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__12
       (.I0(DL[24]),
        .O(MERGE2_OUT[40]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__13
       (.I0(DL[23]),
        .O(MERGE2_OUT[39]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__14
       (.I0(DL[22]),
        .O(MERGE2_OUT[38]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__15
       (.I0(DL[21]),
        .O(MERGE2_OUT[37]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__16
       (.I0(DL[20]),
        .O(MERGE2_OUT[36]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__17
       (.I0(DL[19]),
        .O(MERGE2_OUT[35]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__18
       (.I0(DL[18]),
        .O(MERGE2_OUT[34]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__19
       (.I0(DL[17]),
        .O(MERGE2_OUT[33]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__2
       (.I0(DL[34]),
        .O(MERGE2_OUT[50]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__20
       (.I0(DL[16]),
        .O(MERGE2_OUT[32]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__21
       (.I0(DL[15]),
        .O(MERGE2_OUT[31]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__22
       (.I0(DL[14]),
        .O(MERGE2_OUT[30]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__23
       (.I0(DL[13]),
        .O(MERGE2_OUT[29]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__24
       (.I0(DL[12]),
        .O(MERGE2_OUT[28]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__25
       (.I0(DL[11]),
        .O(MERGE2_OUT[27]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__26
       (.I0(DL[10]),
        .O(MERGE2_OUT[26]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__27
       (.I0(DL[9]),
        .O(MERGE2_OUT[25]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__28
       (.I0(DL[8]),
        .O(MERGE2_OUT[24]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__29
       (.I0(DL[7]),
        .O(MERGE2_OUT[23]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__3
       (.I0(DL[33]),
        .O(MERGE2_OUT[49]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__30
       (.I0(DL[6]),
        .O(MERGE2_OUT[22]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__31
       (.I0(DL[5]),
        .O(MERGE2_OUT[21]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__32
       (.I0(DL[4]),
        .O(MERGE2_OUT[20]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__33
       (.I0(DL[3]),
        .O(MERGE2_OUT[19]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__34
       (.I0(DL[2]),
        .O(MERGE2_OUT[18]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__35
       (.I0(DL[1]),
        .O(MERGE2_OUT[17]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__36
       (.I0(DL[0]),
        .O(MERGE2_OUT[16]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__4
       (.I0(DL[32]),
        .O(MERGE2_OUT[48]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__5
       (.I0(DL[31]),
        .O(MERGE2_OUT[47]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__6
       (.I0(DL[30]),
        .O(MERGE2_OUT[46]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__7
       (.I0(DL[29]),
        .O(MERGE2_OUT[45]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__8
       (.I0(DL[28]),
        .O(MERGE2_OUT[44]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__9
       (.I0(DL[27]),
        .O(MERGE2_OUT[43]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[0]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[1]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[2]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[3]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[4]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[5]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[6]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[9]),
        .Q(DL[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    MERGE1_OUT_inferred_i_1
       (.I0(MERGE2_OUT[34]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[18]),
        .O(NLW_MERGE1_OUT_inferred_i_1_O_UNCONNECTED));
  LUT3 #(
    .INIT(8'hB8)) 
    MERGE1_OUT_inferred_i_2
       (.I0(MERGE2_OUT[33]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[17]),
        .O(NLW_MERGE1_OUT_inferred_i_2_O_UNCONNECTED));
  LUT3 #(
    .INIT(8'hB8)) 
    MERGE1_OUT_inferred_i_3
       (.I0(MERGE2_OUT[32]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[16]),
        .O(NLW_MERGE1_OUT_inferred_i_3_O_UNCONNECTED));
  LUT1 #(
    .INIT(2'h2)) 
    MF_inst
       (.I0(MERGE2_OUT[34]),
        .O(MF));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_1
       (.I0(MERGE2_OUT[53]),
        .I1(MERGE2_OUT[53]),
        .I2(MF),
        .O(MUX_OUT[53]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_10
       (.I0(MERGE2_OUT[44]),
        .I1(MERGE2_OUT[44]),
        .I2(MF),
        .O(MUX_OUT[44]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_11
       (.I0(MERGE2_OUT[43]),
        .I1(MERGE2_OUT[43]),
        .I2(MF),
        .O(MUX_OUT[43]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_12
       (.I0(MERGE2_OUT[42]),
        .I1(MERGE2_OUT[42]),
        .I2(MF),
        .O(MUX_OUT[42]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_13
       (.I0(MERGE2_OUT[41]),
        .I1(MERGE2_OUT[41]),
        .I2(MF),
        .O(MUX_OUT[41]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_14
       (.I0(MERGE2_OUT[40]),
        .I1(MERGE2_OUT[40]),
        .I2(MF),
        .O(MUX_OUT[40]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_15
       (.I0(MERGE2_OUT[39]),
        .I1(MERGE2_OUT[39]),
        .I2(MF),
        .O(MUX_OUT[39]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_16
       (.I0(MERGE2_OUT[38]),
        .I1(MERGE2_OUT[38]),
        .I2(MF),
        .O(MUX_OUT[38]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_17
       (.I0(MERGE2_OUT[37]),
        .I1(MERGE2_OUT[37]),
        .I2(MF),
        .O(MUX_OUT[37]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_18
       (.I0(MERGE2_OUT[36]),
        .I1(MERGE2_OUT[36]),
        .I2(MF),
        .O(MUX_OUT[36]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_19
       (.I0(MERGE2_OUT[35]),
        .I1(MERGE2_OUT[35]),
        .I2(MF),
        .O(MUX_OUT[35]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_2
       (.I0(MERGE2_OUT[52]),
        .I1(MERGE2_OUT[52]),
        .I2(MF),
        .O(MUX_OUT[52]));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    MUX_OUT_inferred_i_20
       (.I0(MERGE2_OUT[34]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[18]),
        .I3(MERGE2_OUT[34]),
        .I4(MF),
        .O(MUX_OUT[34]));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    MUX_OUT_inferred_i_21
       (.I0(MERGE2_OUT[33]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[17]),
        .I3(MERGE2_OUT[33]),
        .I4(MF),
        .O(MUX_OUT[33]));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    MUX_OUT_inferred_i_22
       (.I0(MERGE2_OUT[32]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[16]),
        .I3(MERGE2_OUT[32]),
        .I4(MF),
        .O(MUX_OUT[32]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_23
       (.I0(MERGE2_OUT[31]),
        .I1(MERGE2_OUT[31]),
        .I2(MF),
        .O(MUX_OUT[31]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_24
       (.I0(MERGE2_OUT[30]),
        .I1(MERGE2_OUT[30]),
        .I2(MF),
        .O(MUX_OUT[30]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_25
       (.I0(MERGE2_OUT[29]),
        .I1(MERGE2_OUT[29]),
        .I2(MF),
        .O(MUX_OUT[29]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_26
       (.I0(MERGE2_OUT[28]),
        .I1(MERGE2_OUT[28]),
        .I2(MF),
        .O(MUX_OUT[28]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_27
       (.I0(MERGE2_OUT[27]),
        .I1(MERGE2_OUT[27]),
        .I2(MF),
        .O(MUX_OUT[27]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_28
       (.I0(MERGE2_OUT[26]),
        .I1(MERGE2_OUT[26]),
        .I2(MF),
        .O(MUX_OUT[26]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_29
       (.I0(MERGE2_OUT[25]),
        .I1(MERGE2_OUT[25]),
        .I2(MF),
        .O(MUX_OUT[25]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_3
       (.I0(MERGE2_OUT[51]),
        .I1(MERGE2_OUT[51]),
        .I2(MF),
        .O(MUX_OUT[51]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_30
       (.I0(MERGE2_OUT[24]),
        .I1(MERGE2_OUT[24]),
        .I2(MF),
        .O(MUX_OUT[24]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_31
       (.I0(MERGE2_OUT[23]),
        .I1(MERGE2_OUT[23]),
        .I2(MF),
        .O(MUX_OUT[23]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_32
       (.I0(MERGE2_OUT[22]),
        .I1(MERGE2_OUT[22]),
        .I2(MF),
        .O(MUX_OUT[22]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_33
       (.I0(MERGE2_OUT[21]),
        .I1(MERGE2_OUT[21]),
        .I2(MF),
        .O(MUX_OUT[21]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_34
       (.I0(MERGE2_OUT[20]),
        .I1(MERGE2_OUT[20]),
        .I2(MF),
        .O(MUX_OUT[20]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_35
       (.I0(MERGE2_OUT[19]),
        .I1(MERGE2_OUT[19]),
        .I2(MF),
        .O(MUX_OUT[19]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_36
       (.I0(MERGE2_OUT[18]),
        .I1(MERGE2_OUT[18]),
        .I2(MF),
        .O(MUX_OUT[18]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_37
       (.I0(MERGE2_OUT[17]),
        .I1(MERGE2_OUT[17]),
        .I2(MF),
        .O(MUX_OUT[17]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_38
       (.I0(MERGE2_OUT[16]),
        .I1(MERGE2_OUT[16]),
        .I2(MF),
        .O(MUX_OUT[16]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_39
       (.I0(DATA_OUT[15]),
        .I1(MERGE2_OUT[15]),
        .I2(MF),
        .O(MUX_OUT[15]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_4
       (.I0(MERGE2_OUT[50]),
        .I1(MERGE2_OUT[50]),
        .I2(MF),
        .O(MUX_OUT[50]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_40
       (.I0(DATA_OUT[14]),
        .I1(MERGE2_OUT[14]),
        .I2(MF),
        .O(MUX_OUT[14]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_41
       (.I0(DATA_OUT[13]),
        .I1(MERGE2_OUT[13]),
        .I2(MF),
        .O(MUX_OUT[13]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_42
       (.I0(DATA_OUT[12]),
        .I1(MERGE2_OUT[12]),
        .I2(MF),
        .O(MUX_OUT[12]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_43
       (.I0(DATA_OUT[11]),
        .I1(MERGE2_OUT[11]),
        .I2(MF),
        .O(MUX_OUT[11]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_44
       (.I0(DATA_OUT[10]),
        .I1(MERGE2_OUT[10]),
        .I2(MF),
        .O(MUX_OUT[10]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_45
       (.I0(DATA_OUT[9]),
        .I1(MERGE2_OUT[9]),
        .I2(MF),
        .O(MUX_OUT[9]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_46
       (.I0(DATA_OUT[8]),
        .I1(MERGE2_OUT[8]),
        .I2(MF),
        .O(MUX_OUT[8]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_47
       (.I0(DATA_OUT[7]),
        .I1(MERGE2_OUT[7]),
        .I2(MF),
        .O(MUX_OUT[7]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_48
       (.I0(DATA_OUT[6]),
        .I1(MERGE2_OUT[6]),
        .I2(MF),
        .O(MUX_OUT[6]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_49
       (.I0(DATA_OUT[5]),
        .I1(MERGE2_OUT[5]),
        .I2(MF),
        .O(MUX_OUT[5]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_5
       (.I0(MERGE2_OUT[49]),
        .I1(MERGE2_OUT[49]),
        .I2(MF),
        .O(MUX_OUT[49]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_50
       (.I0(DATA_OUT[4]),
        .I1(MERGE2_OUT[4]),
        .I2(MF),
        .O(MUX_OUT[4]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_51
       (.I0(DATA_OUT[3]),
        .I1(MERGE2_OUT[3]),
        .I2(MF),
        .O(MUX_OUT[3]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_52
       (.I0(DATA_OUT[2]),
        .I1(MERGE2_OUT[2]),
        .I2(MF),
        .O(MUX_OUT[2]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_53
       (.I0(DATA_OUT[1]),
        .I1(MERGE2_OUT[1]),
        .I2(MF),
        .O(MUX_OUT[1]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_54
       (.I0(DATA_OUT[0]),
        .I1(MERGE2_OUT[0]),
        .I2(MF),
        .O(MUX_OUT[0]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_6
       (.I0(MERGE2_OUT[48]),
        .I1(MERGE2_OUT[48]),
        .I2(MF),
        .O(MUX_OUT[48]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_7
       (.I0(MERGE2_OUT[47]),
        .I1(MERGE2_OUT[47]),
        .I2(MF),
        .O(MUX_OUT[47]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_8
       (.I0(MERGE2_OUT[46]),
        .I1(MERGE2_OUT[46]),
        .I2(MF),
        .O(MUX_OUT[46]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_9
       (.I0(MERGE2_OUT[45]),
        .I1(MERGE2_OUT[45]),
        .I2(MF),
        .O(MUX_OUT[45]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[0]_INST_0 
       (.I0(MUX_OUT[16]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[0]),
        .O(\^PACKET_OUT [0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[10]_INST_0 
       (.I0(MUX_OUT[26]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[10]),
        .O(\^PACKET_OUT [10]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[11]_INST_0 
       (.I0(MUX_OUT[27]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[11]),
        .O(\^PACKET_OUT [11]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[12]_INST_0 
       (.I0(MUX_OUT[28]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[12]),
        .O(\^PACKET_OUT [12]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[13]_INST_0 
       (.I0(MUX_OUT[29]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[13]),
        .O(\^PACKET_OUT [13]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[14]_INST_0 
       (.I0(MUX_OUT[30]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[14]),
        .O(\^PACKET_OUT [14]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[15]_INST_0 
       (.I0(MUX_OUT[31]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[15]),
        .O(\^PACKET_OUT [15]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0 
       (.I0(MUX_OUT[0]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[16]),
        .O(\^PACKET_OUT [16]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[17]_INST_0 
       (.I0(MUX_OUT[1]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[17]),
        .O(\^PACKET_OUT [17]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[18]_INST_0 
       (.I0(MUX_OUT[2]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[18]),
        .O(\^PACKET_OUT [18]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[19]_INST_0 
       (.I0(MUX_OUT[3]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[19]),
        .O(\^PACKET_OUT [19]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[1]_INST_0 
       (.I0(MUX_OUT[17]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[1]),
        .O(\^PACKET_OUT [1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[20]_INST_0 
       (.I0(MUX_OUT[4]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[20]),
        .O(\^PACKET_OUT [20]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[21]_INST_0 
       (.I0(MUX_OUT[5]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[21]),
        .O(\^PACKET_OUT [21]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[22]_INST_0 
       (.I0(MUX_OUT[6]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[22]),
        .O(\^PACKET_OUT [22]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[23]_INST_0 
       (.I0(MUX_OUT[7]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[23]),
        .O(\^PACKET_OUT [23]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[24]_INST_0 
       (.I0(MUX_OUT[8]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[24]),
        .O(\^PACKET_OUT [24]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[25]_INST_0 
       (.I0(MUX_OUT[9]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[25]),
        .O(\^PACKET_OUT [25]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[26]_INST_0 
       (.I0(MUX_OUT[10]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[26]),
        .O(\^PACKET_OUT [26]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[27]_INST_0 
       (.I0(MUX_OUT[11]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[27]),
        .O(\^PACKET_OUT [27]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[28]_INST_0 
       (.I0(MUX_OUT[12]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[28]),
        .O(\^PACKET_OUT [28]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[29]_INST_0 
       (.I0(MUX_OUT[13]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[29]),
        .O(\^PACKET_OUT [29]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[2]_INST_0 
       (.I0(MUX_OUT[18]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[2]),
        .O(\^PACKET_OUT [2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[30]_INST_0 
       (.I0(MUX_OUT[14]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[30]),
        .O(\^PACKET_OUT [30]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[31]_INST_0 
       (.I0(MUX_OUT[15]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[31]),
        .O(\^PACKET_OUT [31]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[3]_INST_0 
       (.I0(MUX_OUT[19]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[3]),
        .O(\^PACKET_OUT [3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[4]_INST_0 
       (.I0(MUX_OUT[20]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[4]),
        .O(\^PACKET_OUT [4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[5]_INST_0 
       (.I0(MUX_OUT[21]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[5]),
        .O(\^PACKET_OUT [5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[6]_INST_0 
       (.I0(MUX_OUT[22]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[6]),
        .O(\^PACKET_OUT [6]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[7]_INST_0 
       (.I0(MUX_OUT[23]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[7]),
        .O(\^PACKET_OUT [7]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[8]_INST_0 
       (.I0(MUX_OUT[24]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[8]),
        .O(\^PACKET_OUT [8]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[9]_INST_0 
       (.I0(MUX_OUT[25]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[9]),
        .O(\^PACKET_OUT [9]));
  (* DONT_TOUCH *) 
  CE__1 ce
       (.CE_Ack_in(Ack_in),
        .CE_Ack_out(Ack_out),
        .CE_CP(CP),
        .CE_Send_in(Send_in),
        .CE_Send_out(Send_out),
        .Exb(DEL),
        .MR(MR));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/CMEM/CMEM.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  CMEM cmem
       (.addra(dest[4:0]),
        .clka(CP),
        .douta(CST_DATA));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/MMRAM/MMRAM.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  MMRAM mmram
       (.addra(ADDR[4:0]),
        .clka(CP),
        .dina(DATA_IN),
        .douta(DATA_OUT),
        .wea(WR_E));
endmodule

(* dont_touch = "true" *) 
module M_Stage
   (MR,
    Send_in_EX,
    Send_in_IN,
    Ack_in,
    PACKET_IN_EXTERNAL,
    PACKET_IN_INTERNAL,
    Ack_out_EX,
    Ack_out_IN,
    Send_out,
    PACKET_OUT);
  input MR;
  input Send_in_EX;
  input Send_in_IN;
  input Ack_in;
  input [37:0]PACKET_IN_EXTERNAL;
  input [37:0]PACKET_IN_INTERNAL;
  output Ack_out_EX;
  output Ack_out_IN;
  output Send_out;
  output [37:0]PACKET_OUT;

  wire AEB;
  wire Ack_in;
  wire Ack_out_EX;
  wire Ack_out_IN;
  (* DONT_TOUCH *) wire CP_EXTERNAL;
  (* DONT_TOUCH *) wire CP_INTERNAL;
  (* DONT_TOUCH *) wire [37:0]DL_EX;
  (* DONT_TOUCH *) wire [37:0]DL_IN;
  wire MR;
  wire [37:0]PACKET_IN_EXTERNAL;
  wire [37:0]PACKET_IN_INTERNAL;
  wire [37:0]PACKET_OUT;
  wire Send_in_EX;
  wire Send_in_IN;
  wire Send_out;

  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[0] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[0]),
        .Q(DL_EX[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[10] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[10]),
        .Q(DL_EX[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[11] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[11]),
        .Q(DL_EX[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[12] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[12]),
        .Q(DL_EX[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[13] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[13]),
        .Q(DL_EX[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[14] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[14]),
        .Q(DL_EX[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[15] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[15]),
        .Q(DL_EX[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[16] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[16]),
        .Q(DL_EX[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[17] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[17]),
        .Q(DL_EX[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[18] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[18]),
        .Q(DL_EX[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[19] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[19]),
        .Q(DL_EX[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[1] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[1]),
        .Q(DL_EX[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[20] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[20]),
        .Q(DL_EX[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[21] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[21]),
        .Q(DL_EX[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[22] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[22]),
        .Q(DL_EX[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[23] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[23]),
        .Q(DL_EX[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[24] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[24]),
        .Q(DL_EX[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[25] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[25]),
        .Q(DL_EX[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[26] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[26]),
        .Q(DL_EX[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[27] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[27]),
        .Q(DL_EX[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[28] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[28]),
        .Q(DL_EX[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[29] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[29]),
        .Q(DL_EX[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[2] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[2]),
        .Q(DL_EX[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[30] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[30]),
        .Q(DL_EX[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[31] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[31]),
        .Q(DL_EX[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[32] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[32]),
        .Q(DL_EX[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[33] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[33]),
        .Q(DL_EX[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[34] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[34]),
        .Q(DL_EX[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[35] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[35]),
        .Q(DL_EX[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[36] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[36]),
        .Q(DL_EX[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[37] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[37]),
        .Q(DL_EX[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[3] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[3]),
        .Q(DL_EX[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[4] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[4]),
        .Q(DL_EX[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[5] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[5]),
        .Q(DL_EX[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[6] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[6]),
        .Q(DL_EX[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[7] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[7]),
        .Q(DL_EX[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[8] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[8]),
        .Q(DL_EX[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[9] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[9]),
        .Q(DL_EX[9]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[0] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[0]),
        .Q(DL_IN[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[10] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[10]),
        .Q(DL_IN[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[11] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[11]),
        .Q(DL_IN[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[12] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[12]),
        .Q(DL_IN[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[13] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[13]),
        .Q(DL_IN[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[14] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[14]),
        .Q(DL_IN[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[15] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[15]),
        .Q(DL_IN[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[16] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[16]),
        .Q(DL_IN[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[17] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[17]),
        .Q(DL_IN[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[18] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[18]),
        .Q(DL_IN[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[19] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[19]),
        .Q(DL_IN[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[1] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[1]),
        .Q(DL_IN[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[20] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[20]),
        .Q(DL_IN[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[21] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[21]),
        .Q(DL_IN[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[22] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[22]),
        .Q(DL_IN[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[23] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[23]),
        .Q(DL_IN[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[24] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[24]),
        .Q(DL_IN[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[25] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[25]),
        .Q(DL_IN[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[26] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[26]),
        .Q(DL_IN[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[27] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[27]),
        .Q(DL_IN[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[28] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[28]),
        .Q(DL_IN[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[29] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[29]),
        .Q(DL_IN[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[2] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[2]),
        .Q(DL_IN[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[30] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[30]),
        .Q(DL_IN[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[31] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[31]),
        .Q(DL_IN[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[32] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[32]),
        .Q(DL_IN[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[33] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[33]),
        .Q(DL_IN[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[34] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[34]),
        .Q(DL_IN[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[35] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[35]),
        .Q(DL_IN[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[36] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[36]),
        .Q(DL_IN[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[37] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[37]),
        .Q(DL_IN[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[3] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[3]),
        .Q(DL_IN[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[4] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[4]),
        .Q(DL_IN[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[5] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[5]),
        .Q(DL_IN[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[6] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[6]),
        .Q(DL_IN[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[7] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[7]),
        .Q(DL_IN[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[8] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[8]),
        .Q(DL_IN[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[9] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[9]),
        .Q(DL_IN[9]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[0]_INST_0 
       (.I0(DL_IN[0]),
        .I1(DL_EX[0]),
        .I2(AEB),
        .O(PACKET_OUT[0]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[10]_INST_0 
       (.I0(DL_IN[10]),
        .I1(DL_EX[10]),
        .I2(AEB),
        .O(PACKET_OUT[10]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[11]_INST_0 
       (.I0(DL_IN[11]),
        .I1(DL_EX[11]),
        .I2(AEB),
        .O(PACKET_OUT[11]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[12]_INST_0 
       (.I0(DL_IN[12]),
        .I1(DL_EX[12]),
        .I2(AEB),
        .O(PACKET_OUT[12]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[13]_INST_0 
       (.I0(DL_IN[13]),
        .I1(DL_EX[13]),
        .I2(AEB),
        .O(PACKET_OUT[13]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[14]_INST_0 
       (.I0(DL_IN[14]),
        .I1(DL_EX[14]),
        .I2(AEB),
        .O(PACKET_OUT[14]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[15]_INST_0 
       (.I0(DL_IN[15]),
        .I1(DL_EX[15]),
        .I2(AEB),
        .O(PACKET_OUT[15]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[16]_INST_0 
       (.I0(DL_IN[16]),
        .I1(DL_EX[16]),
        .I2(AEB),
        .O(PACKET_OUT[16]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[17]_INST_0 
       (.I0(DL_IN[17]),
        .I1(DL_EX[17]),
        .I2(AEB),
        .O(PACKET_OUT[17]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[18]_INST_0 
       (.I0(DL_IN[18]),
        .I1(DL_EX[18]),
        .I2(AEB),
        .O(PACKET_OUT[18]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[19]_INST_0 
       (.I0(DL_IN[19]),
        .I1(DL_EX[19]),
        .I2(AEB),
        .O(PACKET_OUT[19]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[1]_INST_0 
       (.I0(DL_IN[1]),
        .I1(DL_EX[1]),
        .I2(AEB),
        .O(PACKET_OUT[1]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[20]_INST_0 
       (.I0(DL_IN[20]),
        .I1(DL_EX[20]),
        .I2(AEB),
        .O(PACKET_OUT[20]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[21]_INST_0 
       (.I0(DL_IN[21]),
        .I1(DL_EX[21]),
        .I2(AEB),
        .O(PACKET_OUT[21]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[22]_INST_0 
       (.I0(DL_IN[22]),
        .I1(DL_EX[22]),
        .I2(AEB),
        .O(PACKET_OUT[22]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[23]_INST_0 
       (.I0(DL_IN[23]),
        .I1(DL_EX[23]),
        .I2(AEB),
        .O(PACKET_OUT[23]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[24]_INST_0 
       (.I0(DL_IN[24]),
        .I1(DL_EX[24]),
        .I2(AEB),
        .O(PACKET_OUT[24]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[25]_INST_0 
       (.I0(DL_IN[25]),
        .I1(DL_EX[25]),
        .I2(AEB),
        .O(PACKET_OUT[25]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[26]_INST_0 
       (.I0(DL_IN[26]),
        .I1(DL_EX[26]),
        .I2(AEB),
        .O(PACKET_OUT[26]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[27]_INST_0 
       (.I0(DL_IN[27]),
        .I1(DL_EX[27]),
        .I2(AEB),
        .O(PACKET_OUT[27]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[28]_INST_0 
       (.I0(DL_IN[28]),
        .I1(DL_EX[28]),
        .I2(AEB),
        .O(PACKET_OUT[28]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[29]_INST_0 
       (.I0(DL_IN[29]),
        .I1(DL_EX[29]),
        .I2(AEB),
        .O(PACKET_OUT[29]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[2]_INST_0 
       (.I0(DL_IN[2]),
        .I1(DL_EX[2]),
        .I2(AEB),
        .O(PACKET_OUT[2]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[30]_INST_0 
       (.I0(DL_IN[30]),
        .I1(DL_EX[30]),
        .I2(AEB),
        .O(PACKET_OUT[30]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[31]_INST_0 
       (.I0(DL_IN[31]),
        .I1(DL_EX[31]),
        .I2(AEB),
        .O(PACKET_OUT[31]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[32]_INST_0 
       (.I0(DL_IN[32]),
        .I1(DL_EX[32]),
        .I2(AEB),
        .O(PACKET_OUT[32]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[33]_INST_0 
       (.I0(DL_IN[33]),
        .I1(DL_EX[33]),
        .I2(AEB),
        .O(PACKET_OUT[33]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[34]_INST_0 
       (.I0(DL_IN[34]),
        .I1(DL_EX[34]),
        .I2(AEB),
        .O(PACKET_OUT[34]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[35]_INST_0 
       (.I0(DL_IN[35]),
        .I1(DL_EX[35]),
        .I2(AEB),
        .O(PACKET_OUT[35]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[36]_INST_0 
       (.I0(DL_IN[36]),
        .I1(DL_EX[36]),
        .I2(AEB),
        .O(PACKET_OUT[36]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[37]_INST_0 
       (.I0(DL_IN[37]),
        .I1(DL_EX[37]),
        .I2(AEB),
        .O(PACKET_OUT[37]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[3]_INST_0 
       (.I0(DL_IN[3]),
        .I1(DL_EX[3]),
        .I2(AEB),
        .O(PACKET_OUT[3]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[4]_INST_0 
       (.I0(DL_IN[4]),
        .I1(DL_EX[4]),
        .I2(AEB),
        .O(PACKET_OUT[4]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[5]_INST_0 
       (.I0(DL_IN[5]),
        .I1(DL_EX[5]),
        .I2(AEB),
        .O(PACKET_OUT[5]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[6]_INST_0 
       (.I0(DL_IN[6]),
        .I1(DL_EX[6]),
        .I2(AEB),
        .O(PACKET_OUT[6]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[7]_INST_0 
       (.I0(DL_IN[7]),
        .I1(DL_EX[7]),
        .I2(AEB),
        .O(PACKET_OUT[7]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[8]_INST_0 
       (.I0(DL_IN[8]),
        .I1(DL_EX[8]),
        .I2(AEB),
        .O(PACKET_OUT[8]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[9]_INST_0 
       (.I0(DL_IN[9]),
        .I1(DL_EX[9]),
        .I2(AEB),
        .O(PACKET_OUT[9]));
  (* DONT_TOUCH *) 
  CM cm
       (.AEB(AEB),
        .Ack_in(Ack_in),
        .Ack_out_a(Ack_out_EX),
        .Ack_out_b(Ack_out_IN),
        .CP_a(CP_EXTERNAL),
        .CP_b(CP_INTERNAL),
        .MR(MR),
        .Send_in_a(Send_in_EX),
        .Send_in_b(Send_in_IN),
        .Send_out(Send_out));
endmodule

(* dont_touch = "true" *) 
module OR_AM_MA
   (FIRE,
    VALID,
    MF,
    CP,
    MR,
    EN,
    WR_E,
    DEL,
    ADDR);
  input [19:0]FIRE;
  input [19:0]VALID;
  input MF;
  input CP;
  input MR;
  output [19:0]EN;
  output WR_E;
  output DEL;
  output [5:0]ADDR;

  wire [5:0]ADDR;
  wire \ADDR[0]_i_1_n_0 ;
  wire \ADDR[1]_i_1_n_0 ;
  wire \ADDR[2]_i_1_n_0 ;
  wire \ADDR[3]_i_1_n_0 ;
  wire \ADDR[4]_i_1_n_0 ;
  wire \ADDR[5]_i_1_n_0 ;
  wire CP;
  wire DEL;
  wire DEL_i_1_n_0;
  wire [19:0]EN;
  wire \EN[12]_INST_0_i_1_n_0 ;
  wire \EN[17]_INST_0_i_1_n_0 ;
  wire \EN[19]_INST_0_i_1_n_0 ;
  wire \EN[19]_INST_0_i_2_n_0 ;
  wire \EN[8]_INST_0_i_1_n_0 ;
  wire [19:0]FIRE;
  (* DONT_TOUCH *) wire FIRE_OR;
  wire FIRE_OR_inferred_i_2_n_0;
  wire FIRE_OR_inferred_i_3_n_0;
  wire FIRE_OR_inferred_i_4_n_0;
  wire MF;
  wire MR;
  (* DONT_TOUCH *) wire [5:0]R_ADDR;
  wire R_ADDR_inferred_i_10_n_0;
  wire R_ADDR_inferred_i_11_n_0;
  wire R_ADDR_inferred_i_12_n_0;
  wire R_ADDR_inferred_i_13_n_0;
  wire R_ADDR_inferred_i_14_n_0;
  wire R_ADDR_inferred_i_15_n_0;
  wire R_ADDR_inferred_i_16_n_0;
  wire R_ADDR_inferred_i_17_n_0;
  wire R_ADDR_inferred_i_18_n_0;
  wire R_ADDR_inferred_i_6_n_0;
  wire R_ADDR_inferred_i_7_n_0;
  wire R_ADDR_inferred_i_8_n_0;
  wire R_ADDR_inferred_i_9_n_0;
  wire [19:0]VALID;
  wire WR_E;
  wire WR_E0_out;
  (* DONT_TOUCH *) wire [5:0]W_ADDR;
  wire W_ADDR_inferred_i_10_n_0;
  wire W_ADDR_inferred_i_11_n_0;
  wire W_ADDR_inferred_i_12_n_0;
  wire W_ADDR_inferred_i_13_n_0;
  wire W_ADDR_inferred_i_14_n_0;
  wire W_ADDR_inferred_i_15_n_0;
  wire W_ADDR_inferred_i_6_n_0;
  wire W_ADDR_inferred_i_7_n_0;
  wire W_ADDR_inferred_i_8_n_0;
  wire W_ADDR_inferred_i_9_n_0;

  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[0]_i_1 
       (.I0(R_ADDR[0]),
        .I1(FIRE_OR),
        .I2(W_ADDR[0]),
        .O(\ADDR[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[1]_i_1 
       (.I0(R_ADDR[1]),
        .I1(FIRE_OR),
        .I2(W_ADDR[1]),
        .O(\ADDR[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[2]_i_1 
       (.I0(R_ADDR[2]),
        .I1(FIRE_OR),
        .I2(W_ADDR[2]),
        .O(\ADDR[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[3]_i_1 
       (.I0(R_ADDR[3]),
        .I1(FIRE_OR),
        .I2(W_ADDR[3]),
        .O(\ADDR[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[4]_i_1 
       (.I0(R_ADDR[4]),
        .I1(FIRE_OR),
        .I2(W_ADDR[4]),
        .O(\ADDR[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[5]_i_1 
       (.I0(R_ADDR[5]),
        .I1(FIRE_OR),
        .I2(W_ADDR[5]),
        .O(\ADDR[5]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[0] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[0]_i_1_n_0 ),
        .Q(ADDR[0]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[1] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[1]_i_1_n_0 ),
        .Q(ADDR[1]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[2] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[2]_i_1_n_0 ),
        .Q(ADDR[2]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[3] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[3]_i_1_n_0 ),
        .Q(ADDR[3]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[4] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[4]_i_1_n_0 ),
        .Q(ADDR[4]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[5] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[5]_i_1_n_0 ),
        .Q(ADDR[5]));
  LUT2 #(
    .INIT(4'hB)) 
    DEL_i_1
       (.I0(FIRE_OR),
        .I1(MF),
        .O(DEL_i_1_n_0));
  FDPE #(
    .INIT(1'b1)) 
    DEL_reg
       (.C(CP),
        .CE(1'b1),
        .D(DEL_i_1_n_0),
        .PRE(MR),
        .Q(DEL));
  LUT3 #(
    .INIT(8'h02)) 
    \EN[0]_INST_0 
       (.I0(MF),
        .I1(FIRE_OR),
        .I2(VALID[0]),
        .O(EN[0]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \EN[10]_INST_0 
       (.I0(VALID[10]),
        .I1(VALID[8]),
        .I2(VALID[9]),
        .I3(\EN[12]_INST_0_i_1_n_0 ),
        .O(EN[10]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \EN[11]_INST_0 
       (.I0(VALID[8]),
        .I1(VALID[9]),
        .I2(VALID[10]),
        .I3(VALID[11]),
        .I4(\EN[12]_INST_0_i_1_n_0 ),
        .O(EN[11]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \EN[12]_INST_0 
       (.I0(VALID[11]),
        .I1(VALID[10]),
        .I2(VALID[9]),
        .I3(VALID[8]),
        .I4(\EN[12]_INST_0_i_1_n_0 ),
        .I5(VALID[12]),
        .O(EN[12]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \EN[12]_INST_0_i_1 
       (.I0(\EN[8]_INST_0_i_1_n_0 ),
        .I1(VALID[4]),
        .I2(VALID[5]),
        .I3(VALID[6]),
        .I4(VALID[7]),
        .O(\EN[12]_INST_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \EN[13]_INST_0 
       (.I0(VALID[13]),
        .I1(VALID[12]),
        .I2(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[13]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \EN[14]_INST_0 
       (.I0(VALID[14]),
        .I1(VALID[12]),
        .I2(VALID[13]),
        .I3(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[14]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \EN[15]_INST_0 
       (.I0(VALID[12]),
        .I1(VALID[13]),
        .I2(VALID[14]),
        .I3(VALID[15]),
        .I4(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[15]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \EN[16]_INST_0 
       (.I0(VALID[13]),
        .I1(VALID[12]),
        .I2(VALID[15]),
        .I3(VALID[14]),
        .I4(\EN[19]_INST_0_i_2_n_0 ),
        .I5(VALID[16]),
        .O(EN[16]));
  LUT6 #(
    .INIT(64'h0400000000000000)) 
    \EN[17]_INST_0 
       (.I0(VALID[17]),
        .I1(VALID[16]),
        .I2(\EN[17]_INST_0_i_1_n_0 ),
        .I3(VALID[15]),
        .I4(VALID[14]),
        .I5(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[17]));
  LUT2 #(
    .INIT(4'h7)) 
    \EN[17]_INST_0_i_1 
       (.I0(VALID[12]),
        .I1(VALID[13]),
        .O(\EN[17]_INST_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    \EN[18]_INST_0 
       (.I0(VALID[18]),
        .I1(VALID[16]),
        .I2(VALID[17]),
        .I3(\EN[19]_INST_0_i_1_n_0 ),
        .I4(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[18]));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \EN[19]_INST_0 
       (.I0(VALID[16]),
        .I1(VALID[17]),
        .I2(VALID[18]),
        .I3(VALID[19]),
        .I4(\EN[19]_INST_0_i_1_n_0 ),
        .I5(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[19]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \EN[19]_INST_0_i_1 
       (.I0(VALID[13]),
        .I1(VALID[12]),
        .I2(VALID[15]),
        .I3(VALID[14]),
        .O(\EN[19]_INST_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \EN[19]_INST_0_i_2 
       (.I0(\EN[12]_INST_0_i_1_n_0 ),
        .I1(VALID[8]),
        .I2(VALID[9]),
        .I3(VALID[10]),
        .I4(VALID[11]),
        .O(\EN[19]_INST_0_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0040)) 
    \EN[1]_INST_0 
       (.I0(FIRE_OR),
        .I1(MF),
        .I2(VALID[0]),
        .I3(VALID[1]),
        .O(EN[1]));
  LUT5 #(
    .INIT(32'h00000080)) 
    \EN[2]_INST_0 
       (.I0(VALID[1]),
        .I1(VALID[0]),
        .I2(MF),
        .I3(FIRE_OR),
        .I4(VALID[2]),
        .O(EN[2]));
  LUT6 #(
    .INIT(64'h0000000040000000)) 
    \EN[3]_INST_0 
       (.I0(VALID[3]),
        .I1(VALID[2]),
        .I2(VALID[1]),
        .I3(VALID[0]),
        .I4(MF),
        .I5(FIRE_OR),
        .O(EN[3]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \EN[4]_INST_0 
       (.I0(\EN[8]_INST_0_i_1_n_0 ),
        .I1(VALID[4]),
        .O(EN[4]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \EN[5]_INST_0 
       (.I0(VALID[5]),
        .I1(VALID[4]),
        .I2(\EN[8]_INST_0_i_1_n_0 ),
        .O(EN[5]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \EN[6]_INST_0 
       (.I0(VALID[6]),
        .I1(VALID[4]),
        .I2(VALID[5]),
        .I3(\EN[8]_INST_0_i_1_n_0 ),
        .O(EN[6]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \EN[7]_INST_0 
       (.I0(VALID[4]),
        .I1(VALID[5]),
        .I2(VALID[6]),
        .I3(VALID[7]),
        .I4(\EN[8]_INST_0_i_1_n_0 ),
        .O(EN[7]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \EN[8]_INST_0 
       (.I0(VALID[7]),
        .I1(VALID[6]),
        .I2(VALID[5]),
        .I3(VALID[4]),
        .I4(\EN[8]_INST_0_i_1_n_0 ),
        .I5(VALID[8]),
        .O(EN[8]));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \EN[8]_INST_0_i_1 
       (.I0(VALID[1]),
        .I1(VALID[0]),
        .I2(MF),
        .I3(FIRE_OR),
        .I4(VALID[3]),
        .I5(VALID[2]),
        .O(\EN[8]_INST_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \EN[9]_INST_0 
       (.I0(VALID[9]),
        .I1(VALID[8]),
        .I2(\EN[12]_INST_0_i_1_n_0 ),
        .O(EN[9]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    FIRE_OR_inferred_i_1
       (.I0(FIRE[17]),
        .I1(FIRE[16]),
        .I2(FIRE[19]),
        .I3(FIRE[18]),
        .I4(FIRE_OR_inferred_i_2_n_0),
        .I5(FIRE_OR_inferred_i_3_n_0),
        .O(FIRE_OR));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    FIRE_OR_inferred_i_2
       (.I0(FIRE[10]),
        .I1(FIRE[11]),
        .I2(FIRE[8]),
        .I3(FIRE[9]),
        .I4(FIRE_OR_inferred_i_4_n_0),
        .O(FIRE_OR_inferred_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    FIRE_OR_inferred_i_3
       (.I0(FIRE[1]),
        .I1(FIRE[5]),
        .I2(FIRE[3]),
        .I3(FIRE[7]),
        .I4(R_ADDR_inferred_i_6_n_0),
        .O(FIRE_OR_inferred_i_3_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    FIRE_OR_inferred_i_4
       (.I0(FIRE[13]),
        .I1(FIRE[12]),
        .I2(FIRE[15]),
        .I3(FIRE[14]),
        .O(FIRE_OR_inferred_i_4_n_0));
  LUT6 #(
    .INIT(64'h0000000055555554)) 
    R_ADDR_inferred_i_1
       (.I0(FIRE_OR_inferred_i_2_n_0),
        .I1(FIRE[17]),
        .I2(FIRE[16]),
        .I3(FIRE[19]),
        .I4(FIRE[18]),
        .I5(FIRE_OR_inferred_i_3_n_0),
        .O(R_ADDR[4]));
  LUT6 #(
    .INIT(64'h000A000A000A000E)) 
    R_ADDR_inferred_i_10
       (.I0(FIRE[5]),
        .I1(R_ADDR_inferred_i_14_n_0),
        .I2(R_ADDR_inferred_i_15_n_0),
        .I3(FIRE[4]),
        .I4(FIRE[6]),
        .I5(FIRE[8]),
        .O(R_ADDR_inferred_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    R_ADDR_inferred_i_11
       (.I0(FIRE[9]),
        .I1(FIRE[8]),
        .I2(FIRE[11]),
        .I3(FIRE[10]),
        .O(R_ADDR_inferred_i_11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'hE)) 
    R_ADDR_inferred_i_12
       (.I0(FIRE[1]),
        .I1(FIRE[5]),
        .O(R_ADDR_inferred_i_12_n_0));
  LUT6 #(
    .INIT(64'h00000000EEEEEEFE)) 
    R_ADDR_inferred_i_13
       (.I0(FIRE[10]),
        .I1(FIRE[11]),
        .I2(R_ADDR_inferred_i_16_n_0),
        .I3(FIRE[13]),
        .I4(FIRE[12]),
        .I5(R_ADDR_inferred_i_17_n_0),
        .O(R_ADDR_inferred_i_13_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF55551110)) 
    R_ADDR_inferred_i_14
       (.I0(FIRE[10]),
        .I1(FIRE[12]),
        .I2(R_ADDR_inferred_i_18_n_0),
        .I3(FIRE[13]),
        .I4(FIRE[11]),
        .I5(FIRE[9]),
        .O(R_ADDR_inferred_i_14_n_0));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'hE)) 
    R_ADDR_inferred_i_15
       (.I0(FIRE[0]),
        .I1(FIRE[2]),
        .O(R_ADDR_inferred_i_15_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF1110)) 
    R_ADDR_inferred_i_16
       (.I0(FIRE[16]),
        .I1(FIRE[17]),
        .I2(FIRE[18]),
        .I3(FIRE[19]),
        .I4(FIRE[15]),
        .I5(FIRE[14]),
        .O(R_ADDR_inferred_i_16_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    R_ADDR_inferred_i_17
       (.I0(FIRE[8]),
        .I1(FIRE[9]),
        .O(R_ADDR_inferred_i_17_n_0));
  LUT6 #(
    .INIT(64'h00000000AAAAEEFE)) 
    R_ADDR_inferred_i_18
       (.I0(FIRE[15]),
        .I1(FIRE[17]),
        .I2(FIRE[19]),
        .I3(FIRE[18]),
        .I4(FIRE[16]),
        .I5(FIRE[14]),
        .O(R_ADDR_inferred_i_18_n_0));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    R_ADDR_inferred_i_2
       (.I0(FIRE_OR_inferred_i_2_n_0),
        .I1(R_ADDR_inferred_i_6_n_0),
        .I2(FIRE[7]),
        .I3(FIRE[3]),
        .I4(FIRE[5]),
        .I5(FIRE[1]),
        .O(R_ADDR[3]));
  LUT5 #(
    .INIT(32'h00010000)) 
    R_ADDR_inferred_i_3
       (.I0(FIRE[0]),
        .I1(FIRE[2]),
        .I2(FIRE[1]),
        .I3(FIRE[3]),
        .I4(R_ADDR_inferred_i_7_n_0),
        .O(R_ADDR[2]));
  LUT5 #(
    .INIT(32'hFFFF000E)) 
    R_ADDR_inferred_i_4
       (.I0(FIRE[2]),
        .I1(FIRE[3]),
        .I2(FIRE[0]),
        .I3(FIRE[1]),
        .I4(R_ADDR_inferred_i_8_n_0),
        .O(R_ADDR[1]));
  LUT4 #(
    .INIT(16'hFFF2)) 
    R_ADDR_inferred_i_5
       (.I0(FIRE[1]),
        .I1(FIRE[0]),
        .I2(R_ADDR_inferred_i_9_n_0),
        .I3(R_ADDR_inferred_i_10_n_0),
        .O(R_ADDR[0]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    R_ADDR_inferred_i_6
       (.I0(FIRE[6]),
        .I1(FIRE[4]),
        .I2(FIRE[2]),
        .I3(FIRE[0]),
        .O(R_ADDR_inferred_i_6_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF4)) 
    R_ADDR_inferred_i_7
       (.I0(R_ADDR_inferred_i_11_n_0),
        .I1(FIRE_OR_inferred_i_4_n_0),
        .I2(FIRE[4]),
        .I3(FIRE[6]),
        .I4(FIRE[5]),
        .I5(FIRE[7]),
        .O(R_ADDR_inferred_i_7_n_0));
  LUT6 #(
    .INIT(64'h0101010101010100)) 
    R_ADDR_inferred_i_8
       (.I0(R_ADDR_inferred_i_12_n_0),
        .I1(FIRE[0]),
        .I2(FIRE[4]),
        .I3(FIRE[6]),
        .I4(FIRE[7]),
        .I5(R_ADDR_inferred_i_13_n_0),
        .O(R_ADDR_inferred_i_8_n_0));
  LUT6 #(
    .INIT(64'h000000AB000000AA)) 
    R_ADDR_inferred_i_9
       (.I0(FIRE[3]),
        .I1(FIRE[6]),
        .I2(FIRE[4]),
        .I3(FIRE[2]),
        .I4(FIRE[0]),
        .I5(FIRE[7]),
        .O(R_ADDR_inferred_i_9_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    WR_E_i_1
       (.I0(MF),
        .I1(FIRE_OR),
        .O(WR_E0_out));
  FDCE #(
    .INIT(1'b0)) 
    WR_E_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(WR_E0_out),
        .Q(WR_E));
  LUT6 #(
    .INIT(64'h000000007FFF0000)) 
    W_ADDR_inferred_i_1
       (.I0(VALID[16]),
        .I1(VALID[17]),
        .I2(VALID[18]),
        .I3(VALID[19]),
        .I4(\EN[19]_INST_0_i_2_n_0 ),
        .I5(\EN[19]_INST_0_i_1_n_0 ),
        .O(W_ADDR[4]));
  LUT6 #(
    .INIT(64'hF777555500000000)) 
    W_ADDR_inferred_i_10
       (.I0(VALID[5]),
        .I1(VALID[7]),
        .I2(W_ADDR_inferred_i_13_n_0),
        .I3(VALID[8]),
        .I4(VALID[6]),
        .I5(VALID[4]),
        .O(W_ADDR_inferred_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h7)) 
    W_ADDR_inferred_i_11
       (.I0(VALID[8]),
        .I1(VALID[9]),
        .O(W_ADDR_inferred_i_11_n_0));
  LUT6 #(
    .INIT(64'h0000000077777FFF)) 
    W_ADDR_inferred_i_12
       (.I0(VALID[14]),
        .I1(VALID[15]),
        .I2(VALID[19]),
        .I3(VALID[18]),
        .I4(W_ADDR_inferred_i_14_n_0),
        .I5(\EN[17]_INST_0_i_1_n_0 ),
        .O(W_ADDR_inferred_i_12_n_0));
  LUT6 #(
    .INIT(64'h8088AAAAFFFFFFFF)) 
    W_ADDR_inferred_i_13
       (.I0(VALID[10]),
        .I1(VALID[12]),
        .I2(W_ADDR_inferred_i_15_n_0),
        .I3(VALID[13]),
        .I4(VALID[11]),
        .I5(VALID[9]),
        .O(W_ADDR_inferred_i_13_n_0));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h7)) 
    W_ADDR_inferred_i_14
       (.I0(VALID[16]),
        .I1(VALID[17]),
        .O(W_ADDR_inferred_i_14_n_0));
  LUT6 #(
    .INIT(64'h77F7555500000000)) 
    W_ADDR_inferred_i_15
       (.I0(VALID[15]),
        .I1(VALID[17]),
        .I2(VALID[18]),
        .I3(VALID[19]),
        .I4(VALID[16]),
        .I5(VALID[14]),
        .O(W_ADDR_inferred_i_15_n_0));
  LUT6 #(
    .INIT(64'hFFFF00007FFF0000)) 
    W_ADDR_inferred_i_2
       (.I0(VALID[11]),
        .I1(VALID[10]),
        .I2(VALID[9]),
        .I3(VALID[8]),
        .I4(\EN[12]_INST_0_i_1_n_0 ),
        .I5(\EN[19]_INST_0_i_1_n_0 ),
        .O(W_ADDR[3]));
  LUT6 #(
    .INIT(64'hF700F700FF00F700)) 
    W_ADDR_inferred_i_3
       (.I0(VALID[7]),
        .I1(VALID[6]),
        .I2(W_ADDR_inferred_i_6_n_0),
        .I3(\EN[8]_INST_0_i_1_n_0 ),
        .I4(\EN[19]_INST_0_i_1_n_0 ),
        .I5(W_ADDR_inferred_i_7_n_0),
        .O(W_ADDR[2]));
  LUT6 #(
    .INIT(64'hF700770077007700)) 
    W_ADDR_inferred_i_4
       (.I0(VALID[2]),
        .I1(VALID[3]),
        .I2(W_ADDR_inferred_i_8_n_0),
        .I3(W_ADDR_inferred_i_9_n_0),
        .I4(VALID[5]),
        .I5(VALID[4]),
        .O(W_ADDR[1]));
  LUT6 #(
    .INIT(64'h00DF000000550000)) 
    W_ADDR_inferred_i_5
       (.I0(VALID[1]),
        .I1(W_ADDR_inferred_i_10_n_0),
        .I2(VALID[3]),
        .I3(DEL_i_1_n_0),
        .I4(VALID[0]),
        .I5(VALID[2]),
        .O(W_ADDR[0]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h7)) 
    W_ADDR_inferred_i_6
       (.I0(VALID[4]),
        .I1(VALID[5]),
        .O(W_ADDR_inferred_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    W_ADDR_inferred_i_7
       (.I0(VALID[11]),
        .I1(VALID[10]),
        .I2(VALID[9]),
        .I3(VALID[8]),
        .O(W_ADDR_inferred_i_7_n_0));
  LUT6 #(
    .INIT(64'h4555FFFFFFFFFFFF)) 
    W_ADDR_inferred_i_8
       (.I0(W_ADDR_inferred_i_11_n_0),
        .I1(W_ADDR_inferred_i_12_n_0),
        .I2(VALID[11]),
        .I3(VALID[10]),
        .I4(VALID[7]),
        .I5(VALID[6]),
        .O(W_ADDR_inferred_i_8_n_0));
  LUT4 #(
    .INIT(16'h4000)) 
    W_ADDR_inferred_i_9
       (.I0(FIRE_OR),
        .I1(MF),
        .I2(VALID[0]),
        .I3(VALID[1]),
        .O(W_ADDR_inferred_i_9_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(W_ADDR[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(R_ADDR[5]));
endmodule

(* CHECK_LICENSE_TYPE = "PS,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module PS
   (clka,
    addra,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [16:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [16:0]douta;
  wire NLW_U0_clkb_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_ena_UNCONNECTED;
  wire NLW_U0_enb_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [4:0]NLW_U0_addrb_UNCONNECTED;
  wire [16:0]NLW_U0_dina_UNCONNECTED;
  wire [16:0]NLW_U0_dinb_UNCONNECTED;
  wire [16:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [16:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [16:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_wea_UNCONNECTED;
  wire [0:0]NLW_U0_web_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.751199 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "PS.mem" *) 
  (* C_INIT_FILE_NAME = "PS.mif" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "1" *) 
  (* C_MEM_TYPE = "3" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "17" *) 
  (* C_READ_WIDTH_B = "17" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "17" *) 
  (* C_WRITE_WIDTH_B = "17" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  PS_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb(NLW_U0_addrb_UNCONNECTED[4:0]),
        .clka(clka),
        .clkb(NLW_U0_clkb_UNCONNECTED),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(NLW_U0_dina_UNCONNECTED[16:0]),
        .dinb(NLW_U0_dinb_UNCONNECTED[16:0]),
        .douta(douta),
        .doutb(NLW_U0_doutb_UNCONNECTED[16:0]),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(NLW_U0_ena_UNCONNECTED),
        .enb(NLW_U0_enb_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[16:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[16:0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(NLW_U0_wea_UNCONNECTED[0]),
        .web(NLW_U0_web_UNCONNECTED[0]));
endmodule

(* ABSORB = "6'b111111" *) (* ADD = "6'b000000" *) (* ADDC = "6'b000001" *) 
(* ADDGEN = "6'b101010" *) (* AND = "6'b000100" *) (* BC = "6'b010010" *) 
(* BNC = "6'b010011" *) (* BNZ = "6'b010001" *) (* BNZL = "6'b011000" *) 
(* BZ = "6'b010000" *) (* BZL = "6'b011000" *) (* CHGCOL = "6'b101001" *) 
(* CHGDEST = "6'b110000" *) (* DECGEN = "6'b101100" *) (* LDM = "6'b100000" *) 
(* MUL = "6'b000111" *) (* OR = "6'b000101" *) (* ROL = "6'b001010" *) 
(* ROR = "6'b001011" *) (* SHL = "6'b001000" *) (* SHR = "6'b001001" *) 
(* STM = "6'b100001" *) (* SUB = "6'b000010" *) (* SUBC = "6'b000011" *) 
(* XOR = "6'b000110" *) (* dont_touch = "true" *) 
module PS_Stage
   (Send_in,
    Ack_in,
    MR,
    PACKET_IN,
    PACKET_OUT,
    DEL,
    Send_out,
    Ack_out);
  input Send_in;
  input Ack_in;
  input MR;
  input [51:0]PACKET_IN;
  output [61:0]PACKET_OUT;
  output DEL;
  output Send_out;
  output Ack_out;

  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  wire DEL;
  (* DONT_TOUCH *) wire [51:0]DL;
  wire MR;
  wire [51:0]\^PACKET_IN ;
  (* DONT_TOUCH *) wire [16:0]PSData;
  wire Send_in;
  wire Send_out;
  (* DONT_TOUCH *) wire [6:0]dest;

  assign PACKET_OUT[61:51] = DL[51:41];
  assign PACKET_OUT[50:34] = PSData;
  assign PACKET_OUT[33:0] = DL[33:0];
  assign \^PACKET_IN [51:41] = PACKET_IN[51:41];
  assign \^PACKET_IN [33:0] = PACKET_IN[33:0];
  assign dest = PACKET_IN[40:34];
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    DEL_INST_0
       (.I0(PSData[5]),
        .I1(PSData[4]),
        .I2(PSData[1]),
        .I3(PSData[0]),
        .I4(PSData[3]),
        .I5(PSData[2]),
        .O(DEL));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[0]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[1]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[2]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[3]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[38] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[4]),
        .Q(DL[38]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[39] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[5]),
        .Q(DL[39]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[40] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[6]),
        .Q(DL[40]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[41] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [41]),
        .Q(DL[41]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[42] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [42]),
        .Q(DL[42]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[43] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [43]),
        .Q(DL[43]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[44] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [44]),
        .Q(DL[44]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[45] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [45]),
        .Q(DL[45]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[46] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [46]),
        .Q(DL[46]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[47] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [47]),
        .Q(DL[47]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[48] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [48]),
        .Q(DL[48]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[49] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [49]),
        .Q(DL[49]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[50] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [50]),
        .Q(DL[50]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[51] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [51]),
        .Q(DL[51]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  C__2 c
       (.Ack_in(Ack_in),
        .Ack_out(Ack_out),
        .CP(CP),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(Send_out));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/PS/PS.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  PS ps
       (.addra(dest[4:0]),
        .clka(CP),
        .douta(PSData));
endmodule

(* CHECK_LICENSE_TYPE = "SubPS,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module SubPS
   (clka,
    addra,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [0:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [0:0]douta;
  wire NLW_U0_clkb_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_ena_UNCONNECTED;
  wire NLW_U0_enb_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [4:0]NLW_U0_addrb_UNCONNECTED;
  wire [0:0]NLW_U0_dina_UNCONNECTED;
  wire [0:0]NLW_U0_dinb_UNCONNECTED;
  wire [0:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_wea_UNCONNECTED;
  wire [0:0]NLW_U0_web_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     1.903721 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "SubPS.mem" *) 
  (* C_INIT_FILE_NAME = "SubPS.mif" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "1" *) 
  (* C_MEM_TYPE = "3" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  SubPS_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb(NLW_U0_addrb_UNCONNECTED[4:0]),
        .clka(clka),
        .clkb(NLW_U0_clkb_UNCONNECTED),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(NLW_U0_dina_UNCONNECTED[0]),
        .dinb(NLW_U0_dinb_UNCONNECTED[0]),
        .douta(douta),
        .doutb(NLW_U0_doutb_UNCONNECTED[0]),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(NLW_U0_ena_UNCONNECTED),
        .enb(NLW_U0_enb_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(NLW_U0_wea_UNCONNECTED[0]),
        .web(NLW_U0_web_UNCONNECTED[0]));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2024.1"
`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
RSqbsRZSIb+QlYJMfFv1T7uHQ7PiCEXQkl687MHGm2LgPB15GIYcPmqKUSXgtkLsIFes91PTAyyB
9H9cyY4ZUxedcRg/9ZOB5pm3zPqAbcvGPmg1ivMhr/MlS19t5lYKM2tQo+0Yd+arJXlVZu2BMnvn
+I3G9t9tJuWUIWKjI+I=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
VRSQ05ZaB6bIhFIQ823mTvlJaG9+5iW5C3+KxGjq0sq9ziCshKOLpOGPDMmOWDqA4uBaxC5IKISr
w8+A8mqbYjXo5m1g8sGjNaETS0HKJsK+l5Y++tN4IEUs+DwxgrPR/+LWtChuOzVkfC7BG3LVUEMj
zM3GAyGcXGJ3sdBItZAfsevyiy7kr4Fw+nk2hWytGteu1NZk3VzPE7KQHLkOlHBPXf6P0j8LpKcr
2oNDgQ/WaEmg6OOvFeJuaWDaee8Sn6wKP/caMyoGdSeczsPtRrJeoSRlbNHlxhCv7zg+Cn2AgwrR
PTqGsMrkhv9U0sq+waS0CmwChsk4WB7RspGYUg==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
tNziOjCznlvIl4dadmB9r23Duf+HQHWOuHmupEU3PJxrazHVtZdNKspG9sRXhF9mjbpnSiKYCdFK
Jr9W/dxUid36faFIPKQazVTuOiE0hkzVQAGpYxXjT/ITB/9EFBvgvP5L3EAhHv32x6MA1vkFSI7x
HrZ09YNFEF6T7DPTZE4=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
QCYfxgkUHlX1cre1q9aS3sVDIOX36YBK4ZwJXAVUwA6f1OQ77XibjpWJHt5FK9F0PcYp/j21pqzO
BRdkDcFLVAjxER4J5t5iMVhoeMk+3fpiKfYrm4WFl1ygsJsfFJP0jqO1OkjC8iFBtm3n6b7CTl1o
cjBbcBp8UgW6E8rf5inXA0dRqybnyxKJSnMFYLinvpVU6QEc4OKO7mi/i/s9p/efiP+CdQf0yDRU
Fw7o7x0D7tjBv943g5L+4wGZ2JYU+ISqn4Ajxy/bWTTJDe6T/15evhngS61MC8Xjamzc4YLZBP8o
ShfSLoeZeO+Hk5n3xzJRghM0DQ6Sj7NqXFY68w==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Uy8FDDy3dZQGAnMQV0HBesEs+/oZdaq35Kj1PGhy9J/+EBZm0nhhQgYtku8tWABW2jKAC1GtNTvo
uReQyr1hteMxTbD5OIuqv86eb1hXZVENlZ7ichG8auUjkeHAkaSYNbHOuDLIhSqHEL67XbcZ9zPG
1JOY3+VONSww0KYPcQbGSo/2DaC5C0Y+mZODRfJ4+b0WXjce6UaJetilBc3VtqqmodIM2d3HDawF
R0xVJfHj86rXmUkY+SNUw60zsV6raCY6G3k/rXpei1d6zn8tCThkKG5fwiWY8zA7kRdTFIlVKP9h
fb6kfzRBRT/BgVQ8d4RgEcEVV8m3u/Mf4KIlTw==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2023_11", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Pk1GeRlkUK9lt6DVXYVdtOABlzDEWQDcBsP/p+Wo5HaglDLG5b8gk08xTP3IcJ1RKcfuARPMGO2s
/VqFbnVADV90T1rhjIuWMcBnzYQK/ALUvwv11Uju9Gn0fvPIz52l3QBnpjHI1nlsFB7WeqkzVfHZ
tg9gO9bPHjHLjVd9BzH6McrEWY5RkZ0UBy0Fmh/SownJX1b0YGE7LdwKydEMEpyvb28bwTOwfEv/
4RtsfYtEvTjo6e1ZBm66D9IQmKUu32wzTfn5bFZHdyjZg6+HcTzvHMtQX2+AggXfP6FsO2/83qkb
0bfj226fnLhr32dJxtsaJS5OR63GYtzDJ05ITA==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
LCfWqKmUoUSVOTKNAl5p8n1hfz7SMU2kDOUMBjsDncgSFqiu2zUy1I6GSDrVnF/2umJG5/mWcpvi
rQaFJOlrJ8DNctSuavdlopRAwTMsVi6dAlNGrAawSiDIxtI3tN3MDVdMiH5H+pJMqMt59yXneyCf
2RRSRz2sUQK/aj0lXlqKjVJzVbk8HaBQ8akBJF4iWSMK4foIzJ6iO1EupYovuW6uEiO7jQRWezlW
pbbDenOHHWbfinuX5cbkjpTKHGsEKct65q+ZXJp60m3sconSK3Y2eLQxusuJ1FHDJ4GGKO8mEzCv
3cfGdXX3pVL81OfGO/JD1aMs9H98CO5ssbHqlw==

`pragma protect key_keyowner="Atrenta", key_keyname="ATR-SG-RSA-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=384)
`pragma protect key_block
A4S1e3DHcTeWzaDVuWDRb3Yf1BjiEsR1RtAeL0BJ7J/oPWMNj96MeGsUiHtZoiYqteTZxqax2cyZ
PV0cMLoBK4Ya8CyM+BTnkFA2ablsGt5Es4TgG/nFS9VEhmeKxu8boAsqW5697aiqOATJf/LucQh5
GOnPXHAuPrDj0A/fu8N2QduqGyysWUSc1KsoJ0/0noJYvLJ2yOhFi4uIUYQfG5LOuOrca5P43pqA
iwUKW/RrFXal2acJdFeXIKffZpKanSV97urdzKyBvf9EPV/M8g9uPFJJ1z6aS+FbknhVPs0pt6eD
+J/qib4gVp/HGnRo4YlxauUMv6Yv9wxiaObY6ttDfYf5p3uzWZMlf3i7YOzZwcd4aS/6+vkD28LG
L9piBIpLx2dvQy74RdvCVdvaP1LC6RMju9RfuXJhuX4ZAmDxRi0zQyRda838ikzwYeOCSKLIvRPb
nuJ8Zx2ot8EFqSeGaaRFaEMU6Zf5SptCUuVMHvSkinBewcwrLB5uiJTJ

`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="CDS_RSA_KEY_VER_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
gj+uMxV+tK4Di7pgSOE82FOBeWmUB1A7OKFOSMUW3qrmQ4/YhryfHMlWPxfAq8avQL7tnBTnRFEg
czbErdIcNzYjrM7Qq00QC/mTqmeQX4/apbqGvN+rwK4RR5oj22wfTib/UQNEQX6fbpi6PtmAeUR9
eShsfq+YWcf7z2Zw4Q+o4+E6m4/3CzU68vglNpzNsJ8S9/8XpdIrvAA/WRAX6OEOC4wlNIKDZsq/
+zMbFgSzN1rP844I/CDmxYM0NIzBWWhYBkPfJyQyigmUoXb84lDip0/Dmnq4EHvu7D/tZNnDl5st
JpftRfEpT6S8e/5MBeKUuhbfg6etHo/oFZvPKQ==

`pragma protect key_keyowner="Synplicity", key_keyname="SYNP15_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
aWTy3xv6SqKsldtLS2gY4KrTS8U+KtFNRHS314f6EYZy1MHE9t7oICJ8eNB8up8A+odoE23N3fJb
1alhaadeRWU2GjlIiK1LjZ5PQw+jb1u1GWtRiY+TcTlD75XUlqwykVBrCDfm565DmgZjZle9T3/t
WEfLo+m/8GfBe8trVnoftsk/XI00BMFXRzw8doPGDhNECS1NUrLebryb9iO5Hf4A/40dtslTARsR
nicN0KoIIyiQ+QzliqyXU/8VjS45inON8R0Kv9Qx46EXUp7bds5uQ7QycRhpLG0IPnMIweudU67w
eQmpHJzvZKBCZks/R0OafZx44H6Jib2+QazBCw==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-PREC-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
UGdPiChIPj1lSozqzCQx17Bi+8FWSuMUMzXUkDLH5zcP1t8tZLzh4CU4WAR8lmJxn8gH763fLp5c
RYU6zA0yxHzl2ksc5YRU1XEfQQT9ha8fQnz+18wVKcsa5UIOfMbGDwnS9yfX59ntG8CB0uF8bJKE
y1CS6U/1Stfs1w2mF94iDxI2n2GJlb1UPtWpmxMBI88hY0GktTPXP2Y7JKl8zRl/Lq0wIF8pHwXk
B4nOgKm6hfzPj0xZ6E/TuER/JE3fy8RSm24IlL/CUgpReEslEOYjQ4EKKZRG9/fxg26utQWW9p+G
fWVU53qrFGzBhKQ96Paj1ROkv6hDHyUb6n7uSw==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 78480)
`pragma protect data_block
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
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
