// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2024.1 (win64) Build 5076996 Wed May 22 18:37:14 MDT 2024
// Date        : Wed Oct  9 14:55:45 2024
// Host        : DESKTOP-B2190GF running 64-bit major release  (build 9200)
// Command     : write_verilog -mode funcsim -nolib -force -file
//               C:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.sim/sim_1/synth/func/xsim/JOIN_DDP_SIM_func_synth.v
// Design      : JOIN_DDP
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7z010clg400-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* dont_touch = "true" *) 
module ARB
   (ARB_Send_in_a,
    ARB_Ack_out_a,
    ARB_Send_in_b,
    ARB_Ack_out_b,
    ARB_Za,
    ARB_Zb,
    MR,
    ARB_Ga,
    ARB_Gb);
  input ARB_Send_in_a;
  input ARB_Ack_out_a;
  input ARB_Send_in_b;
  input ARB_Ack_out_b;
  input ARB_Za;
  input ARB_Zb;
  input MR;
  output ARB_Ga;
  output ARB_Gb;

  wire ARB_Ack_out_a;
  wire ARB_Ack_out_b;
  wire ARB_Send_in_a;
  wire ARB_Send_in_b;
  wire ARB_Za;
  wire ARB_Zb;
  wire MR;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire nand6_out;
  (* DONT_TOUCH *) wire nand7_out;
  (* DONT_TOUCH *) wire nand8_out;

  assign ARB_Ga = nand8_out;
  assign ARB_Gb = nand7_out;
  LUT3 #(
    .INIT(8'h7F)) 
    nand1_out_inferred_i_1
       (.I0(ARB_Send_in_a),
        .I1(nand2_out),
        .I2(ARB_Ack_out_a),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'hDF)) 
    nand2_out_inferred_i_1
       (.I0(ARB_Za),
        .I1(MR),
        .I2(nand1_out),
        .O(nand2_out));
  LUT3 #(
    .INIT(8'hDF)) 
    nand3_out_inferred_i_1
       (.I0(nand4_out),
        .I1(MR),
        .I2(ARB_Zb),
        .O(nand3_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(ARB_Ack_out_b),
        .I2(ARB_Send_in_b),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'hBF)) 
    nand5_out_inferred_i_1
       (.I0(MR),
        .I1(nand6_out),
        .I2(nand2_out),
        .O(nand5_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand6_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand6_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand7_out_inferred_i_1
       (.I0(nand8_out),
        .I1(nand5_out),
        .O(nand7_out));
  LUT3 #(
    .INIT(8'hBF)) 
    nand8_out_inferred_i_1
       (.I0(MR),
        .I1(nand6_out),
        .I2(nand7_out),
        .O(nand8_out));
endmodule

(* dont_touch = "true" *) 
module B_Stage
   (PACKET_IN,
    Send_in,
    Ack_in_a,
    Ack_in_b,
    MR,
    Send_out_a,
    Send_out_b,
    Ack_out,
    PACKET_OUT);
  input [37:0]PACKET_IN;
  input Send_in;
  input Ack_in_a;
  input Ack_in_b;
  input MR;
  output Send_out_a;
  output Send_out_b;
  output Ack_out;
  output [37:0]PACKET_OUT;

  wire Ack_in_a;
  wire Ack_in_b;
  wire Ack_out;
  (* DONT_TOUCH *) wire BR;
  wire CP;
  (* DONT_TOUCH *) wire [37:0]DL;
  (* DONT_TOUCH *) wire MF;
  wire MR;
  wire [37:0]\^PACKET_IN ;
  wire Send_in;
  wire Send_out_a;
  wire Send_out_b;
  (* DONT_TOUCH *) wire [6:0]dest;

  assign BR = PACKET_IN[18];
  assign PACKET_OUT[37:19] = DL[37:19];
  assign PACKET_OUT[18] = MF;
  assign PACKET_OUT[17:0] = DL[17:0];
  assign \^PACKET_IN [37:27] = PACKET_IN[37:27];
  assign \^PACKET_IN [19] = PACKET_IN[19];
  assign \^PACKET_IN [17:0] = PACKET_IN[17:0];
  assign dest = PACKET_IN[26:20];
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(BR),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[0]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[1]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[2]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[3]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[4]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[5]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[6]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  CB cb
       (.BR(BR),
        .CB_Ack_in_a(Ack_in_a),
        .CB_Ack_in_b(Ack_in_b),
        .CB_Ack_out(Ack_out),
        .CB_CP(CP),
        .CB_Send_in(Send_in),
        .CB_Send_out_a(Send_out_a),
        .CB_Send_out_b(Send_out_b),
        .MR(MR));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/SubPS/SubPS.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  SubPS subps
       (.addra(dest[4:0]),
        .clka(CP),
        .douta(MF));
endmodule

(* dont_touch = "true" *) 
module C
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__5 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__6 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__7 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__8 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* dont_touch = "true" *) 
module CB
   (CB_Send_in,
    CB_Ack_in_a,
    CB_Ack_in_b,
    MR,
    BR,
    CB_Ack_out,
    CB_Send_out_a,
    CB_Send_out_b,
    CB_CP);
  input CB_Send_in;
  input CB_Ack_in_a;
  input CB_Ack_in_b;
  input MR;
  input BR;
  output CB_Ack_out;
  output CB_Send_out_a;
  output CB_Send_out_b;
  output CB_CP;

  wire BR;
  wire CB_Ack_in_a;
  wire CB_Ack_in_b;
  wire CB_Send_in;
  wire CB_Send_out_a;
  wire CB_Send_out_b;
  (* DONT_TOUCH *) wire DL;
  wire MR;
  (* DONT_TOUCH *) wire and_1;
  (* DONT_TOUCH *) wire cf_ack_out;
  (* DONT_TOUCH *) wire cf_send_out;
  (* DONT_TOUCH *) wire cp;

  assign CB_Ack_out = cf_ack_out;
  assign CB_CP = cp;
  LUT2 #(
    .INIT(4'hE)) 
    CB_Send_out_a_INST_0
       (.I0(cf_send_out),
        .I1(DL),
        .O(CB_Send_out_a));
  LUT2 #(
    .INIT(4'hB)) 
    CB_Send_out_b_INST_0
       (.I0(cf_send_out),
        .I1(DL),
        .O(CB_Send_out_b));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b1)) 
    DL_reg
       (.C(cp),
        .CE(1'b1),
        .CLR(MR),
        .D(BR),
        .Q(DL));
  LUT2 #(
    .INIT(4'h8)) 
    and_1_inferred_i_1
       (.I0(CB_Ack_in_a),
        .I1(CB_Ack_in_b),
        .O(and_1));
  (* DONT_TOUCH *) 
  CF cf
       (.Ack_in(and_1),
        .Ack_out(cf_ack_out),
        .CP(cp),
        .MR(MR),
        .Send_in(CB_Send_in),
        .Send_out(cf_send_out));
endmodule

(* dont_touch = "true" *) 
module CE
   (CE_Send_in,
    CE_Ack_in,
    MR,
    Exb,
    CE_Ack_out,
    CE_Send_out,
    CE_CP);
  input CE_Send_in;
  input CE_Ack_in;
  input MR;
  input Exb;
  output CE_Ack_out;
  output CE_Send_out;
  output CE_CP;

  wire CE_Ack_in;
  wire CE_Send_in;
  (* DONT_TOUCH *) wire DL;
  wire Exb;
  wire MR;
  (* DONT_TOUCH *) wire and_1;
  (* DONT_TOUCH *) wire cf_ack_out;
  (* DONT_TOUCH *) wire cf_send_out;
  (* DONT_TOUCH *) wire cp;
  (* DONT_TOUCH *) wire or_1;
  (* DONT_TOUCH *) wire or_2;

  assign CE_Ack_out = cf_ack_out;
  assign CE_CP = cp;
  assign CE_Send_out = or_1;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    DL_reg
       (.C(cp),
        .CE(1'b1),
        .D(Exb),
        .Q(DL),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    and_1_inferred_i_1
       (.I0(or_2),
        .I1(CE_Ack_in),
        .O(and_1));
  (* DONT_TOUCH *) 
  CF__1 cf
       (.Ack_in(and_1),
        .Ack_out(cf_ack_out),
        .CP(cp),
        .MR(MR),
        .Send_in(CE_Send_in),
        .Send_out(cf_send_out));
  LUT2 #(
    .INIT(4'hB)) 
    or_1_inferred_i_1
       (.I0(cf_send_out),
        .I1(DL),
        .O(or_1));
  LUT2 #(
    .INIT(4'hE)) 
    or_2_inferred_i_1
       (.I0(DL),
        .I1(cf_send_out),
        .O(or_2));
endmodule

(* ORIG_REF_NAME = "CE" *) (* dont_touch = "true" *) 
module CE__1
   (CE_Send_in,
    CE_Ack_in,
    MR,
    Exb,
    CE_Ack_out,
    CE_Send_out,
    CE_CP);
  input CE_Send_in;
  input CE_Ack_in;
  input MR;
  input Exb;
  output CE_Ack_out;
  output CE_Send_out;
  output CE_CP;

  wire CE_Ack_in;
  wire CE_Send_in;
  (* DONT_TOUCH *) wire DL;
  wire Exb;
  wire MR;
  (* DONT_TOUCH *) wire and_1;
  (* DONT_TOUCH *) wire cf_ack_out;
  (* DONT_TOUCH *) wire cf_send_out;
  (* DONT_TOUCH *) wire cp;
  (* DONT_TOUCH *) wire or_1;
  (* DONT_TOUCH *) wire or_2;

  assign CE_Ack_out = cf_ack_out;
  assign CE_CP = cp;
  assign CE_Send_out = or_1;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    DL_reg
       (.C(cp),
        .CE(1'b1),
        .D(Exb),
        .Q(DL),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    and_1_inferred_i_1
       (.I0(or_2),
        .I1(CE_Ack_in),
        .O(and_1));
  (* DONT_TOUCH *) 
  CF__4 cf
       (.Ack_in(and_1),
        .Ack_out(cf_ack_out),
        .CP(cp),
        .MR(MR),
        .Send_in(CE_Send_in),
        .Send_out(cf_send_out));
  LUT2 #(
    .INIT(4'hB)) 
    or_1_inferred_i_1
       (.I0(cf_send_out),
        .I1(DL),
        .O(or_1));
  LUT2 #(
    .INIT(4'hE)) 
    or_2_inferred_i_1
       (.I0(DL),
        .I1(cf_send_out),
        .O(or_2));
endmodule

(* dont_touch = "true" *) 
module CF
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__9 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__10 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CF" *) (* dont_touch = "true" *) 
module CF__1
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__25 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__24 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__23 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns__1 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CF" *) (* dont_touch = "true" *) 
module CF__2
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__28 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__27 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__26 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns__2 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CF" *) (* dont_touch = "true" *) 
module CF__3
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__31 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__30 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__29 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns__3 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CF" *) (* dont_touch = "true" *) 
module CF__4
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__34 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__33 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__32 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_2ns__4 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* dont_touch = "true" *) 
module CJ
   (Send_in,
    Ack_in,
    MR,
    G,
    Z_1,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  input G;
  input Z_1;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  wire G;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  wire Send_out;
  wire Z_1;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  LUT1 #(
    .INIT(2'h1)) 
    Send_out_INST_0
       (.I0(LD_out),
        .O(Send_out));
  (* DONT_TOUCH *) 
  Delay_4ns__1 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__2 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__3 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__4 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    nand3_out_inferred_i_1
       (.I0(Z_1),
        .I1(Send_in),
        .I2(Ack_in),
        .I3(LA_out),
        .I4(G),
        .I5(LC_out),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "CJ" *) (* dont_touch = "true" *) 
module CJ__1
   (Send_in,
    Ack_in,
    MR,
    G,
    Z_1,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  input G;
  input Z_1;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  wire G;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  wire Send_out;
  wire Z_1;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  LUT1 #(
    .INIT(2'h1)) 
    Send_out_INST_0
       (.I0(LD_out),
        .O(Send_out));
  (* DONT_TOUCH *) 
  Delay_4ns__38 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__37 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__36 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__35 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    nand3_out_inferred_i_1
       (.I0(Z_1),
        .I1(Send_in),
        .I2(Ack_in),
        .I3(LA_out),
        .I4(G),
        .I5(LC_out),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* dont_touch = "true" *) 
module CM
   (Send_in_a,
    Send_in_b,
    Ack_in,
    MR,
    Ack_out_a,
    Ack_out_b,
    Send_out,
    CP_a,
    CP_b,
    AEB);
  input Send_in_a;
  input Send_in_b;
  input Ack_in;
  input MR;
  output Ack_out_a;
  output Ack_out_b;
  output Send_out;
  output CP_a;
  output CP_b;
  output AEB;

  wire Ack_in;
  wire MR;
  wire Send_in_a;
  wire Send_in_b;
  (* DONT_TOUCH *) wire ack_out_a;
  (* DONT_TOUCH *) wire ack_out_b;
  wire cj_a_i_1_n_0;
  wire cj_b_i_1_n_0;
  (* DONT_TOUCH *) wire cp_a;
  (* DONT_TOUCH *) wire cp_b;
  (* DONT_TOUCH *) wire ga;
  (* DONT_TOUCH *) wire gb;
  (* DONT_TOUCH *) wire nor1;
  (* DONT_TOUCH *) wire nor2;
  (* DONT_TOUCH *) wire nor3;
  (* DONT_TOUCH *) wire send_in_b;
  (* DONT_TOUCH *) wire send_out_a;
  wire send_out_b;

  assign AEB = nor2;
  assign Ack_out_a = ack_out_a;
  assign Ack_out_b = ack_out_b;
  assign CP_a = cp_a;
  assign CP_b = cp_b;
  assign Send_out = nor1;
  (* DONT_TOUCH *) 
  ARB arb
       (.ARB_Ack_out_a(ack_out_a),
        .ARB_Ack_out_b(ack_out_b),
        .ARB_Ga(ga),
        .ARB_Gb(gb),
        .ARB_Send_in_a(Send_in_a),
        .ARB_Send_in_b(Send_in_b),
        .ARB_Za(cj_b_i_1_n_0),
        .ARB_Zb(cj_a_i_1_n_0),
        .MR(MR));
  (* DONT_TOUCH *) 
  CJ__1 cj_a
       (.Ack_in(Ack_in),
        .Ack_out(ack_out_a),
        .CP(cp_a),
        .G(ga),
        .MR(MR),
        .Send_in(Send_in_a),
        .Send_out(send_out_a),
        .Z_1(cj_a_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    cj_a_i_1
       (.I0(cp_b),
        .O(cj_a_i_1_n_0));
  (* DONT_TOUCH *) 
  CJ cj_b
       (.Ack_in(Ack_in),
        .Ack_out(ack_out_b),
        .CP(cp_b),
        .G(gb),
        .MR(MR),
        .Send_in(Send_in_b),
        .Send_out(send_out_b),
        .Z_1(cj_b_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    cj_b_i_1
       (.I0(cp_a),
        .O(cj_b_i_1_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(send_in_b));
  LUT2 #(
    .INIT(4'h1)) 
    nor1_inferred_i_1
       (.I0(send_out_a),
        .I1(send_out_b),
        .O(nor1));
  LUT2 #(
    .INIT(4'h1)) 
    nor2_inferred_i_1
       (.I0(cp_a),
        .I1(nor3),
        .O(nor2));
  LUT3 #(
    .INIT(8'h01)) 
    nor3_inferred_i_1
       (.I0(cp_b),
        .I1(nor2),
        .I2(MR),
        .O(nor3));
endmodule

(* CHECK_LICENSE_TYPE = "CMEM,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module CMEM
   (clka,
    addra,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [15:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [15:0]douta;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [15:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [15:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.7096 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "CMEM.mem" *) 
  (* C_INIT_FILE_NAME = "CMEM.mif" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "1" *) 
  (* C_MEM_TYPE = "3" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "16" *) 
  (* C_READ_WIDTH_B = "16" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "16" *) 
  (* C_WRITE_WIDTH_B = "16" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  CMEM_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .clka(clka),
        .clkb(1'b0),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(douta),
        .doutb(NLW_U0_doutb_UNCONNECTED[15:0]),
        .eccpipece(1'b0),
        .ena(1'b0),
        .enb(1'b0),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(1'b1),
        .regceb(1'b1),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[15:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(1'b0),
        .web(1'b0));
endmodule

(* dont_touch = "true" *) 
module COPY_Stage
   (Send_in,
    Ack_in,
    MR,
    PACKET_IN,
    Send_out,
    Ack_out,
    PACKET_OUT);
  input Send_in;
  input Ack_in;
  input MR;
  input [39:0]PACKET_IN;
  output Send_out;
  output Ack_out;
  output [37:0]PACKET_OUT;

  (* DONT_TOUCH *) wire [6:0]ADDER;
  wire ADDER_inferred_i_8_n_0;
  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire [39:0]DL;
  (* DONT_TOUCH *) wire EXB;
  (* DONT_TOUCH *) wire FEB;
  wire MR;
  wire [39:0]PACKET_IN;
  wire Send_in;
  wire Send_out;
  (* DONT_TOUCH *) wire [6:0]dest;
  (* DONT_TOUCH *) wire [6:0]mux1;
  (* DONT_TOUCH *) wire mux2;

  assign PACKET_OUT[37:27] = DL[39:29];
  assign PACKET_OUT[26:20] = mux1;
  assign PACKET_OUT[19] = mux2;
  assign PACKET_OUT[18] = DL[19];
  assign PACKET_OUT[17:0] = DL[17:0];
  LUT3 #(
    .INIT(8'h78)) 
    ADDER_inferred_i_1
       (.I0(ADDER_inferred_i_8_n_0),
        .I1(dest[5]),
        .I2(dest[6]),
        .O(ADDER[6]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    ADDER_inferred_i_2
       (.I0(dest[3]),
        .I1(dest[1]),
        .I2(dest[0]),
        .I3(dest[2]),
        .I4(dest[4]),
        .I5(dest[5]),
        .O(ADDER[5]));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    ADDER_inferred_i_3
       (.I0(dest[2]),
        .I1(dest[0]),
        .I2(dest[1]),
        .I3(dest[3]),
        .I4(dest[4]),
        .O(ADDER[4]));
  LUT4 #(
    .INIT(16'h7F80)) 
    ADDER_inferred_i_4
       (.I0(dest[1]),
        .I1(dest[0]),
        .I2(dest[2]),
        .I3(dest[3]),
        .O(ADDER[3]));
  LUT3 #(
    .INIT(8'h78)) 
    ADDER_inferred_i_5
       (.I0(dest[0]),
        .I1(dest[1]),
        .I2(dest[2]),
        .O(ADDER[2]));
  LUT2 #(
    .INIT(4'h6)) 
    ADDER_inferred_i_6
       (.I0(dest[0]),
        .I1(dest[1]),
        .O(ADDER[1]));
  LUT1 #(
    .INIT(2'h1)) 
    ADDER_inferred_i_7
       (.I0(dest[0]),
        .O(ADDER[0]));
  LUT5 #(
    .INIT(32'h80000000)) 
    ADDER_inferred_i_8
       (.I0(dest[4]),
        .I1(dest[2]),
        .I2(dest[0]),
        .I3(dest[1]),
        .I4(dest[3]),
        .O(ADDER_inferred_i_8_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst
       (.I0(DL[28]),
        .O(dest[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__0
       (.I0(DL[27]),
        .O(dest[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__1
       (.I0(DL[26]),
        .O(dest[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__2
       (.I0(DL[25]),
        .O(dest[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__3
       (.I0(DL[24]),
        .O(dest[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__4
       (.I0(DL[23]),
        .O(dest[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__5
       (.I0(DL[22]),
        .O(dest[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[38] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[38]),
        .Q(DL[38]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[39] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[39]),
        .Q(DL[39]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  (* GROUND = "1'b0" *) 
  CX2 cx2
       (.Ack_in(Ack_in),
        .Ack_out(Ack_out),
        .CP(CP),
        .CPY(PACKET_IN[18]),
        .EXB(EXB),
        .FEB(FEB),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(Send_out));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(EXB));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_1
       (.I0(ADDER[6]),
        .I1(dest[6]),
        .I2(FEB),
        .O(mux1[6]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_2
       (.I0(ADDER[5]),
        .I1(dest[5]),
        .I2(FEB),
        .O(mux1[5]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_3
       (.I0(ADDER[4]),
        .I1(dest[4]),
        .I2(FEB),
        .O(mux1[4]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_4
       (.I0(ADDER[3]),
        .I1(dest[3]),
        .I2(FEB),
        .O(mux1[3]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_5
       (.I0(ADDER[2]),
        .I1(dest[2]),
        .I2(FEB),
        .O(mux1[2]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_6
       (.I0(ADDER[1]),
        .I1(dest[1]),
        .I2(FEB),
        .O(mux1[1]));
  LUT3 #(
    .INIT(8'hAC)) 
    mux1_inferred_i_7
       (.I0(ADDER[0]),
        .I1(dest[0]),
        .I2(FEB),
        .O(mux1[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    mux2_inferred_i_1
       (.I0(DL[20]),
        .I1(FEB),
        .I2(DL[21]),
        .O(mux2));
endmodule

(* GROUND = "1'b0" *) (* dont_touch = "true" *) 
module CX2
   (Send_in,
    Ack_in,
    CPY,
    EXB,
    MR,
    Ack_out,
    Send_out,
    CP,
    FEB);
  input Send_in;
  input Ack_in;
  input CPY;
  input EXB;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;
  output FEB;

  wire Ack_in;
  wire CPY;
  (* DONT_TOUCH *) wire DL1S;
  wire DL1S_i_1_n_0;
  wire DL1S_i_2_n_0;
  wire DL1S_reg_C_n_0;
  wire DL1S_reg_LDC_n_0;
  wire DL1S_reg_P_n_0;
  (* DONT_TOUCH *) wire DL_cpy;
  (* DONT_TOUCH *) wire DL_exb;
  wire EXB;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire and1_out;
  (* DONT_TOUCH *) wire and2_out;
  (* DONT_TOUCH *) wire cf1_ack_out;
  (* DONT_TOUCH *) wire cf1_cp;
  (* DONT_TOUCH *) wire cf1_send_out;
  (* DONT_TOUCH *) wire cf2_ack_out;
  (* DONT_TOUCH *) wire cf2_cp;
  (* DONT_TOUCH *) wire cf2_send_out;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nor1_out;
  (* DONT_TOUCH *) wire nor2_out;
  (* DONT_TOUCH *) wire or1_out;
  (* DONT_TOUCH *) wire or2_out;
  wire NLW_DL1S_reg_Q_UNCONNECTED;

  assign Ack_out = cf1_ack_out;
  assign CP = cf1_cp;
  assign FEB = nor2_out;
  assign Send_out = and1_out;
  LUT2 #(
    .INIT(4'h8)) 
    DL1S_i_1
       (.I0(cf2_cp),
        .I1(DL1S),
        .O(DL1S_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    DL1S_i_2
       (.I0(or2_out),
        .O(DL1S_i_2_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    DL1S_inferred_i_1
       (.I0(DL1S_reg_P_n_0),
        .I1(DL1S_reg_LDC_n_0),
        .I2(DL1S_reg_C_n_0),
        .O(DL1S));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* XILINX_LEGACY_PRIM = "FDCP_1" *) 
  FDCP #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    DL1S_reg
       (.C(cf2_cp),
        .CLR(MR),
        .D(DL1S_i_1_n_0),
        .PRE(DL1S_i_2_n_0),
        .Q(NLW_DL1S_reg_Q_UNCONNECTED));
  (* XILINX_LEGACY_PRIM = "FDC_1" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    DL1S_reg_C
       (.C(cf2_cp),
        .CE(1'b1),
        .CLR(MR),
        .D(DL1S_i_1_n_0),
        .Q(DL1S_reg_C_n_0));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    DL1S_reg_LDC
       (.CLR(MR),
        .D(1'b1),
        .G(DL1S_i_2_n_0),
        .GE(1'b1),
        .Q(DL1S_reg_LDC_n_0));
  (* XILINX_LEGACY_PRIM = "FDP_1" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b1)) 
    DL1S_reg_P
       (.C(cf2_cp),
        .CE(1'b1),
        .D(DL1S_i_1_n_0),
        .PRE(DL1S_i_2_n_0),
        .Q(DL1S_reg_P_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    DL_cpy_reg
       (.C(cf1_cp),
        .CE(1'b1),
        .CLR(MR),
        .D(CPY),
        .Q(DL_cpy));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    DL_exb_reg
       (.C(cf1_cp),
        .CE(1'b1),
        .D(EXB),
        .PRE(MR),
        .Q(DL_exb));
  LUT2 #(
    .INIT(4'h8)) 
    and1_out_inferred_i_1
       (.I0(nand2_out),
        .I1(cf2_send_out),
        .O(and1_out));
  LUT3 #(
    .INIT(8'h20)) 
    and2_out_inferred_i_1
       (.I0(or1_out),
        .I1(DL1S),
        .I2(Ack_in),
        .O(and2_out));
  (* DONT_TOUCH *) 
  CF__2 cf1
       (.Ack_in(and2_out),
        .Ack_out(cf1_ack_out),
        .CP(cf1_cp),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(cf1_send_out));
  (* DONT_TOUCH *) 
  CF__3 cf2
       (.Ack_in(Ack_in),
        .Ack_out(cf2_ack_out),
        .CP(cf2_cp),
        .MR(MR),
        .Send_in(nand1_out),
        .Send_out(cf2_send_out));
  LUT3 #(
    .INIT(8'hBF)) 
    nand1_out_inferred_i_1
       (.I0(cf1_send_out),
        .I1(DL_exb),
        .I2(DL_cpy),
        .O(nand1_out));
  LUT2 #(
    .INIT(4'hB)) 
    nand2_out_inferred_i_1
       (.I0(cf1_send_out),
        .I1(DL_exb),
        .O(nand2_out));
  LUT2 #(
    .INIT(4'h1)) 
    nor1_out_inferred_i_1
       (.I0(cf2_cp),
        .I1(nor2_out),
        .O(nor1_out));
  LUT2 #(
    .INIT(4'h1)) 
    nor2_out_inferred_i_1
       (.I0(cf1_cp),
        .I1(nor1_out),
        .O(nor2_out));
  LUT2 #(
    .INIT(4'hE)) 
    or1_out_inferred_i_1
       (.I0(DL_exb),
        .I1(cf1_send_out),
        .O(or1_out));
  LUT2 #(
    .INIT(4'hE)) 
    or2_out_inferred_i_1
       (.I0(cf2_ack_out),
        .I1(Ack_in),
        .O(or2_out));
endmodule

(* ORIG_REF_NAME = "C" *) (* dont_touch = "true" *) 
module C__1
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__14 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__13 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__12 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__11 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "C" *) (* dont_touch = "true" *) 
module C__2
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__18 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__17 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__16 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__15 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* ORIG_REF_NAME = "C" *) (* dont_touch = "true" *) 
module C__3
   (Send_in,
    Ack_in,
    MR,
    Ack_out,
    Send_out,
    CP);
  input Send_in;
  input Ack_in;
  input MR;
  output Ack_out;
  output Send_out;
  output CP;

  wire Ack_in;
  wire Ack_out;
  wire CP;
  (* DONT_TOUCH *) wire LA_out;
  (* DONT_TOUCH *) wire LB_out;
  (* DONT_TOUCH *) wire LC_out;
  (* DONT_TOUCH *) wire LD_out;
  wire MR;
  wire Send_in;
  (* DONT_TOUCH *) wire nand1_out;
  (* DONT_TOUCH *) wire nand2_out;
  (* DONT_TOUCH *) wire nand3_out;
  (* DONT_TOUCH *) wire nand4_out;
  (* DONT_TOUCH *) wire nand5_out;
  (* DONT_TOUCH *) wire not1_out;

  assign Send_out = LD_out;
  LUT1 #(
    .INIT(2'h1)) 
    Ack_out_INST_0
       (.I0(LB_out),
        .O(Ack_out));
  LUT1 #(
    .INIT(2'h1)) 
    CP_INST_0
       (.I0(nand5_out),
        .O(CP));
  (* DONT_TOUCH *) 
  Delay_4ns__22 delay1
       (.din(nand1_out),
        .dout(LA_out));
  (* DONT_TOUCH *) 
  Delay_4ns__21 delay2
       (.din(nand1_out),
        .dout(LB_out));
  (* DONT_TOUCH *) 
  Delay_4ns__20 delay3
       (.din(nand5_out),
        .dout(LC_out));
  (* DONT_TOUCH *) 
  Delay_4ns__19 delay4
       (.din(LC_out),
        .dout(LD_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand1_out_inferred_i_1
       (.I0(Send_in),
        .I1(nand2_out),
        .O(nand1_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand2_out_inferred_i_1
       (.I0(nand1_out),
        .I1(not1_out),
        .I2(nand3_out),
        .O(nand2_out));
  LUT4 #(
    .INIT(16'h7FFF)) 
    nand3_out_inferred_i_1
       (.I0(LC_out),
        .I1(Send_in),
        .I2(LA_out),
        .I3(Ack_in),
        .O(nand3_out));
  LUT2 #(
    .INIT(4'h7)) 
    nand4_out_inferred_i_1
       (.I0(nand3_out),
        .I1(nand5_out),
        .O(nand4_out));
  LUT3 #(
    .INIT(8'h7F)) 
    nand5_out_inferred_i_1
       (.I0(nand4_out),
        .I1(not1_out),
        .I2(Ack_in),
        .O(nand5_out));
  LUT1 #(
    .INIT(2'h1)) 
    not1_out_inferred_i_1
       (.I0(MR),
        .O(not1_out));
endmodule

(* CHECK_LICENSE_TYPE = "DMEM,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module DMEM
   (clka,
    wea,
    addra,
    dina,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [15:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [15:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [15:0]dina;
  wire [15:0]douta;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [15:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [15:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.87285 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "DMEM.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "0" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "16" *) 
  (* C_READ_WIDTH_B = "16" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "16" *) 
  (* C_WRITE_WIDTH_B = "16" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  DMEM_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .clka(clka),
        .clkb(1'b0),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(douta),
        .doutb(NLW_U0_doutb_UNCONNECTED[15:0]),
        .eccpipece(1'b0),
        .ena(1'b0),
        .enb(1'b0),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(1'b1),
        .regceb(1'b1),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[15:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* dont_touch = "true" *) 
module Delay_2ns
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__1
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__2
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__3
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_2ns" *) (* dont_touch = "true" *) 
module Delay_2ns__4
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(dout));
endmodule

(* dont_touch = "true" *) 
module Delay_4ns
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__1
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__10
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__11
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__12
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__13
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__14
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__15
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__16
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__17
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__18
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__19
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__2
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__20
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__21
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__22
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__23
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__24
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__25
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__26
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__27
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__28
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__29
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__3
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__30
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__31
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__32
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__33
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__34
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__35
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__36
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__37
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__38
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__4
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__5
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__6
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__7
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__8
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* ORIG_REF_NAME = "Delay_4ns" *) (* dont_touch = "true" *) 
module Delay_4ns__9
   (din,
    dout);
  input din;
  output dout;

  wire din;
  wire dout;
  (* DONT_TOUCH *) wire t00;
  (* DONT_TOUCH *) wire t01;
  (* DONT_TOUCH *) wire t02;
  (* DONT_TOUCH *) wire t03;
  (* DONT_TOUCH *) wire t04;
  (* DONT_TOUCH *) wire t05;
  (* DONT_TOUCH *) wire t06;
  (* DONT_TOUCH *) wire t07;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_00
       (.I0(din),
        .O(t00));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_01
       (.I0(t00),
        .O(t01));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_02
       (.I0(t01),
        .O(t02));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_03
       (.I0(t02),
        .O(t03));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_04
       (.I0(t03),
        .O(t04));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_05
       (.I0(t04),
        .O(t05));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_06
       (.I0(t05),
        .O(t06));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_07
       (.I0(t06),
        .O(t07));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* DONT_TOUCH *) 
  LUT1 #(
    .INIT(2'h2)) 
    buf_inst_08
       (.I0(t07),
        .O(dout));
endmodule

(* dont_touch = "true" *) 
module ENTRY_FD
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__1
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__10
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__11
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__12
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__13
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__14
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__15
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__16
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__17
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__18
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__19
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__2
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__3
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__4
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__5
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__6
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__7
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__8
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* ORIG_REF_NAME = "ENTRY_FD" *) (* dont_touch = "true" *) 
module ENTRY_FD__9
   (EN,
    CP,
    MR,
    COLOR_GEN_DEST_LR,
    VALID,
    FIRE);
  input EN;
  input CP;
  input MR;
  input [18:0]COLOR_GEN_DEST_LR;
  output VALID;
  output FIRE;

  wire [18:0]COLOR_GEN_DEST_LR;
  wire CP;
  wire EN;
  (* DONT_TOUCH *) wire [18:0]ENTRY;
  wire \ENTRY[0]_C_i_1_n_0 ;
  wire \ENTRY[0]_i_1_n_0 ;
  wire \ENTRY[0]_i_2_n_0 ;
  wire \ENTRY[10]_C_i_1_n_0 ;
  wire \ENTRY[10]_i_1_n_0 ;
  wire \ENTRY[10]_i_2_n_0 ;
  wire \ENTRY[11]_C_i_1_n_0 ;
  wire \ENTRY[11]_i_1_n_0 ;
  wire \ENTRY[11]_i_2_n_0 ;
  wire \ENTRY[12]_C_i_1_n_0 ;
  wire \ENTRY[12]_i_1_n_0 ;
  wire \ENTRY[12]_i_2_n_0 ;
  wire \ENTRY[13]_C_i_1_n_0 ;
  wire \ENTRY[13]_i_1_n_0 ;
  wire \ENTRY[13]_i_2_n_0 ;
  wire \ENTRY[14]_C_i_1_n_0 ;
  wire \ENTRY[14]_i_1_n_0 ;
  wire \ENTRY[14]_i_2_n_0 ;
  wire \ENTRY[15]_C_i_1_n_0 ;
  wire \ENTRY[15]_i_1_n_0 ;
  wire \ENTRY[15]_i_2_n_0 ;
  wire \ENTRY[16]_C_i_1_n_0 ;
  wire \ENTRY[16]_i_1_n_0 ;
  wire \ENTRY[16]_i_2_n_0 ;
  wire \ENTRY[17]_C_i_1_n_0 ;
  wire \ENTRY[17]_i_1_n_0 ;
  wire \ENTRY[17]_i_2_n_0 ;
  wire \ENTRY[18]_C_i_1_n_0 ;
  wire \ENTRY[18]_i_1_n_0 ;
  wire \ENTRY[18]_i_2_n_0 ;
  wire \ENTRY[1]_C_i_1_n_0 ;
  wire \ENTRY[1]_i_1_n_0 ;
  wire \ENTRY[1]_i_2_n_0 ;
  wire \ENTRY[2]_C_i_1_n_0 ;
  wire \ENTRY[2]_i_1_n_0 ;
  wire \ENTRY[2]_i_2_n_0 ;
  wire \ENTRY[3]_C_i_1_n_0 ;
  wire \ENTRY[3]_i_1_n_0 ;
  wire \ENTRY[3]_i_2_n_0 ;
  wire \ENTRY[4]_C_i_1_n_0 ;
  wire \ENTRY[4]_i_1_n_0 ;
  wire \ENTRY[4]_i_2_n_0 ;
  wire \ENTRY[5]_C_i_1_n_0 ;
  wire \ENTRY[5]_i_1_n_0 ;
  wire \ENTRY[5]_i_2_n_0 ;
  wire \ENTRY[6]_C_i_1_n_0 ;
  wire \ENTRY[6]_i_1_n_0 ;
  wire \ENTRY[6]_i_2_n_0 ;
  wire \ENTRY[7]_C_i_1_n_0 ;
  wire \ENTRY[7]_i_1_n_0 ;
  wire \ENTRY[7]_i_2_n_0 ;
  wire \ENTRY[8]_C_i_1_n_0 ;
  wire \ENTRY[8]_i_1_n_0 ;
  wire \ENTRY[8]_i_2_n_0 ;
  wire \ENTRY[9]_C_i_1_n_0 ;
  wire \ENTRY[9]_i_1_n_0 ;
  wire \ENTRY[9]_i_2_n_0 ;
  wire \ENTRY_reg[0]_C_n_0 ;
  wire \ENTRY_reg[0]_LDC_n_0 ;
  wire \ENTRY_reg[0]_P_n_0 ;
  wire \ENTRY_reg[10]_C_n_0 ;
  wire \ENTRY_reg[10]_LDC_n_0 ;
  wire \ENTRY_reg[10]_P_n_0 ;
  wire \ENTRY_reg[11]_C_n_0 ;
  wire \ENTRY_reg[11]_LDC_n_0 ;
  wire \ENTRY_reg[11]_P_n_0 ;
  wire \ENTRY_reg[12]_C_n_0 ;
  wire \ENTRY_reg[12]_LDC_n_0 ;
  wire \ENTRY_reg[12]_P_n_0 ;
  wire \ENTRY_reg[13]_C_n_0 ;
  wire \ENTRY_reg[13]_LDC_n_0 ;
  wire \ENTRY_reg[13]_P_n_0 ;
  wire \ENTRY_reg[14]_C_n_0 ;
  wire \ENTRY_reg[14]_LDC_n_0 ;
  wire \ENTRY_reg[14]_P_n_0 ;
  wire \ENTRY_reg[15]_C_n_0 ;
  wire \ENTRY_reg[15]_LDC_n_0 ;
  wire \ENTRY_reg[15]_P_n_0 ;
  wire \ENTRY_reg[16]_C_n_0 ;
  wire \ENTRY_reg[16]_LDC_n_0 ;
  wire \ENTRY_reg[16]_P_n_0 ;
  wire \ENTRY_reg[17]_C_n_0 ;
  wire \ENTRY_reg[17]_LDC_n_0 ;
  wire \ENTRY_reg[17]_P_n_0 ;
  wire \ENTRY_reg[18]_C_n_0 ;
  wire \ENTRY_reg[18]_LDC_n_0 ;
  wire \ENTRY_reg[18]_P_n_0 ;
  wire \ENTRY_reg[1]_C_n_0 ;
  wire \ENTRY_reg[1]_LDC_n_0 ;
  wire \ENTRY_reg[1]_P_n_0 ;
  wire \ENTRY_reg[2]_C_n_0 ;
  wire \ENTRY_reg[2]_LDC_n_0 ;
  wire \ENTRY_reg[2]_P_n_0 ;
  wire \ENTRY_reg[3]_C_n_0 ;
  wire \ENTRY_reg[3]_LDC_n_0 ;
  wire \ENTRY_reg[3]_P_n_0 ;
  wire \ENTRY_reg[4]_C_n_0 ;
  wire \ENTRY_reg[4]_LDC_n_0 ;
  wire \ENTRY_reg[4]_P_n_0 ;
  wire \ENTRY_reg[5]_C_n_0 ;
  wire \ENTRY_reg[5]_LDC_n_0 ;
  wire \ENTRY_reg[5]_P_n_0 ;
  wire \ENTRY_reg[6]_C_n_0 ;
  wire \ENTRY_reg[6]_LDC_n_0 ;
  wire \ENTRY_reg[6]_P_n_0 ;
  wire \ENTRY_reg[7]_C_n_0 ;
  wire \ENTRY_reg[7]_LDC_n_0 ;
  wire \ENTRY_reg[7]_P_n_0 ;
  wire \ENTRY_reg[8]_C_n_0 ;
  wire \ENTRY_reg[8]_LDC_n_0 ;
  wire \ENTRY_reg[8]_P_n_0 ;
  wire \ENTRY_reg[9]_C_n_0 ;
  wire \ENTRY_reg[9]_LDC_n_0 ;
  wire \ENTRY_reg[9]_P_n_0 ;
  wire FIRE;
  wire FIRE11_in;
  wire FIRE_INST_0_i_1_n_3;
  wire FIRE_INST_0_i_2_n_0;
  wire FIRE_INST_0_i_2_n_1;
  wire FIRE_INST_0_i_2_n_2;
  wire FIRE_INST_0_i_2_n_3;
  wire FIRE_INST_0_i_3_n_0;
  wire FIRE_INST_0_i_4_n_0;
  wire FIRE_INST_0_i_5_n_0;
  wire FIRE_INST_0_i_6_n_0;
  wire FIRE_INST_0_i_7_n_0;
  wire FIRE_INST_0_i_8_n_0;
  wire MR;
  (* DONT_TOUCH *) wire VALID_reg;
  wire VALID_reg_i_1_n_0;
  wire \NLW_ENTRY_reg[0]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[10]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[11]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[12]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[13]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[14]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[15]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[16]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[17]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[18]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[1]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[2]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[3]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[4]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[5]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[6]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[7]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[8]_Q_UNCONNECTED ;
  wire \NLW_ENTRY_reg[9]_Q_UNCONNECTED ;
  wire [3:2]NLW_FIRE_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_1_O_UNCONNECTED;
  wire [3:0]NLW_FIRE_INST_0_i_2_O_UNCONNECTED;

  assign VALID = VALID_reg;
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[0]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[0]),
        .I1(EN),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(\ENTRY[0]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[0]_i_1 
       (.I0(MR),
        .I1(ENTRY[0]),
        .O(\ENTRY[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[0]_i_2 
       (.I0(ENTRY[0]),
        .I1(MR),
        .O(\ENTRY[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[10]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[10]),
        .I1(EN),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(\ENTRY[10]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[10]_i_1 
       (.I0(MR),
        .I1(ENTRY[10]),
        .O(\ENTRY[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[10]_i_2 
       (.I0(ENTRY[10]),
        .I1(MR),
        .O(\ENTRY[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[11]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[11]),
        .I1(EN),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(\ENTRY[11]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[11]_i_1 
       (.I0(MR),
        .I1(ENTRY[11]),
        .O(\ENTRY[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[11]_i_2 
       (.I0(ENTRY[11]),
        .I1(MR),
        .O(\ENTRY[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[12]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[12]),
        .I1(EN),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(\ENTRY[12]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[12]_i_1 
       (.I0(MR),
        .I1(ENTRY[12]),
        .O(\ENTRY[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[12]_i_2 
       (.I0(ENTRY[12]),
        .I1(MR),
        .O(\ENTRY[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[13]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[13]),
        .I1(EN),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(\ENTRY[13]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[13]_i_1 
       (.I0(MR),
        .I1(ENTRY[13]),
        .O(\ENTRY[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[13]_i_2 
       (.I0(ENTRY[13]),
        .I1(MR),
        .O(\ENTRY[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[14]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[14]),
        .I1(EN),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(\ENTRY[14]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[14]_i_1 
       (.I0(MR),
        .I1(ENTRY[14]),
        .O(\ENTRY[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[14]_i_2 
       (.I0(ENTRY[14]),
        .I1(MR),
        .O(\ENTRY[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[15]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[15]),
        .I1(EN),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(\ENTRY[15]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[15]_i_1 
       (.I0(MR),
        .I1(ENTRY[15]),
        .O(\ENTRY[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[15]_i_2 
       (.I0(ENTRY[15]),
        .I1(MR),
        .O(\ENTRY[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[16]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[16]),
        .I1(EN),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(\ENTRY[16]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[16]_i_1 
       (.I0(MR),
        .I1(ENTRY[16]),
        .O(\ENTRY[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[16]_i_2 
       (.I0(ENTRY[16]),
        .I1(MR),
        .O(\ENTRY[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[17]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[17]),
        .I1(EN),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(\ENTRY[17]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[17]_i_1 
       (.I0(MR),
        .I1(ENTRY[17]),
        .O(\ENTRY[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[17]_i_2 
       (.I0(ENTRY[17]),
        .I1(MR),
        .O(\ENTRY[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[18]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[18]),
        .I1(EN),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(\ENTRY[18]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[18]_i_1 
       (.I0(MR),
        .I1(ENTRY[18]),
        .O(\ENTRY[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[18]_i_2 
       (.I0(ENTRY[18]),
        .I1(MR),
        .O(\ENTRY[18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[1]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[1]),
        .I1(EN),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(\ENTRY[1]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[1]_i_1 
       (.I0(MR),
        .I1(ENTRY[1]),
        .O(\ENTRY[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[1]_i_2 
       (.I0(ENTRY[1]),
        .I1(MR),
        .O(\ENTRY[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[2]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[2]),
        .I1(EN),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(\ENTRY[2]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[2]_i_1 
       (.I0(MR),
        .I1(ENTRY[2]),
        .O(\ENTRY[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[2]_i_2 
       (.I0(ENTRY[2]),
        .I1(MR),
        .O(\ENTRY[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[3]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[3]),
        .I1(EN),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(\ENTRY[3]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[3]_i_1 
       (.I0(MR),
        .I1(ENTRY[3]),
        .O(\ENTRY[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[3]_i_2 
       (.I0(ENTRY[3]),
        .I1(MR),
        .O(\ENTRY[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[4]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[4]),
        .I1(EN),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(\ENTRY[4]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[4]_i_1 
       (.I0(MR),
        .I1(ENTRY[4]),
        .O(\ENTRY[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[4]_i_2 
       (.I0(ENTRY[4]),
        .I1(MR),
        .O(\ENTRY[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[5]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[5]),
        .I1(EN),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(\ENTRY[5]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[5]_i_1 
       (.I0(MR),
        .I1(ENTRY[5]),
        .O(\ENTRY[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[5]_i_2 
       (.I0(ENTRY[5]),
        .I1(MR),
        .O(\ENTRY[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[6]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[6]),
        .I1(EN),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(\ENTRY[6]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[6]_i_1 
       (.I0(MR),
        .I1(ENTRY[6]),
        .O(\ENTRY[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[6]_i_2 
       (.I0(ENTRY[6]),
        .I1(MR),
        .O(\ENTRY[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[7]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[7]),
        .I1(EN),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(\ENTRY[7]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[7]_i_1 
       (.I0(MR),
        .I1(ENTRY[7]),
        .O(\ENTRY[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[7]_i_2 
       (.I0(ENTRY[7]),
        .I1(MR),
        .O(\ENTRY[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[8]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[8]),
        .I1(EN),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(\ENTRY[8]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[8]_i_1 
       (.I0(MR),
        .I1(ENTRY[8]),
        .O(\ENTRY[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[8]_i_2 
       (.I0(ENTRY[8]),
        .I1(MR),
        .O(\ENTRY[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ENTRY[9]_C_i_1 
       (.I0(COLOR_GEN_DEST_LR[9]),
        .I1(EN),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(\ENTRY[9]_C_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \ENTRY[9]_i_1 
       (.I0(MR),
        .I1(ENTRY[9]),
        .O(\ENTRY[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \ENTRY[9]_i_2 
       (.I0(ENTRY[9]),
        .I1(MR),
        .O(\ENTRY[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_1
       (.I0(\ENTRY_reg[18]_P_n_0 ),
        .I1(\ENTRY_reg[18]_LDC_n_0 ),
        .I2(\ENTRY_reg[18]_C_n_0 ),
        .O(ENTRY[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_10
       (.I0(\ENTRY_reg[9]_P_n_0 ),
        .I1(\ENTRY_reg[9]_LDC_n_0 ),
        .I2(\ENTRY_reg[9]_C_n_0 ),
        .O(ENTRY[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_11
       (.I0(\ENTRY_reg[8]_P_n_0 ),
        .I1(\ENTRY_reg[8]_LDC_n_0 ),
        .I2(\ENTRY_reg[8]_C_n_0 ),
        .O(ENTRY[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_12
       (.I0(\ENTRY_reg[7]_P_n_0 ),
        .I1(\ENTRY_reg[7]_LDC_n_0 ),
        .I2(\ENTRY_reg[7]_C_n_0 ),
        .O(ENTRY[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_13
       (.I0(\ENTRY_reg[6]_P_n_0 ),
        .I1(\ENTRY_reg[6]_LDC_n_0 ),
        .I2(\ENTRY_reg[6]_C_n_0 ),
        .O(ENTRY[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_14
       (.I0(\ENTRY_reg[5]_P_n_0 ),
        .I1(\ENTRY_reg[5]_LDC_n_0 ),
        .I2(\ENTRY_reg[5]_C_n_0 ),
        .O(ENTRY[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_15
       (.I0(\ENTRY_reg[4]_P_n_0 ),
        .I1(\ENTRY_reg[4]_LDC_n_0 ),
        .I2(\ENTRY_reg[4]_C_n_0 ),
        .O(ENTRY[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_16
       (.I0(\ENTRY_reg[3]_P_n_0 ),
        .I1(\ENTRY_reg[3]_LDC_n_0 ),
        .I2(\ENTRY_reg[3]_C_n_0 ),
        .O(ENTRY[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_17
       (.I0(\ENTRY_reg[2]_P_n_0 ),
        .I1(\ENTRY_reg[2]_LDC_n_0 ),
        .I2(\ENTRY_reg[2]_C_n_0 ),
        .O(ENTRY[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_18
       (.I0(\ENTRY_reg[1]_P_n_0 ),
        .I1(\ENTRY_reg[1]_LDC_n_0 ),
        .I2(\ENTRY_reg[1]_C_n_0 ),
        .O(ENTRY[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_19
       (.I0(\ENTRY_reg[0]_P_n_0 ),
        .I1(\ENTRY_reg[0]_LDC_n_0 ),
        .I2(\ENTRY_reg[0]_C_n_0 ),
        .O(ENTRY[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_2
       (.I0(\ENTRY_reg[17]_P_n_0 ),
        .I1(\ENTRY_reg[17]_LDC_n_0 ),
        .I2(\ENTRY_reg[17]_C_n_0 ),
        .O(ENTRY[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_3
       (.I0(\ENTRY_reg[16]_P_n_0 ),
        .I1(\ENTRY_reg[16]_LDC_n_0 ),
        .I2(\ENTRY_reg[16]_C_n_0 ),
        .O(ENTRY[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_4
       (.I0(\ENTRY_reg[15]_P_n_0 ),
        .I1(\ENTRY_reg[15]_LDC_n_0 ),
        .I2(\ENTRY_reg[15]_C_n_0 ),
        .O(ENTRY[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_5
       (.I0(\ENTRY_reg[14]_P_n_0 ),
        .I1(\ENTRY_reg[14]_LDC_n_0 ),
        .I2(\ENTRY_reg[14]_C_n_0 ),
        .O(ENTRY[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_6
       (.I0(\ENTRY_reg[13]_P_n_0 ),
        .I1(\ENTRY_reg[13]_LDC_n_0 ),
        .I2(\ENTRY_reg[13]_C_n_0 ),
        .O(ENTRY[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_7
       (.I0(\ENTRY_reg[12]_P_n_0 ),
        .I1(\ENTRY_reg[12]_LDC_n_0 ),
        .I2(\ENTRY_reg[12]_C_n_0 ),
        .O(ENTRY[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_8
       (.I0(\ENTRY_reg[11]_P_n_0 ),
        .I1(\ENTRY_reg[11]_LDC_n_0 ),
        .I2(\ENTRY_reg[11]_C_n_0 ),
        .O(ENTRY[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ENTRY_inferred_i_9
       (.I0(\ENTRY_reg[10]_P_n_0 ),
        .I1(\ENTRY_reg[10]_LDC_n_0 ),
        .I2(\ENTRY_reg[10]_C_n_0 ),
        .O(ENTRY[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[0]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[0]_i_1_n_0 ),
        .D(\ENTRY[0]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[0]_LDC 
       (.CLR(\ENTRY[0]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[0]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[0]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[0]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[0]),
        .PRE(\ENTRY[0]_i_2_n_0 ),
        .Q(\ENTRY_reg[0]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[10]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[10]_i_1_n_0 ),
        .D(\ENTRY[10]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[10]_LDC 
       (.CLR(\ENTRY[10]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[10]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[10]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[10]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[10]),
        .PRE(\ENTRY[10]_i_2_n_0 ),
        .Q(\ENTRY_reg[10]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[11]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[11]_i_1_n_0 ),
        .D(\ENTRY[11]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[11]_LDC 
       (.CLR(\ENTRY[11]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[11]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[11]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[11]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[11]),
        .PRE(\ENTRY[11]_i_2_n_0 ),
        .Q(\ENTRY_reg[11]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[12]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[12]_i_1_n_0 ),
        .D(\ENTRY[12]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[12]_LDC 
       (.CLR(\ENTRY[12]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[12]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[12]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[12]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[12]),
        .PRE(\ENTRY[12]_i_2_n_0 ),
        .Q(\ENTRY_reg[12]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[13]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[13]_i_1_n_0 ),
        .D(\ENTRY[13]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[13]_LDC 
       (.CLR(\ENTRY[13]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[13]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[13]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[13]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[13]),
        .PRE(\ENTRY[13]_i_2_n_0 ),
        .Q(\ENTRY_reg[13]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[14]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[14]_i_1_n_0 ),
        .D(\ENTRY[14]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[14]_LDC 
       (.CLR(\ENTRY[14]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[14]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[14]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[14]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[14]),
        .PRE(\ENTRY[14]_i_2_n_0 ),
        .Q(\ENTRY_reg[14]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[15]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[15]_i_1_n_0 ),
        .D(\ENTRY[15]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[15]_LDC 
       (.CLR(\ENTRY[15]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[15]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[15]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[15]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[15]),
        .PRE(\ENTRY[15]_i_2_n_0 ),
        .Q(\ENTRY_reg[15]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[16]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[16]_i_1_n_0 ),
        .D(\ENTRY[16]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[16]_LDC 
       (.CLR(\ENTRY[16]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[16]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[16]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[16]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[16]),
        .PRE(\ENTRY[16]_i_2_n_0 ),
        .Q(\ENTRY_reg[16]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[17]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[17]_i_1_n_0 ),
        .D(\ENTRY[17]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[17]_LDC 
       (.CLR(\ENTRY[17]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[17]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[17]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[17]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[17]),
        .PRE(\ENTRY[17]_i_2_n_0 ),
        .Q(\ENTRY_reg[17]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[18]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[18]_i_1_n_0 ),
        .D(\ENTRY[18]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[18]_LDC 
       (.CLR(\ENTRY[18]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[18]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[18]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[18]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[18]),
        .PRE(\ENTRY[18]_i_2_n_0 ),
        .Q(\ENTRY_reg[18]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[1]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[1]_i_1_n_0 ),
        .D(\ENTRY[1]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[1]_LDC 
       (.CLR(\ENTRY[1]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[1]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[1]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[1]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[1]),
        .PRE(\ENTRY[1]_i_2_n_0 ),
        .Q(\ENTRY_reg[1]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[2]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[2]_i_1_n_0 ),
        .D(\ENTRY[2]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[2]_LDC 
       (.CLR(\ENTRY[2]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[2]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[2]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[2]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[2]),
        .PRE(\ENTRY[2]_i_2_n_0 ),
        .Q(\ENTRY_reg[2]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[3]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[3]_i_1_n_0 ),
        .D(\ENTRY[3]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[3]_LDC 
       (.CLR(\ENTRY[3]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[3]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[3]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[3]),
        .PRE(\ENTRY[3]_i_2_n_0 ),
        .Q(\ENTRY_reg[3]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[4]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[4]_i_1_n_0 ),
        .D(\ENTRY[4]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[4]_LDC 
       (.CLR(\ENTRY[4]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[4]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[4]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[4]),
        .PRE(\ENTRY[4]_i_2_n_0 ),
        .Q(\ENTRY_reg[4]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[5]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[5]_i_1_n_0 ),
        .D(\ENTRY[5]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[5]_LDC 
       (.CLR(\ENTRY[5]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[5]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[5]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[5]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[5]),
        .PRE(\ENTRY[5]_i_2_n_0 ),
        .Q(\ENTRY_reg[5]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[6]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[6]_i_1_n_0 ),
        .D(\ENTRY[6]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[6]_LDC 
       (.CLR(\ENTRY[6]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[6]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[6]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[6]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[6]),
        .PRE(\ENTRY[6]_i_2_n_0 ),
        .Q(\ENTRY_reg[6]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[7]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[7]_i_1_n_0 ),
        .D(\ENTRY[7]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[7]_LDC 
       (.CLR(\ENTRY[7]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[7]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[7]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[7]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[7]),
        .PRE(\ENTRY[7]_i_2_n_0 ),
        .Q(\ENTRY_reg[7]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[8]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[8]_i_1_n_0 ),
        .D(\ENTRY[8]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[8]_LDC 
       (.CLR(\ENTRY[8]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[8]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[8]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[8]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[8]),
        .PRE(\ENTRY[8]_i_2_n_0 ),
        .Q(\ENTRY_reg[8]_P_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCPE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9] 
       (.C(CP),
        .CE(EN),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\NLW_ENTRY_reg[9]_Q_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_C 
       (.C(CP),
        .CE(1'b1),
        .CLR(\ENTRY[9]_i_1_n_0 ),
        .D(\ENTRY[9]_C_i_1_n_0 ),
        .Q(\ENTRY_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:GE" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ENTRY_reg[9]_LDC 
       (.CLR(\ENTRY[9]_i_1_n_0 ),
        .D(1'b1),
        .G(\ENTRY[9]_i_2_n_0 ),
        .GE(1'b1),
        .Q(\ENTRY_reg[9]_LDC_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ENTRY_reg[9]_P 
       (.C(CP),
        .CE(EN),
        .D(COLOR_GEN_DEST_LR[9]),
        .PRE(\ENTRY[9]_i_2_n_0 ),
        .Q(\ENTRY_reg[9]_P_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    FIRE_INST_0
       (.I0(FIRE11_in),
        .I1(COLOR_GEN_DEST_LR[0]),
        .I2(ENTRY[0]),
        .I3(VALID_reg),
        .O(FIRE));
  CARRY4 FIRE_INST_0_i_1
       (.CI(FIRE_INST_0_i_2_n_0),
        .CO({NLW_FIRE_INST_0_i_1_CO_UNCONNECTED[3:2],FIRE11_in,FIRE_INST_0_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,FIRE_INST_0_i_3_n_0,FIRE_INST_0_i_4_n_0}));
  CARRY4 FIRE_INST_0_i_2
       (.CI(1'b0),
        .CO({FIRE_INST_0_i_2_n_0,FIRE_INST_0_i_2_n_1,FIRE_INST_0_i_2_n_2,FIRE_INST_0_i_2_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_FIRE_INST_0_i_2_O_UNCONNECTED[3:0]),
        .S({FIRE_INST_0_i_5_n_0,FIRE_INST_0_i_6_n_0,FIRE_INST_0_i_7_n_0,FIRE_INST_0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_3
       (.I0(ENTRY[16]),
        .I1(COLOR_GEN_DEST_LR[16]),
        .I2(COLOR_GEN_DEST_LR[18]),
        .I3(ENTRY[18]),
        .I4(COLOR_GEN_DEST_LR[17]),
        .I5(ENTRY[17]),
        .O(FIRE_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_4
       (.I0(ENTRY[13]),
        .I1(COLOR_GEN_DEST_LR[13]),
        .I2(COLOR_GEN_DEST_LR[15]),
        .I3(ENTRY[15]),
        .I4(COLOR_GEN_DEST_LR[14]),
        .I5(ENTRY[14]),
        .O(FIRE_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_5
       (.I0(ENTRY[10]),
        .I1(COLOR_GEN_DEST_LR[10]),
        .I2(COLOR_GEN_DEST_LR[12]),
        .I3(ENTRY[12]),
        .I4(COLOR_GEN_DEST_LR[11]),
        .I5(ENTRY[11]),
        .O(FIRE_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_6
       (.I0(ENTRY[7]),
        .I1(COLOR_GEN_DEST_LR[7]),
        .I2(COLOR_GEN_DEST_LR[9]),
        .I3(ENTRY[9]),
        .I4(COLOR_GEN_DEST_LR[8]),
        .I5(ENTRY[8]),
        .O(FIRE_INST_0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_7
       (.I0(ENTRY[4]),
        .I1(COLOR_GEN_DEST_LR[4]),
        .I2(COLOR_GEN_DEST_LR[6]),
        .I3(ENTRY[6]),
        .I4(COLOR_GEN_DEST_LR[5]),
        .I5(ENTRY[5]),
        .O(FIRE_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    FIRE_INST_0_i_8
       (.I0(ENTRY[1]),
        .I1(COLOR_GEN_DEST_LR[1]),
        .I2(COLOR_GEN_DEST_LR[3]),
        .I3(ENTRY[3]),
        .I4(COLOR_GEN_DEST_LR[2]),
        .I5(ENTRY[2]),
        .O(FIRE_INST_0_i_8_n_0));
  LUT5 #(
    .INIT(32'hFBBFAAAA)) 
    VALID_reg_i_1
       (.I0(EN),
        .I1(FIRE11_in),
        .I2(COLOR_GEN_DEST_LR[0]),
        .I3(ENTRY[0]),
        .I4(VALID_reg),
        .O(VALID_reg_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    VALID_reg_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(VALID_reg_i_1_n_0),
        .Q(VALID_reg));
endmodule

(* dont_touch = "true" *) 
module FP_Stage
   (PACKET_IN,
    DEL,
    Send_in,
    Ack_in,
    MR,
    Send_out,
    Ack_out,
    WRITE_DATA,
    PACKET_OUT,
    WRITE_EN,
    LOAD_FLG);
  input [61:0]PACKET_IN;
  input DEL;
  input Send_in;
  input Ack_in;
  input MR;
  output Send_out;
  output Ack_out;
  output [15:0]WRITE_DATA;
  output [39:0]PACKET_OUT;
  output WRITE_EN;
  output LOAD_FLG;

  wire ALU1__0;
  wire ALU1_n_74;
  wire ALU1_n_75;
  wire ALU1_n_76;
  wire ALU1_n_77;
  wire ALU1_n_78;
  wire ALU1_n_79;
  wire ALU1_n_80;
  wire ALU1_n_81;
  wire ALU1_n_82;
  wire ALU1_n_83;
  wire ALU1_n_84;
  wire ALU1_n_85;
  wire ALU1_n_86;
  wire ALU1_n_87;
  wire ALU1_n_88;
  wire ALU1_n_89;
  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire BR;
  (* DONT_TOUCH *) wire C;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire CPY;
  wire DEL;
  (* DONT_TOUCH *) wire [61:0]DL;
  (* DONT_TOUCH *) wire [15:0]DataL;
  (* DONT_TOUCH *) wire [15:0]DataR;
  wire LOAD_FLG;
  (* DONT_TOUCH *) wire [1:0]LR2;
  wire MR;
  (* DONT_TOUCH *) wire [5:0]OPC;
  wire [61:0]PACKET_IN;
  wire [39:0]PACKET_OUT;
  wire \PACKET_OUT[0]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[0]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[0]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[0]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[0]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[10]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[10]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[10]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[10]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_15_n_1 ;
  wire \PACKET_OUT[11]_INST_0_i_15_n_2 ;
  wire \PACKET_OUT[11]_INST_0_i_15_n_3 ;
  wire \PACKET_OUT[11]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_1 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_2 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_3 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_4 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_5 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_6 ;
  wire \PACKET_OUT[11]_INST_0_i_4_n_7 ;
  wire \PACKET_OUT[11]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_5_n_1 ;
  wire \PACKET_OUT[11]_INST_0_i_5_n_2 ;
  wire \PACKET_OUT[11]_INST_0_i_5_n_3 ;
  wire \PACKET_OUT[11]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[11]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[12]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[12]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[12]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[12]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[13]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[14]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_10_n_1 ;
  wire \PACKET_OUT[15]_INST_0_i_10_n_2 ;
  wire \PACKET_OUT[15]_INST_0_i_10_n_3 ;
  wire \PACKET_OUT[15]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_16_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_17_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_4_n_1 ;
  wire \PACKET_OUT[15]_INST_0_i_4_n_2 ;
  wire \PACKET_OUT[15]_INST_0_i_4_n_3 ;
  wire \PACKET_OUT[15]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[15]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_100_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_101_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_102_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_103_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_104_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_105_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_106_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_16_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_17_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_22_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_23_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_24_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_25_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_26_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_27_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_28_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_29_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_30_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_31_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_32_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_33_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_34_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_35_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_36_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_38_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_39_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_40_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_41_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_42_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_43_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_44_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_45_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_46_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_47_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_48_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_49_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_50_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_51_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_52_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_53_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_54_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_55_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_56_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_57_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_58_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_59_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_60_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_61_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_62_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_63_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_64_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_65_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_66_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_67_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_68_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_69_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_70_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_71_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_72_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_73_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_74_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_75_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_76_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_77_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_78_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_79_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_80_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_81_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_82_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_83_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_84_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_85_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_86_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_87_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_88_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_89_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_90_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_91_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_92_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_93_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_94_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_95_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_96_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_97_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_98_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_99_n_0 ;
  wire \PACKET_OUT[16]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_16_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_17_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_22_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_23_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_24_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_25_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_2_n_3 ;
  wire \PACKET_OUT[17]_INST_0_i_3_n_1 ;
  wire \PACKET_OUT[17]_INST_0_i_3_n_2 ;
  wire \PACKET_OUT[17]_INST_0_i_3_n_3 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_1 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_2 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_3 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_4 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_5 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_6 ;
  wire \PACKET_OUT[17]_INST_0_i_4_n_7 ;
  wire \PACKET_OUT[17]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_5_n_1 ;
  wire \PACKET_OUT[17]_INST_0_i_5_n_2 ;
  wire \PACKET_OUT[17]_INST_0_i_5_n_3 ;
  wire \PACKET_OUT[17]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[17]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[1]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[20]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[21]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[23]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[24]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[25]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[26]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[27]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[28]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_1 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_2 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_3 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_4 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_5 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_6 ;
  wire \PACKET_OUT[29]_INST_0_i_1_n_7 ;
  wire \PACKET_OUT[29]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[29]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[2]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[30]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[31]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[32]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[33]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[33]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[34]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[34]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[35]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_1 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_2 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_3 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_4 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_5 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_6 ;
  wire \PACKET_OUT[36]_INST_0_i_3_n_7 ;
  wire \PACKET_OUT[36]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[36]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[37]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[38]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_5_n_2 ;
  wire \PACKET_OUT[39]_INST_0_i_5_n_3 ;
  wire \PACKET_OUT[39]_INST_0_i_5_n_5 ;
  wire \PACKET_OUT[39]_INST_0_i_5_n_6 ;
  wire \PACKET_OUT[39]_INST_0_i_5_n_7 ;
  wire \PACKET_OUT[39]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[39]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_15_n_1 ;
  wire \PACKET_OUT[3]_INST_0_i_15_n_2 ;
  wire \PACKET_OUT[3]_INST_0_i_15_n_3 ;
  wire \PACKET_OUT[3]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_22_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_1 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_2 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_3 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_4 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_5 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_6 ;
  wire \PACKET_OUT[3]_INST_0_i_4_n_7 ;
  wire \PACKET_OUT[3]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_5_n_1 ;
  wire \PACKET_OUT[3]_INST_0_i_5_n_2 ;
  wire \PACKET_OUT[3]_INST_0_i_5_n_3 ;
  wire \PACKET_OUT[3]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[3]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[4]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[4]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[4]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[4]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[5]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[5]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[5]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[5]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[6]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[6]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[6]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[6]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_10_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_11_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_12_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_13_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_14_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_15_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_15_n_1 ;
  wire \PACKET_OUT[7]_INST_0_i_15_n_2 ;
  wire \PACKET_OUT[7]_INST_0_i_15_n_3 ;
  wire \PACKET_OUT[7]_INST_0_i_18_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_19_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_20_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_21_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_1 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_2 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_3 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_4 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_5 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_6 ;
  wire \PACKET_OUT[7]_INST_0_i_4_n_7 ;
  wire \PACKET_OUT[7]_INST_0_i_5_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_5_n_1 ;
  wire \PACKET_OUT[7]_INST_0_i_5_n_2 ;
  wire \PACKET_OUT[7]_INST_0_i_5_n_3 ;
  wire \PACKET_OUT[7]_INST_0_i_6_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_7_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_8_n_0 ;
  wire \PACKET_OUT[7]_INST_0_i_9_n_0 ;
  wire \PACKET_OUT[8]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[8]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[8]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[8]_INST_0_i_4_n_0 ;
  wire \PACKET_OUT[9]_INST_0_i_1_n_0 ;
  wire \PACKET_OUT[9]_INST_0_i_2_n_0 ;
  wire \PACKET_OUT[9]_INST_0_i_3_n_0 ;
  wire \PACKET_OUT[9]_INST_0_i_4_n_0 ;
  wire Send_in;
  wire Send_out;
  wire [15:0]WRITE_DATA;
  wire \WRITE_DATA[15]_INST_0_i_1_n_0 ;
  wire \WRITE_DATA[15]_INST_0_i_2_n_0 ;
  wire \WRITE_DATA[15]_INST_0_i_3_n_0 ;
  wire WRITE_EN;
  (* DONT_TOUCH *) wire Z;
  (* DONT_TOUCH *) wire [2:0]color;
  wire [17:17]data4;
  wire [16:1]data5;
  wire [17:1]data6;
  wire [17:1]data7;
  wire [16:2]data9;
  (* DONT_TOUCH *) wire [6:0]dest;
  (* DONT_TOUCH *) wire [7:0]gen;
  wire [15:0]p_0_in__0;
  wire NLW_ALU1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_ALU1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_ALU1_OVERFLOW_UNCONNECTED;
  wire NLW_ALU1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_ALU1_PATTERNDETECT_UNCONNECTED;
  wire NLW_ALU1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_ALU1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_ALU1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_ALU1_CARRYOUT_UNCONNECTED;
  wire [47:32]NLW_ALU1_P_UNCONNECTED;
  wire [47:0]NLW_ALU1_PCOUT_UNCONNECTED;
  wire [3:3]\NLW_PACKET_OUT[15]_INST_0_i_10_CO_UNCONNECTED ;
  wire [3:3]\NLW_PACKET_OUT[15]_INST_0_i_4_CO_UNCONNECTED ;
  wire [3:1]\NLW_PACKET_OUT[17]_INST_0_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[17]_INST_0_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[17]_INST_0_i_3_O_UNCONNECTED ;
  wire [3:0]\NLW_PACKET_OUT[17]_INST_0_i_5_O_UNCONNECTED ;
  wire [3:2]\NLW_PACKET_OUT[39]_INST_0_i_5_CO_UNCONNECTED ;
  wire [3:3]\NLW_PACKET_OUT[39]_INST_0_i_5_O_UNCONNECTED ;
  wire [0:0]\NLW_PACKET_OUT[3]_INST_0_i_15_O_UNCONNECTED ;

  (* METHODOLOGY_DRC_VIOS = "{SYNTH-13 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    ALU1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,DataL}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_ALU1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,DataR}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_ALU1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_ALU1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_ALU1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_ALU1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_ALU1_OVERFLOW_UNCONNECTED),
        .P({NLW_ALU1_P_UNCONNECTED[47:32],ALU1_n_74,ALU1_n_75,ALU1_n_76,ALU1_n_77,ALU1_n_78,ALU1_n_79,ALU1_n_80,ALU1_n_81,ALU1_n_82,ALU1_n_83,ALU1_n_84,ALU1_n_85,ALU1_n_86,ALU1_n_87,ALU1_n_88,ALU1_n_89,data5}),
        .PATTERNBDETECT(NLW_ALU1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_ALU1_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_ALU1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_ALU1_UNDERFLOW_UNCONNECTED));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst
       (.I0(DL[61]),
        .O(color[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__0
       (.I0(DL[60]),
        .O(color[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__1
       (.I0(DL[59]),
        .O(color[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__10
       (.I0(DL[50]),
        .O(dest[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__11
       (.I0(DL[49]),
        .O(dest[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__12
       (.I0(DL[48]),
        .O(dest[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__13
       (.I0(DL[47]),
        .O(dest[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__14
       (.I0(DL[46]),
        .O(dest[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__15
       (.I0(DL[45]),
        .O(dest[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__16
       (.I0(DL[44]),
        .O(dest[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__17
       (.I0(DL[43]),
        .O(LR2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__18
       (.I0(DL[42]),
        .O(LR2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__19
       (.I0(DL[41]),
        .O(BR));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__2
       (.I0(DL[58]),
        .O(gen[7]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__20
       (.I0(DL[40]),
        .O(CPY));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__21
       (.I0(DL[39]),
        .O(OPC[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__22
       (.I0(DL[38]),
        .O(OPC[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__23
       (.I0(DL[37]),
        .O(OPC[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__24
       (.I0(DL[36]),
        .O(OPC[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__25
       (.I0(DL[35]),
        .O(OPC[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__26
       (.I0(DL[34]),
        .O(OPC[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__27
       (.I0(DL[33]),
        .O(C));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__28
       (.I0(DL[32]),
        .O(Z));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__29
       (.I0(DL[31]),
        .O(DataL[15]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__3
       (.I0(DL[57]),
        .O(gen[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__30
       (.I0(DL[30]),
        .O(DataL[14]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__31
       (.I0(DL[29]),
        .O(DataL[13]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__32
       (.I0(DL[28]),
        .O(DataL[12]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__33
       (.I0(DL[27]),
        .O(DataL[11]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__34
       (.I0(DL[26]),
        .O(DataL[10]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__35
       (.I0(DL[25]),
        .O(DataL[9]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__36
       (.I0(DL[24]),
        .O(DataL[8]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__37
       (.I0(DL[23]),
        .O(DataL[7]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__38
       (.I0(DL[22]),
        .O(DataL[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__39
       (.I0(DL[21]),
        .O(DataL[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__4
       (.I0(DL[56]),
        .O(gen[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__40
       (.I0(DL[20]),
        .O(DataL[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__41
       (.I0(DL[19]),
        .O(DataL[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__42
       (.I0(DL[18]),
        .O(DataL[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__43
       (.I0(DL[17]),
        .O(DataL[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__44
       (.I0(DL[16]),
        .O(DataL[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__45
       (.I0(DL[15]),
        .O(DataR[15]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__46
       (.I0(DL[14]),
        .O(DataR[14]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__47
       (.I0(DL[13]),
        .O(DataR[13]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__48
       (.I0(DL[12]),
        .O(DataR[12]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__49
       (.I0(DL[11]),
        .O(DataR[11]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__5
       (.I0(DL[55]),
        .O(gen[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__50
       (.I0(DL[10]),
        .O(DataR[10]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__51
       (.I0(DL[9]),
        .O(DataR[9]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__52
       (.I0(DL[8]),
        .O(DataR[8]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__53
       (.I0(DL[7]),
        .O(DataR[7]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__54
       (.I0(DL[6]),
        .O(DataR[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__55
       (.I0(DL[5]),
        .O(DataR[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__56
       (.I0(DL[4]),
        .O(DataR[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__57
       (.I0(DL[3]),
        .O(DataR[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__58
       (.I0(DL[2]),
        .O(DataR[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__59
       (.I0(DL[1]),
        .O(DataR[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__6
       (.I0(DL[54]),
        .O(gen[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__60
       (.I0(DL[0]),
        .O(DataR[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__7
       (.I0(DL[53]),
        .O(gen[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__8
       (.I0(DL[52]),
        .O(gen[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__9
       (.I0(DL[51]),
        .O(gen[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[38] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[38]),
        .Q(DL[38]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[39] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[39]),
        .Q(DL[39]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[40] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[40]),
        .Q(DL[40]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[41] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[41]),
        .Q(DL[41]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[42] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[42]),
        .Q(DL[42]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[43] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[43]),
        .Q(DL[43]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[44] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[44]),
        .Q(DL[44]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[45] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[45]),
        .Q(DL[45]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[46] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[46]),
        .Q(DL[46]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[47] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[47]),
        .Q(DL[47]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[48] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[48]),
        .Q(DL[48]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[49] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[49]),
        .Q(DL[49]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[50] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[50]),
        .Q(DL[50]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[51] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[51]),
        .Q(DL[51]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[52] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[52]),
        .Q(DL[52]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[53] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[53]),
        .Q(DL[53]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[54] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[54]),
        .Q(DL[54]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[55] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[55]),
        .Q(DL[55]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[56] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[56]),
        .Q(DL[56]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[57] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[57]),
        .Q(DL[57]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[58] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[58]),
        .Q(DL[58]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[59] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[59]),
        .Q(DL[59]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[60] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[60]),
        .Q(DL[60]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[61] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[61]),
        .Q(DL[61]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[9]),
        .Q(DL[9]));
  LUT6 #(
    .INIT(64'h0A0000000A010200)) 
    LOAD_FLG_INST_0
       (.I0(OPC[4]),
        .I1(OPC[1]),
        .I2(OPC[0]),
        .I3(OPC[2]),
        .I4(OPC[5]),
        .I5(OPC[3]),
        .O(LOAD_FLG));
  MUXF7 \PACKET_OUT[0]_INST_0 
       (.I0(\PACKET_OUT[0]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[0]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[0]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[0]_INST_0_i_1 
       (.I0(\PACKET_OUT[0]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_7 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[0]),
        .O(\PACKET_OUT[0]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF40FD5DBF40A808)) 
    \PACKET_OUT[0]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I1(DataR[0]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[0]),
        .I4(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I5(\PACKET_OUT[0]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[0]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[0]_INST_0_i_3 
       (.I0(data5[1]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[0]),
        .I4(DataR[0]),
        .O(\PACKET_OUT[0]_INST_0_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[0]_INST_0_i_4 
       (.I0(data7[1]),
        .I1(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I2(data6[1]),
        .O(\PACKET_OUT[0]_INST_0_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \PACKET_OUT[0]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[0]_INST_0_i_7_n_0 ),
        .I2(DataR[1]),
        .I3(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I4(DataR[0]),
        .I5(\PACKET_OUT[1]_INST_0_i_7_n_0 ),
        .O(data7[1]));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \PACKET_OUT[0]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(DataR[0]),
        .I2(DataR[2]),
        .I3(DataL[0]),
        .I4(DataR[3]),
        .I5(DataR[1]),
        .O(data6[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[0]_INST_0_i_7 
       (.I0(DataL[12]),
        .I1(DataL[4]),
        .I2(DataR[2]),
        .I3(DataL[8]),
        .I4(DataR[3]),
        .I5(DataL[0]),
        .O(\PACKET_OUT[0]_INST_0_i_7_n_0 ));
  MUXF7 \PACKET_OUT[10]_INST_0 
       (.I0(\PACKET_OUT[10]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[10]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[10]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[10]_INST_0_i_1 
       (.I0(\PACKET_OUT[10]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_5 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[10]),
        .O(\PACKET_OUT[10]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[10]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[10]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[10]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[10]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[10]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[10]_INST_0_i_3 
       (.I0(data5[11]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[10]),
        .I4(DataR[10]),
        .O(\PACKET_OUT[10]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[10]_INST_0_i_4 
       (.I0(data9[11]),
        .I1(DataL[10]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[11]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[11]),
        .O(\PACKET_OUT[10]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[10]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_52_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_54_n_0 ),
        .O(data7[11]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[10]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_69_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_68_n_0 ),
        .O(data6[11]));
  MUXF7 \PACKET_OUT[11]_INST_0 
       (.I0(\PACKET_OUT[11]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[11]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[11]_INST_0_i_1 
       (.I0(\PACKET_OUT[11]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_4 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[11]),
        .O(\PACKET_OUT[11]_INST_0_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_10 
       (.I0(DataR[8]),
        .I1(DataL[8]),
        .O(\PACKET_OUT[11]_INST_0_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[11]_INST_0_i_11 
       (.I0(DataL[11]),
        .I1(DataR[11]),
        .O(\PACKET_OUT[11]_INST_0_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[11]_INST_0_i_12 
       (.I0(DataL[10]),
        .I1(DataR[10]),
        .O(\PACKET_OUT[11]_INST_0_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[11]_INST_0_i_13 
       (.I0(DataL[9]),
        .I1(DataR[9]),
        .O(\PACKET_OUT[11]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[11]_INST_0_i_14 
       (.I0(DataL[8]),
        .I1(DataR[8]),
        .O(\PACKET_OUT[11]_INST_0_i_14_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[11]_INST_0_i_15 
       (.CI(\PACKET_OUT[7]_INST_0_i_15_n_0 ),
        .CO({\PACKET_OUT[11]_INST_0_i_15_n_0 ,\PACKET_OUT[11]_INST_0_i_15_n_1 ,\PACKET_OUT[11]_INST_0_i_15_n_2 ,\PACKET_OUT[11]_INST_0_i_15_n_3 }),
        .CYINIT(1'b0),
        .DI(DataL[11:8]),
        .O(data9[12:9]),
        .S({\PACKET_OUT[11]_INST_0_i_18_n_0 ,\PACKET_OUT[11]_INST_0_i_19_n_0 ,\PACKET_OUT[11]_INST_0_i_20_n_0 ,\PACKET_OUT[11]_INST_0_i_21_n_0 }));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[11]_INST_0_i_16 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_54_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_49_n_0 ),
        .O(data7[12]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[11]_INST_0_i_17 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_70_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_69_n_0 ),
        .O(data6[12]));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_18 
       (.I0(DataR[11]),
        .I1(DataL[11]),
        .O(\PACKET_OUT[11]_INST_0_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_19 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .O(\PACKET_OUT[11]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[11]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[11]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[11]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[11]_INST_0_i_6_n_0 ),
        .O(\PACKET_OUT[11]_INST_0_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_20 
       (.I0(DataR[9]),
        .I1(DataL[9]),
        .O(\PACKET_OUT[11]_INST_0_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_21 
       (.I0(DataR[8]),
        .I1(DataL[8]),
        .O(\PACKET_OUT[11]_INST_0_i_21_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[11]_INST_0_i_3 
       (.I0(data5[12]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[11]),
        .I4(DataR[11]),
        .O(\PACKET_OUT[11]_INST_0_i_3_n_0 ));
  CARRY4 \PACKET_OUT[11]_INST_0_i_4 
       (.CI(\PACKET_OUT[7]_INST_0_i_4_n_0 ),
        .CO({\PACKET_OUT[11]_INST_0_i_4_n_0 ,\PACKET_OUT[11]_INST_0_i_4_n_1 ,\PACKET_OUT[11]_INST_0_i_4_n_2 ,\PACKET_OUT[11]_INST_0_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI(DataL[11:8]),
        .O({\PACKET_OUT[11]_INST_0_i_4_n_4 ,\PACKET_OUT[11]_INST_0_i_4_n_5 ,\PACKET_OUT[11]_INST_0_i_4_n_6 ,\PACKET_OUT[11]_INST_0_i_4_n_7 }),
        .S({\PACKET_OUT[11]_INST_0_i_7_n_0 ,\PACKET_OUT[11]_INST_0_i_8_n_0 ,\PACKET_OUT[11]_INST_0_i_9_n_0 ,\PACKET_OUT[11]_INST_0_i_10_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[11]_INST_0_i_5 
       (.CI(\PACKET_OUT[7]_INST_0_i_5_n_0 ),
        .CO({\PACKET_OUT[11]_INST_0_i_5_n_0 ,\PACKET_OUT[11]_INST_0_i_5_n_1 ,\PACKET_OUT[11]_INST_0_i_5_n_2 ,\PACKET_OUT[11]_INST_0_i_5_n_3 }),
        .CYINIT(1'b0),
        .DI(DataL[11:8]),
        .O(p_0_in__0[11:8]),
        .S({\PACKET_OUT[11]_INST_0_i_11_n_0 ,\PACKET_OUT[11]_INST_0_i_12_n_0 ,\PACKET_OUT[11]_INST_0_i_13_n_0 ,\PACKET_OUT[11]_INST_0_i_14_n_0 }));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[11]_INST_0_i_6 
       (.I0(data9[12]),
        .I1(DataL[11]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[12]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[12]),
        .O(\PACKET_OUT[11]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_7 
       (.I0(DataR[11]),
        .I1(DataL[11]),
        .O(\PACKET_OUT[11]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_8 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .O(\PACKET_OUT[11]_INST_0_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[11]_INST_0_i_9 
       (.I0(DataR[9]),
        .I1(DataL[9]),
        .O(\PACKET_OUT[11]_INST_0_i_9_n_0 ));
  MUXF7 \PACKET_OUT[12]_INST_0 
       (.I0(\PACKET_OUT[12]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[12]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[12]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[12]_INST_0_i_1 
       (.I0(\PACKET_OUT[12]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_7 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[12]),
        .O(\PACKET_OUT[12]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[12]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[12]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[12]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[12]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[12]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[12]_INST_0_i_3 
       (.I0(data5[13]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[12]),
        .I4(DataR[12]),
        .O(\PACKET_OUT[12]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[12]_INST_0_i_4 
       (.I0(data9[13]),
        .I1(DataL[12]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[13]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[13]),
        .O(\PACKET_OUT[12]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[12]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_49_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_48_n_0 ),
        .O(data7[13]));
  LUT6 #(
    .INIT(64'hFF00B8000000B800)) 
    \PACKET_OUT[12]_INST_0_i_6 
       (.I0(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I4(DataR[0]),
        .I5(\PACKET_OUT[16]_INST_0_i_70_n_0 ),
        .O(data6[13]));
  MUXF7 \PACKET_OUT[13]_INST_0 
       (.I0(\PACKET_OUT[13]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[13]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[13]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[13]_INST_0_i_1 
       (.I0(\PACKET_OUT[13]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_6 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[13]),
        .O(\PACKET_OUT[13]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[13]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[13]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[13]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[13]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[13]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[13]_INST_0_i_3 
       (.I0(data5[14]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[13]),
        .I4(DataR[13]),
        .O(\PACKET_OUT[13]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[13]_INST_0_i_4 
       (.I0(data9[14]),
        .I1(DataL[13]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[14]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[14]),
        .O(\PACKET_OUT[13]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[13]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_48_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_51_n_0 ),
        .O(data7[14]));
  LUT6 #(
    .INIT(64'hB800B800FF000000)) 
    \PACKET_OUT[13]_INST_0_i_6 
       (.I0(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I4(\PACKET_OUT[14]_INST_0_i_8_n_0 ),
        .I5(DataR[0]),
        .O(data6[14]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[13]_INST_0_i_7 
       (.I0(DataL[6]),
        .I1(DataR[2]),
        .I2(DataL[2]),
        .I3(DataR[3]),
        .I4(DataL[10]),
        .O(\PACKET_OUT[13]_INST_0_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[13]_INST_0_i_8 
       (.I0(DataL[0]),
        .I1(DataL[8]),
        .I2(DataR[2]),
        .I3(DataL[4]),
        .I4(DataR[3]),
        .I5(DataL[12]),
        .O(\PACKET_OUT[13]_INST_0_i_8_n_0 ));
  MUXF7 \PACKET_OUT[14]_INST_0 
       (.I0(\PACKET_OUT[14]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[14]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[14]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[14]_INST_0_i_1 
       (.I0(\PACKET_OUT[14]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_5 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[14]),
        .O(\PACKET_OUT[14]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[14]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[14]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[14]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[14]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[14]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[14]_INST_0_i_3 
       (.I0(data5[15]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[14]),
        .I4(DataR[14]),
        .O(\PACKET_OUT[14]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[14]_INST_0_i_4 
       (.I0(data9[15]),
        .I1(DataL[14]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[15]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[15]),
        .O(\PACKET_OUT[14]_INST_0_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \PACKET_OUT[14]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[14]_INST_0_i_7_n_0 ),
        .O(data7[15]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[14]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[15]_INST_0_i_19_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[14]_INST_0_i_8_n_0 ),
        .O(data6[15]));
  LUT6 #(
    .INIT(64'h0000000000000B08)) 
    \PACKET_OUT[14]_INST_0_i_7 
       (.I0(DataL[15]),
        .I1(DataR[0]),
        .I2(DataR[2]),
        .I3(DataL[14]),
        .I4(DataR[3]),
        .I5(DataR[1]),
        .O(\PACKET_OUT[14]_INST_0_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[14]_INST_0_i_8 
       (.I0(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .O(\PACKET_OUT[14]_INST_0_i_8_n_0 ));
  MUXF7 \PACKET_OUT[15]_INST_0 
       (.I0(\PACKET_OUT[15]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[15]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[15]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[15]_INST_0_i_1 
       (.I0(\PACKET_OUT[15]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_4 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[15]),
        .O(\PACKET_OUT[15]_INST_0_i_1_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[15]_INST_0_i_10 
       (.CI(\PACKET_OUT[11]_INST_0_i_15_n_0 ),
        .CO({\NLW_PACKET_OUT[15]_INST_0_i_10_CO_UNCONNECTED [3],\PACKET_OUT[15]_INST_0_i_10_n_1 ,\PACKET_OUT[15]_INST_0_i_10_n_2 ,\PACKET_OUT[15]_INST_0_i_10_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,DataL[14:12]}),
        .O(data9[16:13]),
        .S({\PACKET_OUT[15]_INST_0_i_13_n_0 ,\PACKET_OUT[15]_INST_0_i_14_n_0 ,\PACKET_OUT[15]_INST_0_i_15_n_0 ,\PACKET_OUT[15]_INST_0_i_16_n_0 }));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \PACKET_OUT[15]_INST_0_i_11 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(DataR[0]),
        .I2(DataR[2]),
        .I3(DataL[15]),
        .I4(DataR[3]),
        .I5(DataR[1]),
        .O(data7[16]));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \PACKET_OUT[15]_INST_0_i_12 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[15]_INST_0_i_17_n_0 ),
        .I2(DataR[1]),
        .I3(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .I4(DataR[0]),
        .I5(\PACKET_OUT[15]_INST_0_i_19_n_0 ),
        .O(data6[16]));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[15]_INST_0_i_13 
       (.I0(DataR[15]),
        .I1(DataL[15]),
        .O(\PACKET_OUT[15]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[15]_INST_0_i_14 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .O(\PACKET_OUT[15]_INST_0_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[15]_INST_0_i_15 
       (.I0(DataR[13]),
        .I1(DataL[13]),
        .O(\PACKET_OUT[15]_INST_0_i_15_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[15]_INST_0_i_16 
       (.I0(DataR[12]),
        .I1(DataL[12]),
        .O(\PACKET_OUT[15]_INST_0_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[15]_INST_0_i_17 
       (.I0(DataL[3]),
        .I1(DataL[11]),
        .I2(DataR[2]),
        .I3(DataL[7]),
        .I4(DataR[3]),
        .I5(DataL[15]),
        .O(\PACKET_OUT[15]_INST_0_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[15]_INST_0_i_18 
       (.I0(DataL[1]),
        .I1(DataL[9]),
        .I2(DataR[2]),
        .I3(DataL[5]),
        .I4(DataR[3]),
        .I5(DataL[13]),
        .O(\PACKET_OUT[15]_INST_0_i_18_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[15]_INST_0_i_19 
       (.I0(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_97_n_0 ),
        .O(\PACKET_OUT[15]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[15]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[15]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[15]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[15]_INST_0_i_5_n_0 ),
        .O(\PACKET_OUT[15]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[15]_INST_0_i_3 
       (.I0(data5[16]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[15]),
        .I4(DataR[15]),
        .O(\PACKET_OUT[15]_INST_0_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[15]_INST_0_i_4 
       (.CI(\PACKET_OUT[11]_INST_0_i_5_n_0 ),
        .CO({\NLW_PACKET_OUT[15]_INST_0_i_4_CO_UNCONNECTED [3],\PACKET_OUT[15]_INST_0_i_4_n_1 ,\PACKET_OUT[15]_INST_0_i_4_n_2 ,\PACKET_OUT[15]_INST_0_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,DataL[14:12]}),
        .O(p_0_in__0[15:12]),
        .S({\PACKET_OUT[15]_INST_0_i_6_n_0 ,\PACKET_OUT[15]_INST_0_i_7_n_0 ,\PACKET_OUT[15]_INST_0_i_8_n_0 ,\PACKET_OUT[15]_INST_0_i_9_n_0 }));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[15]_INST_0_i_5 
       (.I0(data9[16]),
        .I1(DataL[15]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[16]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[16]),
        .O(\PACKET_OUT[15]_INST_0_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[15]_INST_0_i_6 
       (.I0(DataL[15]),
        .I1(DataR[15]),
        .O(\PACKET_OUT[15]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[15]_INST_0_i_7 
       (.I0(DataL[14]),
        .I1(DataR[14]),
        .O(\PACKET_OUT[15]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[15]_INST_0_i_8 
       (.I0(DataL[13]),
        .I1(DataR[13]),
        .O(\PACKET_OUT[15]_INST_0_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[15]_INST_0_i_9 
       (.I0(DataL[12]),
        .I1(DataR[12]),
        .O(\PACKET_OUT[15]_INST_0_i_9_n_0 ));
  MUXF7 \PACKET_OUT[16]_INST_0 
       (.I0(\PACKET_OUT[16]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[16]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAFF0300AA000300)) 
    \PACKET_OUT[16]_INST_0_i_1 
       (.I0(\PACKET_OUT[16]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_4_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_5_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I4(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_6_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0001FFFF00010000)) 
    \PACKET_OUT[16]_INST_0_i_10 
       (.I0(\PACKET_OUT[16]_INST_0_i_33_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_34_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_35_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_36_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data4),
        .O(\PACKET_OUT[16]_INST_0_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_100 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .I2(DataR[15]),
        .I3(DataL[15]),
        .O(\PACKET_OUT[16]_INST_0_i_100_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \PACKET_OUT[16]_INST_0_i_101 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .I2(DataR[7]),
        .I3(DataL[7]),
        .O(\PACKET_OUT[16]_INST_0_i_101_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \PACKET_OUT[16]_INST_0_i_102 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .I2(DataR[15]),
        .I3(DataL[15]),
        .O(\PACKET_OUT[16]_INST_0_i_102_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_103 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .I2(DataR[11]),
        .I3(DataL[11]),
        .O(\PACKET_OUT[16]_INST_0_i_103_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[16]_INST_0_i_104 
       (.I0(DataL[9]),
        .I1(DataR[9]),
        .O(\PACKET_OUT[16]_INST_0_i_104_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_105 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .I2(DataR[15]),
        .I3(DataL[15]),
        .O(\PACKET_OUT[16]_INST_0_i_105_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_106 
       (.I0(DataR[12]),
        .I1(DataL[12]),
        .I2(DataR[13]),
        .I3(DataL[13]),
        .O(\PACKET_OUT[16]_INST_0_i_106_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_11 
       (.I0(\PACKET_OUT[7]_INST_0_i_4_n_6 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_7 ),
        .I2(\PACKET_OUT[7]_INST_0_i_4_n_4 ),
        .I3(\PACKET_OUT[7]_INST_0_i_4_n_5 ),
        .O(\PACKET_OUT[16]_INST_0_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_12 
       (.I0(\PACKET_OUT[17]_INST_0_i_4_n_6 ),
        .I1(\PACKET_OUT[17]_INST_0_i_4_n_7 ),
        .I2(\PACKET_OUT[17]_INST_0_i_4_n_4 ),
        .I3(\PACKET_OUT[17]_INST_0_i_4_n_5 ),
        .O(\PACKET_OUT[16]_INST_0_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_13 
       (.I0(p_0_in__0[5]),
        .I1(p_0_in__0[4]),
        .I2(p_0_in__0[7]),
        .I3(p_0_in__0[6]),
        .O(\PACKET_OUT[16]_INST_0_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_14 
       (.I0(p_0_in__0[1]),
        .I1(p_0_in__0[0]),
        .I2(p_0_in__0[3]),
        .I3(p_0_in__0[2]),
        .O(\PACKET_OUT[16]_INST_0_i_14_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_15 
       (.I0(p_0_in__0[13]),
        .I1(p_0_in__0[12]),
        .I2(p_0_in__0[15]),
        .I3(p_0_in__0[14]),
        .O(\PACKET_OUT[16]_INST_0_i_15_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_16 
       (.I0(p_0_in__0[9]),
        .I1(p_0_in__0[8]),
        .I2(p_0_in__0[11]),
        .I3(p_0_in__0[10]),
        .O(\PACKET_OUT[16]_INST_0_i_16_n_0 ));
  LUT5 #(
    .INIT(32'hFFCA0000)) 
    \PACKET_OUT[16]_INST_0_i_17 
       (.I0(\PACKET_OUT[16]_INST_0_i_38_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_39_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_40_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_17_n_0 ));
  LUT5 #(
    .INIT(32'hFFCA0000)) 
    \PACKET_OUT[16]_INST_0_i_18 
       (.I0(\PACKET_OUT[16]_INST_0_i_39_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_42_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_43_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_18_n_0 ));
  LUT5 #(
    .INIT(32'hF0F0F0E0)) 
    \PACKET_OUT[16]_INST_0_i_19 
       (.I0(\PACKET_OUT[16]_INST_0_i_44_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_45_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_46_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_47_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8CDCDCDC8C8C8)) 
    \PACKET_OUT[16]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I1(Z),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[17]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[17]),
        .O(\PACKET_OUT[16]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F0F0F0F0A0E0)) 
    \PACKET_OUT[16]_INST_0_i_20 
       (.I0(\PACKET_OUT[16]_INST_0_i_48_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_49_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I3(DataR[0]),
        .I4(\PACKET_OUT[16]_INST_0_i_50_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_51_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_20_n_0 ));
  LUT5 #(
    .INIT(32'hFFCA0000)) 
    \PACKET_OUT[16]_INST_0_i_21 
       (.I0(\PACKET_OUT[16]_INST_0_i_42_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_52_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_53_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_21_n_0 ));
  LUT5 #(
    .INIT(32'hFFCA0000)) 
    \PACKET_OUT[16]_INST_0_i_22 
       (.I0(\PACKET_OUT[16]_INST_0_i_52_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_49_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_54_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_22_n_0 ));
  LUT5 #(
    .INIT(32'hEFEC0000)) 
    \PACKET_OUT[16]_INST_0_i_23 
       (.I0(\PACKET_OUT[16]_INST_0_i_55_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_56_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_57_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_23_n_0 ));
  LUT5 #(
    .INIT(32'hEFEC0000)) 
    \PACKET_OUT[16]_INST_0_i_24 
       (.I0(\PACKET_OUT[16]_INST_0_i_57_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_58_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_59_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_24_n_0 ));
  LUT6 #(
    .INIT(64'hCCCCCCCCCCCC88C8)) 
    \PACKET_OUT[16]_INST_0_i_25 
       (.I0(\PACKET_OUT[16]_INST_0_i_60_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_55_n_0 ),
        .I3(DataR[0]),
        .I4(\PACKET_OUT[16]_INST_0_i_61_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_62_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_25_n_0 ));
  LUT5 #(
    .INIT(32'hF0F0F0E0)) 
    \PACKET_OUT[16]_INST_0_i_26 
       (.I0(\PACKET_OUT[16]_INST_0_i_63_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_64_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_65_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_66_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_26_n_0 ));
  LUT5 #(
    .INIT(32'hEFEC0000)) 
    \PACKET_OUT[16]_INST_0_i_27 
       (.I0(\PACKET_OUT[16]_INST_0_i_59_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_67_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_68_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_27_n_0 ));
  LUT5 #(
    .INIT(32'hEFEC0000)) 
    \PACKET_OUT[16]_INST_0_i_28 
       (.I0(\PACKET_OUT[16]_INST_0_i_68_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_69_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_70_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_28_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_29 
       (.I0(\PACKET_OUT[16]_INST_0_i_71_n_0 ),
        .I1(DataR[0]),
        .I2(DataL[0]),
        .I3(DataR[1]),
        .I4(DataL[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_72_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_29_n_0 ));
  MUXF7 \PACKET_OUT[16]_INST_0_i_3 
       (.I0(\PACKET_OUT[16]_INST_0_i_9_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_10_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_3_n_0 ),
        .S(\PACKET_OUT[39]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_30 
       (.I0(\PACKET_OUT[16]_INST_0_i_73_n_0 ),
        .I1(DataR[8]),
        .I2(DataL[8]),
        .I3(DataR[9]),
        .I4(DataL[9]),
        .I5(\PACKET_OUT[16]_INST_0_i_74_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_30_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \PACKET_OUT[16]_INST_0_i_31 
       (.I0(\PACKET_OUT[16]_INST_0_i_75_n_0 ),
        .I1(DataR[0]),
        .I2(DataL[0]),
        .I3(DataR[1]),
        .I4(DataL[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_76_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_31_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \PACKET_OUT[16]_INST_0_i_32 
       (.I0(\PACKET_OUT[16]_INST_0_i_77_n_0 ),
        .I1(DataR[8]),
        .I2(DataL[8]),
        .I3(DataR[9]),
        .I4(DataL[9]),
        .I5(\PACKET_OUT[16]_INST_0_i_78_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_32_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_33 
       (.I0(data5[6]),
        .I1(data5[5]),
        .I2(data5[8]),
        .I3(data5[7]),
        .O(\PACKET_OUT[16]_INST_0_i_33_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_34 
       (.I0(data5[2]),
        .I1(data5[1]),
        .I2(data5[4]),
        .I3(data5[3]),
        .O(\PACKET_OUT[16]_INST_0_i_34_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_35 
       (.I0(data5[14]),
        .I1(data5[13]),
        .I2(data5[16]),
        .I3(data5[15]),
        .O(\PACKET_OUT[16]_INST_0_i_35_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_36 
       (.I0(data5[10]),
        .I1(data5[9]),
        .I2(data5[12]),
        .I3(data5[11]),
        .O(\PACKET_OUT[16]_INST_0_i_36_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \PACKET_OUT[16]_INST_0_i_37 
       (.I0(\PACKET_OUT[16]_INST_0_i_79_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_80_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_81_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_82_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_83_n_0 ),
        .O(data4));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0_i_38 
       (.I0(\PACKET_OUT[16]_INST_0_i_84_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_38_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_39 
       (.I0(DataL[12]),
        .I1(DataR[2]),
        .I2(DataL[8]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_84_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_39_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_4 
       (.I0(\PACKET_OUT[3]_INST_0_i_4_n_5 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_4 ),
        .I2(\PACKET_OUT[3]_INST_0_i_4_n_7 ),
        .I3(\PACKET_OUT[3]_INST_0_i_4_n_6 ),
        .I4(\PACKET_OUT[16]_INST_0_i_11_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0_i_40 
       (.I0(\PACKET_OUT[16]_INST_0_i_85_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_86_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_40_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \PACKET_OUT[16]_INST_0_i_41 
       (.I0(DataR[13]),
        .I1(DataR[12]),
        .I2(DataR[15]),
        .I3(DataR[14]),
        .I4(\PACKET_OUT[16]_INST_0_i_87_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_88_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_41_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_42 
       (.I0(DataL[14]),
        .I1(DataR[2]),
        .I2(DataL[10]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_89_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_42_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_43 
       (.I0(DataL[13]),
        .I1(DataR[2]),
        .I2(DataL[9]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_85_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_43_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_44 
       (.I0(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I1(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_91_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_44_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_45 
       (.I0(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_91_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[0]_INST_0_i_7_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_45_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_46 
       (.I0(\PACKET_OUT[16]_INST_0_i_84_n_0 ),
        .I1(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_86_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_46_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_47 
       (.I0(\PACKET_OUT[16]_INST_0_i_86_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_47_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \PACKET_OUT[16]_INST_0_i_48 
       (.I0(DataL[15]),
        .I1(DataR[1]),
        .I2(DataR[3]),
        .I3(DataL[13]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[16]_INST_0_i_48_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \PACKET_OUT[16]_INST_0_i_49 
       (.I0(DataL[14]),
        .I1(DataR[1]),
        .I2(DataR[3]),
        .I3(DataL[12]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[16]_INST_0_i_49_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_5 
       (.I0(\PACKET_OUT[11]_INST_0_i_4_n_5 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_4 ),
        .I2(\PACKET_OUT[11]_INST_0_i_4_n_7 ),
        .I3(\PACKET_OUT[11]_INST_0_i_4_n_6 ),
        .I4(\PACKET_OUT[16]_INST_0_i_12_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \PACKET_OUT[16]_INST_0_i_50 
       (.I0(DataR[2]),
        .I1(DataL[15]),
        .I2(DataR[3]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[16]_INST_0_i_50_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \PACKET_OUT[16]_INST_0_i_51 
       (.I0(DataR[2]),
        .I1(DataL[14]),
        .I2(DataR[3]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[16]_INST_0_i_51_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \PACKET_OUT[16]_INST_0_i_52 
       (.I0(DataL[12]),
        .I1(DataR[1]),
        .I2(DataL[14]),
        .I3(DataR[2]),
        .I4(DataL[10]),
        .I5(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_52_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_53 
       (.I0(DataL[15]),
        .I1(DataR[2]),
        .I2(DataL[11]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_92_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_53_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \PACKET_OUT[16]_INST_0_i_54 
       (.I0(DataL[13]),
        .I1(DataR[1]),
        .I2(DataL[15]),
        .I3(DataR[2]),
        .I4(DataL[11]),
        .I5(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_54_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \PACKET_OUT[16]_INST_0_i_55 
       (.I0(DataL[1]),
        .I1(DataR[1]),
        .I2(DataR[3]),
        .I3(DataL[3]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[16]_INST_0_i_55_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \PACKET_OUT[16]_INST_0_i_56 
       (.I0(DataL[2]),
        .I1(DataR[1]),
        .I2(DataL[0]),
        .I3(DataR[2]),
        .I4(DataL[4]),
        .I5(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_56_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \PACKET_OUT[16]_INST_0_i_57 
       (.I0(DataL[3]),
        .I1(DataR[1]),
        .I2(DataL[1]),
        .I3(DataR[2]),
        .I4(DataL[5]),
        .I5(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_57_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_58 
       (.I0(DataL[0]),
        .I1(DataR[2]),
        .I2(DataL[4]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_93_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_58_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_59 
       (.I0(DataL[1]),
        .I1(DataR[2]),
        .I2(DataL[5]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_94_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_59_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \PACKET_OUT[16]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_13_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_14_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_15_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_16_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \PACKET_OUT[16]_INST_0_i_60 
       (.I0(DataR[2]),
        .I1(DataL[0]),
        .I2(DataR[3]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[16]_INST_0_i_60_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \PACKET_OUT[16]_INST_0_i_61 
       (.I0(DataL[0]),
        .I1(DataR[1]),
        .I2(DataR[3]),
        .I3(DataL[2]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[16]_INST_0_i_61_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \PACKET_OUT[16]_INST_0_i_62 
       (.I0(DataR[2]),
        .I1(DataL[1]),
        .I2(DataR[3]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[16]_INST_0_i_62_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_63 
       (.I0(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .I1(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_63_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_64 
       (.I0(\PACKET_OUT[16]_INST_0_i_96_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_64_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_65 
       (.I0(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_97_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[15]_INST_0_i_17_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_65_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_66 
       (.I0(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .I1(\PACKET_OUT[15]_INST_0_i_18_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[13]_INST_0_i_8_n_0 ),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_97_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_66_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_67 
       (.I0(DataL[2]),
        .I1(DataR[2]),
        .I2(DataL[6]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_98_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_67_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \PACKET_OUT[16]_INST_0_i_68 
       (.I0(DataL[3]),
        .I1(DataR[2]),
        .I2(DataL[7]),
        .I3(DataR[3]),
        .I4(DataR[1]),
        .I5(\PACKET_OUT[16]_INST_0_i_96_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_68_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0_i_69 
       (.I0(\PACKET_OUT[16]_INST_0_i_98_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[13]_INST_0_i_7_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_69_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \PACKET_OUT[16]_INST_0_i_7 
       (.I0(\PACKET_OUT[16]_INST_0_i_17_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_18_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_19_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_20_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_21_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_22_n_0 ),
        .O(data7[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0_i_70 
       (.I0(\PACKET_OUT[16]_INST_0_i_96_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_95_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_70_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_71 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .I2(DataR[3]),
        .I3(DataL[3]),
        .O(\PACKET_OUT[16]_INST_0_i_71_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_72 
       (.I0(DataL[5]),
        .I1(DataR[5]),
        .I2(DataL[4]),
        .I3(DataR[4]),
        .I4(\PACKET_OUT[16]_INST_0_i_99_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_72_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_73 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .I2(DataR[11]),
        .I3(DataL[11]),
        .O(\PACKET_OUT[16]_INST_0_i_73_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[16]_INST_0_i_74 
       (.I0(DataL[13]),
        .I1(DataR[13]),
        .I2(DataL[12]),
        .I3(DataR[12]),
        .I4(\PACKET_OUT[16]_INST_0_i_100_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_74_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \PACKET_OUT[16]_INST_0_i_75 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .I2(DataR[3]),
        .I3(DataL[3]),
        .O(\PACKET_OUT[16]_INST_0_i_75_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \PACKET_OUT[16]_INST_0_i_76 
       (.I0(DataL[5]),
        .I1(DataR[5]),
        .I2(DataL[4]),
        .I3(DataR[4]),
        .I4(\PACKET_OUT[16]_INST_0_i_101_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_76_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \PACKET_OUT[16]_INST_0_i_77 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .I2(DataR[11]),
        .I3(DataL[11]),
        .O(\PACKET_OUT[16]_INST_0_i_77_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \PACKET_OUT[16]_INST_0_i_78 
       (.I0(DataL[13]),
        .I1(DataR[13]),
        .I2(DataL[12]),
        .I3(DataR[12]),
        .I4(\PACKET_OUT[16]_INST_0_i_102_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_78_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_79 
       (.I0(DataR[4]),
        .I1(DataL[4]),
        .I2(DataR[5]),
        .I3(DataL[5]),
        .O(\PACKET_OUT[16]_INST_0_i_79_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \PACKET_OUT[16]_INST_0_i_8 
       (.I0(\PACKET_OUT[16]_INST_0_i_23_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_24_n_0 ),
        .I2(\PACKET_OUT[16]_INST_0_i_25_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_26_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_27_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_28_n_0 ),
        .O(data6[17]));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_80 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .I2(DataR[7]),
        .I3(DataL[7]),
        .O(\PACKET_OUT[16]_INST_0_i_80_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_81 
       (.I0(DataR[0]),
        .I1(DataL[0]),
        .I2(DataR[1]),
        .I3(DataL[1]),
        .O(\PACKET_OUT[16]_INST_0_i_81_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \PACKET_OUT[16]_INST_0_i_82 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .I2(DataR[3]),
        .I3(DataL[3]),
        .O(\PACKET_OUT[16]_INST_0_i_82_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFBEFF)) 
    \PACKET_OUT[16]_INST_0_i_83 
       (.I0(\PACKET_OUT[16]_INST_0_i_103_n_0 ),
        .I1(DataR[8]),
        .I2(DataL[8]),
        .I3(\PACKET_OUT[16]_INST_0_i_104_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_105_n_0 ),
        .I5(\PACKET_OUT[16]_INST_0_i_106_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_83_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_84 
       (.I0(DataL[10]),
        .I1(DataR[2]),
        .I2(DataL[14]),
        .I3(DataR[3]),
        .I4(DataL[6]),
        .O(\PACKET_OUT[16]_INST_0_i_84_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_85 
       (.I0(DataL[11]),
        .I1(DataR[2]),
        .I2(DataL[15]),
        .I3(DataR[3]),
        .I4(DataL[7]),
        .O(\PACKET_OUT[16]_INST_0_i_85_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_86 
       (.I0(DataL[9]),
        .I1(DataR[2]),
        .I2(DataL[13]),
        .I3(DataR[3]),
        .I4(DataL[5]),
        .O(\PACKET_OUT[16]_INST_0_i_86_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_87 
       (.I0(DataR[6]),
        .I1(DataR[7]),
        .I2(DataR[4]),
        .I3(DataR[5]),
        .O(\PACKET_OUT[16]_INST_0_i_87_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_88 
       (.I0(DataR[10]),
        .I1(DataR[11]),
        .I2(DataR[8]),
        .I3(DataR[9]),
        .O(\PACKET_OUT[16]_INST_0_i_88_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \PACKET_OUT[16]_INST_0_i_89 
       (.I0(DataL[12]),
        .I1(DataR[2]),
        .I2(DataL[8]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_89_n_0 ));
  LUT5 #(
    .INIT(32'h1010101F)) 
    \PACKET_OUT[16]_INST_0_i_9 
       (.I0(\PACKET_OUT[16]_INST_0_i_29_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_30_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_31_n_0 ),
        .I4(\PACKET_OUT[16]_INST_0_i_32_n_0 ),
        .O(\PACKET_OUT[16]_INST_0_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_90 
       (.I0(DataL[15]),
        .I1(DataL[7]),
        .I2(DataR[2]),
        .I3(DataL[11]),
        .I4(DataR[3]),
        .I5(DataL[3]),
        .O(\PACKET_OUT[16]_INST_0_i_90_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_91 
       (.I0(DataL[13]),
        .I1(DataL[5]),
        .I2(DataR[2]),
        .I3(DataL[9]),
        .I4(DataR[3]),
        .I5(DataL[1]),
        .O(\PACKET_OUT[16]_INST_0_i_91_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \PACKET_OUT[16]_INST_0_i_92 
       (.I0(DataL[13]),
        .I1(DataR[2]),
        .I2(DataL[9]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_92_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \PACKET_OUT[16]_INST_0_i_93 
       (.I0(DataL[2]),
        .I1(DataR[2]),
        .I2(DataL[6]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_93_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \PACKET_OUT[16]_INST_0_i_94 
       (.I0(DataL[3]),
        .I1(DataR[2]),
        .I2(DataL[7]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[16]_INST_0_i_94_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_95 
       (.I0(DataL[7]),
        .I1(DataR[2]),
        .I2(DataL[3]),
        .I3(DataR[3]),
        .I4(DataL[11]),
        .O(\PACKET_OUT[16]_INST_0_i_95_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_96 
       (.I0(DataL[5]),
        .I1(DataR[2]),
        .I2(DataL[1]),
        .I3(DataR[3]),
        .I4(DataL[9]),
        .O(\PACKET_OUT[16]_INST_0_i_96_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[16]_INST_0_i_97 
       (.I0(DataL[2]),
        .I1(DataL[10]),
        .I2(DataR[2]),
        .I3(DataL[6]),
        .I4(DataR[3]),
        .I5(DataL[14]),
        .O(\PACKET_OUT[16]_INST_0_i_97_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[16]_INST_0_i_98 
       (.I0(DataL[4]),
        .I1(DataR[2]),
        .I2(DataL[0]),
        .I3(DataR[3]),
        .I4(DataL[8]),
        .O(\PACKET_OUT[16]_INST_0_i_98_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[16]_INST_0_i_99 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .I2(DataR[7]),
        .I3(DataL[7]),
        .O(\PACKET_OUT[16]_INST_0_i_99_n_0 ));
  LUT6 #(
    .INIT(64'h88BBB8888888B888)) 
    \PACKET_OUT[17]_INST_0 
       (.I0(\PACKET_OUT[17]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[17]_INST_0_i_2_n_3 ),
        .I3(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I4(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I5(ALU1__0),
        .O(PACKET_OUT[17]));
  LUT3 #(
    .INIT(8'hE0)) 
    \PACKET_OUT[17]_INST_0_i_1 
       (.I0(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(C),
        .O(\PACKET_OUT[17]_INST_0_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_10 
       (.I0(DataL[15]),
        .I1(DataR[15]),
        .I2(DataL[14]),
        .I3(DataR[14]),
        .O(\PACKET_OUT[17]_INST_0_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_11 
       (.I0(DataL[13]),
        .I1(DataR[13]),
        .I2(DataL[12]),
        .I3(DataR[12]),
        .O(\PACKET_OUT[17]_INST_0_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_12 
       (.I0(DataL[11]),
        .I1(DataR[11]),
        .I2(DataL[10]),
        .I3(DataR[10]),
        .O(\PACKET_OUT[17]_INST_0_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_13 
       (.I0(DataL[9]),
        .I1(DataR[9]),
        .I2(DataL[8]),
        .I3(DataR[8]),
        .O(\PACKET_OUT[17]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[17]_INST_0_i_14 
       (.I0(DataR[15]),
        .I1(DataL[15]),
        .O(\PACKET_OUT[17]_INST_0_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[17]_INST_0_i_15 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .O(\PACKET_OUT[17]_INST_0_i_15_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[17]_INST_0_i_16 
       (.I0(DataR[13]),
        .I1(DataL[13]),
        .O(\PACKET_OUT[17]_INST_0_i_16_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[17]_INST_0_i_17 
       (.I0(DataR[12]),
        .I1(DataL[12]),
        .O(\PACKET_OUT[17]_INST_0_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_18 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .I2(DataL[7]),
        .I3(DataR[7]),
        .O(\PACKET_OUT[17]_INST_0_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_19 
       (.I0(DataR[4]),
        .I1(DataL[4]),
        .I2(DataL[5]),
        .I3(DataR[5]),
        .O(\PACKET_OUT[17]_INST_0_i_19_n_0 ));
  CARRY4 \PACKET_OUT[17]_INST_0_i_2 
       (.CI(\PACKET_OUT[17]_INST_0_i_4_n_0 ),
        .CO({\NLW_PACKET_OUT[17]_INST_0_i_2_CO_UNCONNECTED [3:1],\PACKET_OUT[17]_INST_0_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_PACKET_OUT[17]_INST_0_i_2_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,1'b0,1'b1}));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_20 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .I2(DataL[3]),
        .I3(DataR[3]),
        .O(\PACKET_OUT[17]_INST_0_i_20_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_21 
       (.I0(DataR[0]),
        .I1(DataL[0]),
        .I2(DataL[1]),
        .I3(DataR[1]),
        .O(\PACKET_OUT[17]_INST_0_i_21_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_22 
       (.I0(DataL[7]),
        .I1(DataR[7]),
        .I2(DataL[6]),
        .I3(DataR[6]),
        .O(\PACKET_OUT[17]_INST_0_i_22_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_23 
       (.I0(DataL[5]),
        .I1(DataR[5]),
        .I2(DataL[4]),
        .I3(DataR[4]),
        .O(\PACKET_OUT[17]_INST_0_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_24 
       (.I0(DataL[3]),
        .I1(DataR[3]),
        .I2(DataL[2]),
        .I3(DataR[2]),
        .O(\PACKET_OUT[17]_INST_0_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \PACKET_OUT[17]_INST_0_i_25 
       (.I0(DataL[1]),
        .I1(DataR[1]),
        .I2(DataL[0]),
        .I3(DataR[0]),
        .O(\PACKET_OUT[17]_INST_0_i_25_n_0 ));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \PACKET_OUT[17]_INST_0_i_3 
       (.CI(\PACKET_OUT[17]_INST_0_i_5_n_0 ),
        .CO({ALU1__0,\PACKET_OUT[17]_INST_0_i_3_n_1 ,\PACKET_OUT[17]_INST_0_i_3_n_2 ,\PACKET_OUT[17]_INST_0_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({\PACKET_OUT[17]_INST_0_i_6_n_0 ,\PACKET_OUT[17]_INST_0_i_7_n_0 ,\PACKET_OUT[17]_INST_0_i_8_n_0 ,\PACKET_OUT[17]_INST_0_i_9_n_0 }),
        .O(\NLW_PACKET_OUT[17]_INST_0_i_3_O_UNCONNECTED [3:0]),
        .S({\PACKET_OUT[17]_INST_0_i_10_n_0 ,\PACKET_OUT[17]_INST_0_i_11_n_0 ,\PACKET_OUT[17]_INST_0_i_12_n_0 ,\PACKET_OUT[17]_INST_0_i_13_n_0 }));
  CARRY4 \PACKET_OUT[17]_INST_0_i_4 
       (.CI(\PACKET_OUT[11]_INST_0_i_4_n_0 ),
        .CO({\PACKET_OUT[17]_INST_0_i_4_n_0 ,\PACKET_OUT[17]_INST_0_i_4_n_1 ,\PACKET_OUT[17]_INST_0_i_4_n_2 ,\PACKET_OUT[17]_INST_0_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI(DataL[15:12]),
        .O({\PACKET_OUT[17]_INST_0_i_4_n_4 ,\PACKET_OUT[17]_INST_0_i_4_n_5 ,\PACKET_OUT[17]_INST_0_i_4_n_6 ,\PACKET_OUT[17]_INST_0_i_4_n_7 }),
        .S({\PACKET_OUT[17]_INST_0_i_14_n_0 ,\PACKET_OUT[17]_INST_0_i_15_n_0 ,\PACKET_OUT[17]_INST_0_i_16_n_0 ,\PACKET_OUT[17]_INST_0_i_17_n_0 }));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \PACKET_OUT[17]_INST_0_i_5 
       (.CI(1'b0),
        .CO({\PACKET_OUT[17]_INST_0_i_5_n_0 ,\PACKET_OUT[17]_INST_0_i_5_n_1 ,\PACKET_OUT[17]_INST_0_i_5_n_2 ,\PACKET_OUT[17]_INST_0_i_5_n_3 }),
        .CYINIT(1'b0),
        .DI({\PACKET_OUT[17]_INST_0_i_18_n_0 ,\PACKET_OUT[17]_INST_0_i_19_n_0 ,\PACKET_OUT[17]_INST_0_i_20_n_0 ,\PACKET_OUT[17]_INST_0_i_21_n_0 }),
        .O(\NLW_PACKET_OUT[17]_INST_0_i_5_O_UNCONNECTED [3:0]),
        .S({\PACKET_OUT[17]_INST_0_i_22_n_0 ,\PACKET_OUT[17]_INST_0_i_23_n_0 ,\PACKET_OUT[17]_INST_0_i_24_n_0 ,\PACKET_OUT[17]_INST_0_i_25_n_0 }));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_6 
       (.I0(DataR[14]),
        .I1(DataL[14]),
        .I2(DataL[15]),
        .I3(DataR[15]),
        .O(\PACKET_OUT[17]_INST_0_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_7 
       (.I0(DataR[12]),
        .I1(DataL[12]),
        .I2(DataL[13]),
        .I3(DataR[13]),
        .O(\PACKET_OUT[17]_INST_0_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_8 
       (.I0(DataR[10]),
        .I1(DataL[10]),
        .I2(DataL[11]),
        .I3(DataR[11]),
        .O(\PACKET_OUT[17]_INST_0_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \PACKET_OUT[17]_INST_0_i_9 
       (.I0(DataR[8]),
        .I1(DataL[8]),
        .I2(DataL[9]),
        .I3(DataR[9]),
        .O(\PACKET_OUT[17]_INST_0_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hFE00)) 
    \PACKET_OUT[18]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(CPY),
        .O(PACKET_OUT[18]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \PACKET_OUT[19]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(BR),
        .O(PACKET_OUT[19]));
  MUXF7 \PACKET_OUT[1]_INST_0 
       (.I0(\PACKET_OUT[1]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[1]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[1]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[1]_INST_0_i_1 
       (.I0(\PACKET_OUT[1]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_6 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[1]),
        .O(\PACKET_OUT[1]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[1]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[1]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[1]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[1]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[1]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[1]_INST_0_i_3 
       (.I0(data5[2]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[1]),
        .I4(DataR[1]),
        .O(\PACKET_OUT[1]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[1]_INST_0_i_4 
       (.I0(data9[2]),
        .I1(DataL[1]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[2]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[2]),
        .O(\PACKET_OUT[1]_INST_0_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB800B800FF000000)) 
    \PACKET_OUT[1]_INST_0_i_5 
       (.I0(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I4(\PACKET_OUT[1]_INST_0_i_7_n_0 ),
        .I5(DataR[0]),
        .O(data7[2]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \PACKET_OUT[1]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[1]_INST_0_i_8_n_0 ),
        .O(data6[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[1]_INST_0_i_7 
       (.I0(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_91_n_0 ),
        .O(\PACKET_OUT[1]_INST_0_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000B08)) 
    \PACKET_OUT[1]_INST_0_i_8 
       (.I0(DataL[0]),
        .I1(DataR[0]),
        .I2(DataR[2]),
        .I3(DataL[1]),
        .I4(DataR[3]),
        .I5(DataR[1]),
        .O(\PACKET_OUT[1]_INST_0_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF00000800)) 
    \PACKET_OUT[20]_INST_0 
       (.I0(\PACKET_OUT[20]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(LR2[0]),
        .O(PACKET_OUT[20]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[20]_INST_0_i_1 
       (.I0(LR2[1]),
        .I1(Z),
        .I2(LR2[0]),
        .O(\PACKET_OUT[20]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF00000800)) 
    \PACKET_OUT[21]_INST_0 
       (.I0(\PACKET_OUT[21]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(LR2[1]),
        .O(PACKET_OUT[21]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[21]_INST_0_i_1 
       (.I0(LR2[0]),
        .I1(Z),
        .I2(LR2[1]),
        .O(\PACKET_OUT[21]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[22]_INST_0 
       (.I0(Z),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[0]),
        .O(PACKET_OUT[22]));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[23]_INST_0 
       (.I0(\PACKET_OUT[23]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[1]),
        .O(PACKET_OUT[23]));
  LUT2 #(
    .INIT(4'h8)) 
    \PACKET_OUT[23]_INST_0_i_1 
       (.I0(Z),
        .I1(dest[0]),
        .O(\PACKET_OUT[23]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[24]_INST_0 
       (.I0(\PACKET_OUT[24]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[2]),
        .O(PACKET_OUT[24]));
  LUT3 #(
    .INIT(8'h80)) 
    \PACKET_OUT[24]_INST_0_i_1 
       (.I0(dest[1]),
        .I1(dest[0]),
        .I2(Z),
        .O(\PACKET_OUT[24]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[25]_INST_0 
       (.I0(\PACKET_OUT[25]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[3]),
        .O(PACKET_OUT[25]));
  LUT4 #(
    .INIT(16'h8000)) 
    \PACKET_OUT[25]_INST_0_i_1 
       (.I0(dest[2]),
        .I1(Z),
        .I2(dest[0]),
        .I3(dest[1]),
        .O(\PACKET_OUT[25]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[26]_INST_0 
       (.I0(\PACKET_OUT[26]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[4]),
        .O(PACKET_OUT[26]));
  LUT5 #(
    .INIT(32'h80000000)) 
    \PACKET_OUT[26]_INST_0_i_1 
       (.I0(dest[3]),
        .I1(dest[1]),
        .I2(dest[0]),
        .I3(Z),
        .I4(dest[2]),
        .O(\PACKET_OUT[26]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF00000800)) 
    \PACKET_OUT[27]_INST_0 
       (.I0(\PACKET_OUT[27]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[5]),
        .O(PACKET_OUT[27]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \PACKET_OUT[27]_INST_0_i_1 
       (.I0(dest[4]),
        .I1(dest[2]),
        .I2(Z),
        .I3(dest[0]),
        .I4(dest[1]),
        .I5(dest[3]),
        .O(\PACKET_OUT[27]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF00000800)) 
    \PACKET_OUT[28]_INST_0 
       (.I0(\PACKET_OUT[28]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(dest[6]),
        .O(PACKET_OUT[28]));
  LUT3 #(
    .INIT(8'h78)) 
    \PACKET_OUT[28]_INST_0_i_1 
       (.I0(\PACKET_OUT[27]_INST_0_i_1_n_0 ),
        .I1(dest[5]),
        .I2(dest[6]),
        .O(\PACKET_OUT[28]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h3FFFBCFFC0008000)) 
    \PACKET_OUT[29]_INST_0 
       (.I0(\PACKET_OUT[29]_INST_0_i_1_n_7 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[0]),
        .O(PACKET_OUT[29]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[29]_INST_0_i_1 
       (.CI(1'b0),
        .CO({\PACKET_OUT[29]_INST_0_i_1_n_0 ,\PACKET_OUT[29]_INST_0_i_1_n_1 ,\PACKET_OUT[29]_INST_0_i_1_n_2 ,\PACKET_OUT[29]_INST_0_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(gen[3:0]),
        .O({\PACKET_OUT[29]_INST_0_i_1_n_4 ,\PACKET_OUT[29]_INST_0_i_1_n_5 ,\PACKET_OUT[29]_INST_0_i_1_n_6 ,\PACKET_OUT[29]_INST_0_i_1_n_7 }),
        .S({\PACKET_OUT[29]_INST_0_i_2_n_0 ,\PACKET_OUT[29]_INST_0_i_3_n_0 ,\PACKET_OUT[29]_INST_0_i_4_n_0 ,\PACKET_OUT[29]_INST_0_i_5_n_0 }));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[29]_INST_0_i_2 
       (.I0(gen[3]),
        .I1(DataR[3]),
        .O(\PACKET_OUT[29]_INST_0_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[29]_INST_0_i_3 
       (.I0(gen[2]),
        .I1(DataR[2]),
        .O(\PACKET_OUT[29]_INST_0_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[29]_INST_0_i_4 
       (.I0(gen[1]),
        .I1(DataR[1]),
        .O(\PACKET_OUT[29]_INST_0_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[29]_INST_0_i_5 
       (.I0(gen[0]),
        .I1(DataR[0]),
        .O(\PACKET_OUT[29]_INST_0_i_5_n_0 ));
  MUXF7 \PACKET_OUT[2]_INST_0 
       (.I0(\PACKET_OUT[2]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[2]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[2]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[2]_INST_0_i_1 
       (.I0(\PACKET_OUT[2]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_5 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[2]),
        .O(\PACKET_OUT[2]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[2]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[2]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[2]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[2]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[2]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[2]_INST_0_i_3 
       (.I0(data5[3]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[2]),
        .I4(DataR[2]),
        .O(\PACKET_OUT[2]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[2]_INST_0_i_4 
       (.I0(data9[3]),
        .I1(DataL[2]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[3]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[3]),
        .O(\PACKET_OUT[2]_INST_0_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFF00B8000000B800)) 
    \PACKET_OUT[2]_INST_0_i_5 
       (.I0(\PACKET_OUT[2]_INST_0_i_7_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[2]_INST_0_i_8_n_0 ),
        .I3(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I4(DataR[0]),
        .I5(\PACKET_OUT[3]_INST_0_i_22_n_0 ),
        .O(data7[3]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[2]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_61_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_62_n_0 ),
        .O(data6[3]));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \PACKET_OUT[2]_INST_0_i_7 
       (.I0(DataL[8]),
        .I1(DataR[2]),
        .I2(DataL[12]),
        .I3(DataR[3]),
        .I4(DataL[4]),
        .O(\PACKET_OUT[2]_INST_0_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[2]_INST_0_i_8 
       (.I0(DataL[14]),
        .I1(DataL[6]),
        .I2(DataR[2]),
        .I3(DataL[10]),
        .I4(DataR[3]),
        .I5(DataL[2]),
        .O(\PACKET_OUT[2]_INST_0_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[30]_INST_0 
       (.I0(\PACKET_OUT[30]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[1]),
        .O(PACKET_OUT[30]));
  LUT4 #(
    .INIT(16'h9F90)) 
    \PACKET_OUT[30]_INST_0_i_1 
       (.I0(gen[0]),
        .I1(gen[1]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[29]_INST_0_i_1_n_6 ),
        .O(\PACKET_OUT[30]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[31]_INST_0 
       (.I0(\PACKET_OUT[31]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[2]),
        .O(PACKET_OUT[31]));
  LUT5 #(
    .INIT(32'hE1FFE100)) 
    \PACKET_OUT[31]_INST_0_i_1 
       (.I0(gen[1]),
        .I1(gen[0]),
        .I2(gen[2]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(\PACKET_OUT[29]_INST_0_i_1_n_5 ),
        .O(\PACKET_OUT[31]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[32]_INST_0 
       (.I0(\PACKET_OUT[32]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[3]),
        .O(PACKET_OUT[32]));
  LUT6 #(
    .INIT(64'hFE01FFFFFE010000)) 
    \PACKET_OUT[32]_INST_0_i_1 
       (.I0(gen[2]),
        .I1(gen[0]),
        .I2(gen[1]),
        .I3(gen[3]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(\PACKET_OUT[29]_INST_0_i_1_n_4 ),
        .O(\PACKET_OUT[32]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[33]_INST_0 
       (.I0(\PACKET_OUT[33]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[4]),
        .O(PACKET_OUT[33]));
  LUT4 #(
    .INIT(16'h9F90)) 
    \PACKET_OUT[33]_INST_0_i_1 
       (.I0(\PACKET_OUT[33]_INST_0_i_2_n_0 ),
        .I1(gen[4]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[36]_INST_0_i_3_n_7 ),
        .O(\PACKET_OUT[33]_INST_0_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PACKET_OUT[33]_INST_0_i_2 
       (.I0(gen[2]),
        .I1(gen[0]),
        .I2(gen[1]),
        .I3(gen[3]),
        .O(\PACKET_OUT[33]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[34]_INST_0 
       (.I0(\PACKET_OUT[34]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[5]),
        .O(PACKET_OUT[34]));
  LUT4 #(
    .INIT(16'h9F90)) 
    \PACKET_OUT[34]_INST_0_i_1 
       (.I0(\PACKET_OUT[34]_INST_0_i_2_n_0 ),
        .I1(gen[5]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[36]_INST_0_i_3_n_6 ),
        .O(\PACKET_OUT[34]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \PACKET_OUT[34]_INST_0_i_2 
       (.I0(gen[3]),
        .I1(gen[1]),
        .I2(gen[0]),
        .I3(gen[2]),
        .I4(gen[4]),
        .O(\PACKET_OUT[34]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[35]_INST_0 
       (.I0(\PACKET_OUT[35]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[6]),
        .O(PACKET_OUT[35]));
  LUT4 #(
    .INIT(16'h9F90)) 
    \PACKET_OUT[35]_INST_0_i_1 
       (.I0(\PACKET_OUT[36]_INST_0_i_2_n_0 ),
        .I1(gen[6]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(\PACKET_OUT[36]_INST_0_i_3_n_5 ),
        .O(\PACKET_OUT[35]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFBCFF80008000)) 
    \PACKET_OUT[36]_INST_0 
       (.I0(\PACKET_OUT[36]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(gen[7]),
        .O(PACKET_OUT[36]));
  LUT5 #(
    .INIT(32'hE1FFE100)) 
    \PACKET_OUT[36]_INST_0_i_1 
       (.I0(gen[6]),
        .I1(\PACKET_OUT[36]_INST_0_i_2_n_0 ),
        .I2(gen[7]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(\PACKET_OUT[36]_INST_0_i_3_n_4 ),
        .O(\PACKET_OUT[36]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \PACKET_OUT[36]_INST_0_i_2 
       (.I0(gen[4]),
        .I1(gen[2]),
        .I2(gen[0]),
        .I3(gen[1]),
        .I4(gen[3]),
        .I5(gen[5]),
        .O(\PACKET_OUT[36]_INST_0_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[36]_INST_0_i_3 
       (.CI(\PACKET_OUT[29]_INST_0_i_1_n_0 ),
        .CO({\PACKET_OUT[36]_INST_0_i_3_n_0 ,\PACKET_OUT[36]_INST_0_i_3_n_1 ,\PACKET_OUT[36]_INST_0_i_3_n_2 ,\PACKET_OUT[36]_INST_0_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({\PACKET_OUT[36]_INST_0_i_4_n_0 ,gen[6:4]}),
        .O({\PACKET_OUT[36]_INST_0_i_3_n_4 ,\PACKET_OUT[36]_INST_0_i_3_n_5 ,\PACKET_OUT[36]_INST_0_i_3_n_6 ,\PACKET_OUT[36]_INST_0_i_3_n_7 }),
        .S({\PACKET_OUT[36]_INST_0_i_5_n_0 ,\PACKET_OUT[36]_INST_0_i_6_n_0 ,\PACKET_OUT[36]_INST_0_i_7_n_0 ,\PACKET_OUT[36]_INST_0_i_8_n_0 }));
  LUT1 #(
    .INIT(2'h1)) 
    \PACKET_OUT[36]_INST_0_i_4 
       (.I0(DataR[7]),
        .O(\PACKET_OUT[36]_INST_0_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[36]_INST_0_i_5 
       (.I0(DataR[7]),
        .I1(gen[7]),
        .O(\PACKET_OUT[36]_INST_0_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[36]_INST_0_i_6 
       (.I0(gen[6]),
        .I1(DataR[6]),
        .O(\PACKET_OUT[36]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[36]_INST_0_i_7 
       (.I0(gen[5]),
        .I1(DataR[5]),
        .O(\PACKET_OUT[36]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[36]_INST_0_i_8 
       (.I0(gen[4]),
        .I1(DataR[4]),
        .O(\PACKET_OUT[36]_INST_0_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFBCBF80808080)) 
    \PACKET_OUT[37]_INST_0 
       (.I0(\PACKET_OUT[37]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(color[0]),
        .O(PACKET_OUT[37]));
  LUT5 #(
    .INIT(32'hFCBB3088)) 
    \PACKET_OUT[37]_INST_0_i_1 
       (.I0(\PACKET_OUT[39]_INST_0_i_5_n_7 ),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(color[0]),
        .O(\PACKET_OUT[37]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFBCBF80808080)) 
    \PACKET_OUT[38]_INST_0 
       (.I0(\PACKET_OUT[38]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(color[1]),
        .O(PACKET_OUT[38]));
  LUT5 #(
    .INIT(32'hFCBB3088)) 
    \PACKET_OUT[38]_INST_0_i_1 
       (.I0(\PACKET_OUT[39]_INST_0_i_5_n_6 ),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(DataR[1]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(color[1]),
        .O(\PACKET_OUT[38]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFBCBF80808080)) 
    \PACKET_OUT[39]_INST_0 
       (.I0(\PACKET_OUT[39]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I3(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(color[2]),
        .O(PACKET_OUT[39]));
  LUT5 #(
    .INIT(32'hFCBB3088)) 
    \PACKET_OUT[39]_INST_0_i_1 
       (.I0(\PACKET_OUT[39]_INST_0_i_5_n_5 ),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(DataR[2]),
        .I3(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I4(color[2]),
        .O(\PACKET_OUT[39]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h55545500)) 
    \PACKET_OUT[39]_INST_0_i_2 
       (.I0(OPC[4]),
        .I1(OPC[1]),
        .I2(OPC[0]),
        .I3(OPC[2]),
        .I4(OPC[5]),
        .O(\PACKET_OUT[39]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEFEFEEEEFFEFE)) 
    \PACKET_OUT[39]_INST_0_i_3 
       (.I0(OPC[4]),
        .I1(OPC[1]),
        .I2(OPC[5]),
        .I3(OPC[3]),
        .I4(OPC[0]),
        .I5(OPC[2]),
        .O(\PACKET_OUT[39]_INST_0_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h30F430C3)) 
    \PACKET_OUT[39]_INST_0_i_4 
       (.I0(OPC[1]),
        .I1(OPC[0]),
        .I2(OPC[2]),
        .I3(OPC[4]),
        .I4(OPC[3]),
        .O(\PACKET_OUT[39]_INST_0_i_4_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[39]_INST_0_i_5 
       (.CI(\PACKET_OUT[36]_INST_0_i_3_n_0 ),
        .CO({\NLW_PACKET_OUT[39]_INST_0_i_5_CO_UNCONNECTED [3:2],\PACKET_OUT[39]_INST_0_i_5_n_2 ,\PACKET_OUT[39]_INST_0_i_5_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,DataR[8:7]}),
        .O({\NLW_PACKET_OUT[39]_INST_0_i_5_O_UNCONNECTED [3],\PACKET_OUT[39]_INST_0_i_5_n_5 ,\PACKET_OUT[39]_INST_0_i_5_n_6 ,\PACKET_OUT[39]_INST_0_i_5_n_7 }),
        .S({1'b0,\PACKET_OUT[39]_INST_0_i_6_n_0 ,\PACKET_OUT[39]_INST_0_i_7_n_0 ,\PACKET_OUT[39]_INST_0_i_8_n_0 }));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[39]_INST_0_i_6 
       (.I0(DataR[9]),
        .I1(DataR[10]),
        .O(\PACKET_OUT[39]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[39]_INST_0_i_7 
       (.I0(DataR[8]),
        .I1(DataR[9]),
        .O(\PACKET_OUT[39]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[39]_INST_0_i_8 
       (.I0(DataR[7]),
        .I1(DataR[8]),
        .O(\PACKET_OUT[39]_INST_0_i_8_n_0 ));
  MUXF7 \PACKET_OUT[3]_INST_0 
       (.I0(\PACKET_OUT[3]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[3]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[3]_INST_0_i_1 
       (.I0(\PACKET_OUT[3]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_4_n_4 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[3]),
        .O(\PACKET_OUT[3]_INST_0_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_10 
       (.I0(DataR[0]),
        .I1(DataL[0]),
        .O(\PACKET_OUT[3]_INST_0_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[3]_INST_0_i_11 
       (.I0(DataL[3]),
        .I1(DataR[3]),
        .O(\PACKET_OUT[3]_INST_0_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[3]_INST_0_i_12 
       (.I0(DataL[2]),
        .I1(DataR[2]),
        .O(\PACKET_OUT[3]_INST_0_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[3]_INST_0_i_13 
       (.I0(DataL[1]),
        .I1(DataR[1]),
        .O(\PACKET_OUT[3]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[3]_INST_0_i_14 
       (.I0(DataL[0]),
        .I1(DataR[0]),
        .O(\PACKET_OUT[3]_INST_0_i_14_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[3]_INST_0_i_15 
       (.CI(1'b0),
        .CO({\PACKET_OUT[3]_INST_0_i_15_n_0 ,\PACKET_OUT[3]_INST_0_i_15_n_1 ,\PACKET_OUT[3]_INST_0_i_15_n_2 ,\PACKET_OUT[3]_INST_0_i_15_n_3 }),
        .CYINIT(1'b0),
        .DI(DataL[3:0]),
        .O({data9[4:2],\NLW_PACKET_OUT[3]_INST_0_i_15_O_UNCONNECTED [0]}),
        .S({\PACKET_OUT[3]_INST_0_i_18_n_0 ,\PACKET_OUT[3]_INST_0_i_19_n_0 ,\PACKET_OUT[3]_INST_0_i_20_n_0 ,\PACKET_OUT[3]_INST_0_i_21_n_0 }));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[3]_INST_0_i_16 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[3]_INST_0_i_22_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_38_n_0 ),
        .O(data7[4]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[3]_INST_0_i_17 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_55_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_61_n_0 ),
        .O(data6[4]));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_18 
       (.I0(DataR[3]),
        .I1(DataL[3]),
        .O(\PACKET_OUT[3]_INST_0_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_19 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .O(\PACKET_OUT[3]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[3]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[3]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[3]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[3]_INST_0_i_6_n_0 ),
        .O(\PACKET_OUT[3]_INST_0_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_20 
       (.I0(DataR[1]),
        .I1(DataL[1]),
        .O(\PACKET_OUT[3]_INST_0_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_21 
       (.I0(DataR[0]),
        .I1(DataL[0]),
        .O(\PACKET_OUT[3]_INST_0_i_21_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[3]_INST_0_i_22 
       (.I0(\PACKET_OUT[16]_INST_0_i_86_n_0 ),
        .I1(DataR[1]),
        .I2(\PACKET_OUT[16]_INST_0_i_90_n_0 ),
        .O(\PACKET_OUT[3]_INST_0_i_22_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[3]_INST_0_i_3 
       (.I0(data5[4]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[3]),
        .I4(DataR[3]),
        .O(\PACKET_OUT[3]_INST_0_i_3_n_0 ));
  CARRY4 \PACKET_OUT[3]_INST_0_i_4 
       (.CI(1'b0),
        .CO({\PACKET_OUT[3]_INST_0_i_4_n_0 ,\PACKET_OUT[3]_INST_0_i_4_n_1 ,\PACKET_OUT[3]_INST_0_i_4_n_2 ,\PACKET_OUT[3]_INST_0_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI(DataL[3:0]),
        .O({\PACKET_OUT[3]_INST_0_i_4_n_4 ,\PACKET_OUT[3]_INST_0_i_4_n_5 ,\PACKET_OUT[3]_INST_0_i_4_n_6 ,\PACKET_OUT[3]_INST_0_i_4_n_7 }),
        .S({\PACKET_OUT[3]_INST_0_i_7_n_0 ,\PACKET_OUT[3]_INST_0_i_8_n_0 ,\PACKET_OUT[3]_INST_0_i_9_n_0 ,\PACKET_OUT[3]_INST_0_i_10_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[3]_INST_0_i_5 
       (.CI(1'b0),
        .CO({\PACKET_OUT[3]_INST_0_i_5_n_0 ,\PACKET_OUT[3]_INST_0_i_5_n_1 ,\PACKET_OUT[3]_INST_0_i_5_n_2 ,\PACKET_OUT[3]_INST_0_i_5_n_3 }),
        .CYINIT(1'b1),
        .DI(DataL[3:0]),
        .O(p_0_in__0[3:0]),
        .S({\PACKET_OUT[3]_INST_0_i_11_n_0 ,\PACKET_OUT[3]_INST_0_i_12_n_0 ,\PACKET_OUT[3]_INST_0_i_13_n_0 ,\PACKET_OUT[3]_INST_0_i_14_n_0 }));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[3]_INST_0_i_6 
       (.I0(data9[4]),
        .I1(DataL[3]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[4]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[4]),
        .O(\PACKET_OUT[3]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_7 
       (.I0(DataR[3]),
        .I1(DataL[3]),
        .O(\PACKET_OUT[3]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_8 
       (.I0(DataR[2]),
        .I1(DataL[2]),
        .O(\PACKET_OUT[3]_INST_0_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[3]_INST_0_i_9 
       (.I0(DataR[1]),
        .I1(DataL[1]),
        .O(\PACKET_OUT[3]_INST_0_i_9_n_0 ));
  MUXF7 \PACKET_OUT[4]_INST_0 
       (.I0(\PACKET_OUT[4]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[4]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[4]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[4]_INST_0_i_1 
       (.I0(\PACKET_OUT[4]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_7 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[4]),
        .O(\PACKET_OUT[4]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[4]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[4]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[4]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[4]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[4]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[4]_INST_0_i_3 
       (.I0(data5[5]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[4]),
        .I4(DataR[4]),
        .O(\PACKET_OUT[4]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[4]_INST_0_i_4 
       (.I0(data9[5]),
        .I1(DataL[4]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[5]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[5]),
        .O(\PACKET_OUT[4]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[4]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_38_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_40_n_0 ),
        .O(data7[5]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[4]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_56_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_55_n_0 ),
        .O(data6[5]));
  MUXF7 \PACKET_OUT[5]_INST_0 
       (.I0(\PACKET_OUT[5]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[5]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[5]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[5]_INST_0_i_1 
       (.I0(\PACKET_OUT[5]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_6 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[5]),
        .O(\PACKET_OUT[5]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[5]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[5]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[5]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[5]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[5]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[5]_INST_0_i_3 
       (.I0(data5[6]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[5]),
        .I4(DataR[5]),
        .O(\PACKET_OUT[5]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[5]_INST_0_i_4 
       (.I0(data9[6]),
        .I1(DataL[5]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[6]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[6]),
        .O(\PACKET_OUT[5]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[5]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_40_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_39_n_0 ),
        .O(data7[6]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[5]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_57_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_56_n_0 ),
        .O(data6[6]));
  MUXF7 \PACKET_OUT[6]_INST_0 
       (.I0(\PACKET_OUT[6]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[6]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[6]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[6]_INST_0_i_1 
       (.I0(\PACKET_OUT[6]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_5 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[6]),
        .O(\PACKET_OUT[6]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[6]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[6]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[6]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[6]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[6]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[6]_INST_0_i_3 
       (.I0(data5[7]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[6]),
        .I4(DataR[6]),
        .O(\PACKET_OUT[6]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[6]_INST_0_i_4 
       (.I0(data9[7]),
        .I1(DataL[6]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[7]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[7]),
        .O(\PACKET_OUT[6]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[6]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_39_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_43_n_0 ),
        .O(data7[7]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[6]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_58_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_57_n_0 ),
        .O(data6[7]));
  MUXF7 \PACKET_OUT[7]_INST_0 
       (.I0(\PACKET_OUT[7]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[7]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[7]_INST_0_i_1 
       (.I0(\PACKET_OUT[7]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[7]_INST_0_i_4_n_4 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[7]),
        .O(\PACKET_OUT[7]_INST_0_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_10 
       (.I0(DataR[4]),
        .I1(DataL[4]),
        .O(\PACKET_OUT[7]_INST_0_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[7]_INST_0_i_11 
       (.I0(DataL[7]),
        .I1(DataR[7]),
        .O(\PACKET_OUT[7]_INST_0_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[7]_INST_0_i_12 
       (.I0(DataL[6]),
        .I1(DataR[6]),
        .O(\PACKET_OUT[7]_INST_0_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[7]_INST_0_i_13 
       (.I0(DataL[5]),
        .I1(DataR[5]),
        .O(\PACKET_OUT[7]_INST_0_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \PACKET_OUT[7]_INST_0_i_14 
       (.I0(DataL[4]),
        .I1(DataR[4]),
        .O(\PACKET_OUT[7]_INST_0_i_14_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[7]_INST_0_i_15 
       (.CI(\PACKET_OUT[3]_INST_0_i_15_n_0 ),
        .CO({\PACKET_OUT[7]_INST_0_i_15_n_0 ,\PACKET_OUT[7]_INST_0_i_15_n_1 ,\PACKET_OUT[7]_INST_0_i_15_n_2 ,\PACKET_OUT[7]_INST_0_i_15_n_3 }),
        .CYINIT(1'b0),
        .DI(DataL[7:4]),
        .O(data9[8:5]),
        .S({\PACKET_OUT[7]_INST_0_i_18_n_0 ,\PACKET_OUT[7]_INST_0_i_19_n_0 ,\PACKET_OUT[7]_INST_0_i_20_n_0 ,\PACKET_OUT[7]_INST_0_i_21_n_0 }));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[7]_INST_0_i_16 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_43_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_42_n_0 ),
        .O(data7[8]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[7]_INST_0_i_17 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_59_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_58_n_0 ),
        .O(data6[8]));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_18 
       (.I0(DataR[7]),
        .I1(DataL[7]),
        .O(\PACKET_OUT[7]_INST_0_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_19 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .O(\PACKET_OUT[7]_INST_0_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[7]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[7]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[7]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[7]_INST_0_i_6_n_0 ),
        .O(\PACKET_OUT[7]_INST_0_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_20 
       (.I0(DataR[5]),
        .I1(DataL[5]),
        .O(\PACKET_OUT[7]_INST_0_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_21 
       (.I0(DataR[4]),
        .I1(DataL[4]),
        .O(\PACKET_OUT[7]_INST_0_i_21_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[7]_INST_0_i_3 
       (.I0(data5[8]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[7]),
        .I4(DataR[7]),
        .O(\PACKET_OUT[7]_INST_0_i_3_n_0 ));
  CARRY4 \PACKET_OUT[7]_INST_0_i_4 
       (.CI(\PACKET_OUT[3]_INST_0_i_4_n_0 ),
        .CO({\PACKET_OUT[7]_INST_0_i_4_n_0 ,\PACKET_OUT[7]_INST_0_i_4_n_1 ,\PACKET_OUT[7]_INST_0_i_4_n_2 ,\PACKET_OUT[7]_INST_0_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI(DataL[7:4]),
        .O({\PACKET_OUT[7]_INST_0_i_4_n_4 ,\PACKET_OUT[7]_INST_0_i_4_n_5 ,\PACKET_OUT[7]_INST_0_i_4_n_6 ,\PACKET_OUT[7]_INST_0_i_4_n_7 }),
        .S({\PACKET_OUT[7]_INST_0_i_7_n_0 ,\PACKET_OUT[7]_INST_0_i_8_n_0 ,\PACKET_OUT[7]_INST_0_i_9_n_0 ,\PACKET_OUT[7]_INST_0_i_10_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \PACKET_OUT[7]_INST_0_i_5 
       (.CI(\PACKET_OUT[3]_INST_0_i_5_n_0 ),
        .CO({\PACKET_OUT[7]_INST_0_i_5_n_0 ,\PACKET_OUT[7]_INST_0_i_5_n_1 ,\PACKET_OUT[7]_INST_0_i_5_n_2 ,\PACKET_OUT[7]_INST_0_i_5_n_3 }),
        .CYINIT(1'b0),
        .DI(DataL[7:4]),
        .O(p_0_in__0[7:4]),
        .S({\PACKET_OUT[7]_INST_0_i_11_n_0 ,\PACKET_OUT[7]_INST_0_i_12_n_0 ,\PACKET_OUT[7]_INST_0_i_13_n_0 ,\PACKET_OUT[7]_INST_0_i_14_n_0 }));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[7]_INST_0_i_6 
       (.I0(data9[8]),
        .I1(DataL[7]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[8]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[8]),
        .O(\PACKET_OUT[7]_INST_0_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_7 
       (.I0(DataR[7]),
        .I1(DataL[7]),
        .O(\PACKET_OUT[7]_INST_0_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_8 
       (.I0(DataR[6]),
        .I1(DataL[6]),
        .O(\PACKET_OUT[7]_INST_0_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \PACKET_OUT[7]_INST_0_i_9 
       (.I0(DataR[5]),
        .I1(DataL[5]),
        .O(\PACKET_OUT[7]_INST_0_i_9_n_0 ));
  MUXF7 \PACKET_OUT[8]_INST_0 
       (.I0(\PACKET_OUT[8]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[8]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[8]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[8]_INST_0_i_1 
       (.I0(\PACKET_OUT[8]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_7 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[8]),
        .O(\PACKET_OUT[8]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[8]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[8]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[8]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[8]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[8]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[8]_INST_0_i_3 
       (.I0(data5[9]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[8]),
        .I4(DataR[8]),
        .O(\PACKET_OUT[8]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[8]_INST_0_i_4 
       (.I0(data9[9]),
        .I1(DataL[8]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[9]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[9]),
        .O(\PACKET_OUT[8]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[8]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_42_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_53_n_0 ),
        .O(data7[9]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[8]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_67_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_59_n_0 ),
        .O(data6[9]));
  MUXF7 \PACKET_OUT[9]_INST_0 
       (.I0(\PACKET_OUT[9]_INST_0_i_1_n_0 ),
        .I1(\PACKET_OUT[9]_INST_0_i_2_n_0 ),
        .O(PACKET_OUT[9]),
        .S(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \PACKET_OUT[9]_INST_0_i_1 
       (.I0(\PACKET_OUT[9]_INST_0_i_3_n_0 ),
        .I1(\PACKET_OUT[11]_INST_0_i_4_n_6 ),
        .I2(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I3(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I4(p_0_in__0[9]),
        .O(\PACKET_OUT[9]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \PACKET_OUT[9]_INST_0_i_2 
       (.I0(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I1(DataL[9]),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataR[9]),
        .I4(\PACKET_OUT[39]_INST_0_i_2_n_0 ),
        .I5(\PACKET_OUT[9]_INST_0_i_4_n_0 ),
        .O(\PACKET_OUT[9]_INST_0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3BCBC80)) 
    \PACKET_OUT[9]_INST_0_i_3 
       (.I0(data5[10]),
        .I1(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I2(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I3(DataL[9]),
        .I4(DataR[9]),
        .O(\PACKET_OUT[9]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \PACKET_OUT[9]_INST_0_i_4 
       (.I0(data9[10]),
        .I1(DataL[9]),
        .I2(\PACKET_OUT[39]_INST_0_i_3_n_0 ),
        .I3(data7[10]),
        .I4(\PACKET_OUT[39]_INST_0_i_4_n_0 ),
        .I5(data6[10]),
        .O(\PACKET_OUT[9]_INST_0_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[9]_INST_0_i_5 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_53_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_52_n_0 ),
        .O(data7[10]));
  LUT4 #(
    .INIT(16'hA808)) 
    \PACKET_OUT[9]_INST_0_i_6 
       (.I0(\PACKET_OUT[16]_INST_0_i_41_n_0 ),
        .I1(\PACKET_OUT[16]_INST_0_i_68_n_0 ),
        .I2(DataR[0]),
        .I3(\PACKET_OUT[16]_INST_0_i_67_n_0 ),
        .O(data6[10]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[0]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[0]),
        .O(WRITE_DATA[0]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[10]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[10]),
        .O(WRITE_DATA[10]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[11]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[11]),
        .O(WRITE_DATA[11]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[12]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[12]),
        .O(WRITE_DATA[12]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[13]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[13]),
        .O(WRITE_DATA[13]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[14]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[14]),
        .O(WRITE_DATA[14]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[15]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[15]),
        .O(WRITE_DATA[15]));
  LUT5 #(
    .INIT(32'h0A0AABEE)) 
    \WRITE_DATA[15]_INST_0_i_1 
       (.I0(OPC[5]),
        .I1(OPC[3]),
        .I2(OPC[0]),
        .I3(OPC[4]),
        .I4(OPC[1]),
        .O(\WRITE_DATA[15]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFAAEEFB)) 
    \WRITE_DATA[15]_INST_0_i_2 
       (.I0(OPC[2]),
        .I1(OPC[0]),
        .I2(OPC[3]),
        .I3(OPC[5]),
        .I4(OPC[1]),
        .I5(OPC[4]),
        .O(\WRITE_DATA[15]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5555FFFF50504054)) 
    \WRITE_DATA[15]_INST_0_i_3 
       (.I0(OPC[4]),
        .I1(OPC[1]),
        .I2(OPC[5]),
        .I3(OPC[3]),
        .I4(OPC[0]),
        .I5(OPC[2]),
        .O(\WRITE_DATA[15]_INST_0_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[1]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[1]),
        .O(WRITE_DATA[1]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[2]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[2]),
        .O(WRITE_DATA[2]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[3]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[3]),
        .O(WRITE_DATA[3]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[4]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[4]),
        .O(WRITE_DATA[4]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[5]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[5]),
        .O(WRITE_DATA[5]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[6]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[6]),
        .O(WRITE_DATA[6]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[7]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[7]),
        .O(WRITE_DATA[7]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[8]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[8]),
        .O(WRITE_DATA[8]));
  LUT4 #(
    .INIT(16'hFE00)) 
    \WRITE_DATA[9]_INST_0 
       (.I0(\WRITE_DATA[15]_INST_0_i_1_n_0 ),
        .I1(\WRITE_DATA[15]_INST_0_i_2_n_0 ),
        .I2(\WRITE_DATA[15]_INST_0_i_3_n_0 ),
        .I3(DataL[9]),
        .O(WRITE_DATA[9]));
  LUT6 #(
    .INIT(64'h0000000000020000)) 
    WRITE_EN_INST_0
       (.I0(OPC[5]),
        .I1(OPC[3]),
        .I2(OPC[4]),
        .I3(OPC[2]),
        .I4(OPC[0]),
        .I5(OPC[1]),
        .O(WRITE_EN));
  (* DONT_TOUCH *) 
  CE ce
       (.CE_Ack_in(Ack_in),
        .CE_Ack_out(Ack_out),
        .CE_CP(CP),
        .CE_Send_in(Send_in),
        .CE_Send_out(Send_out),
        .Exb(DEL),
        .MR(MR));
endmodule

(* dont_touch = "true" *) 
(* NotValidForBitStream *)
module JOIN_DDP
   (MR,
    Send_in,
    Ack_in,
    PACKET_IN,
    Send_out,
    Ack_out,
    PACKET_OUT);
  input MR;
  input Send_in;
  input Ack_in;
  input [37:0]PACKET_IN;
  output Send_out;
  output Ack_out;
  output [37:0]PACKET_OUT;

  (* DONT_TOUCH *) wire [5:0]ADDR;
  wire Ack_in;
  wire Ack_in_IBUF;
  wire Ack_out;
  wire Ack_out_OBUF;
  (* DONT_TOUCH *) wire B_Ack_out;
  (* DONT_TOUCH *) wire [37:0]B_PACKET_OUT;
  (* DONT_TOUCH *) wire B_Send_out_EXTERNAL;
  (* DONT_TOUCH *) wire B_Send_out_INTERNAL;
  (* DONT_TOUCH *) wire COPY_Ack_out;
  (* DONT_TOUCH *) wire [37:0]COPY_PACKET_OUT;
  (* DONT_TOUCH *) wire COPY_Send_out;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire C_Ack_out;
  wire DEL;
  (* DONT_TOUCH *) wire [37:0]DL;
  (* DONT_TOUCH *) wire FP_Ack_out;
  (* DONT_TOUCH *) wire [39:0]FP_PACKET_OUT;
  (* DONT_TOUCH *) wire FP_Send_out;
  wire LOAD_FLG;
  (* DONT_TOUCH *) wire MA_Ack_out;
  (* DONT_TOUCH *) wire [39:0]MA_PACKET_OUT;
  (* DONT_TOUCH *) wire MA_Send_out;
  (* DONT_TOUCH *) wire MMCAM_Ack_out;
  (* DONT_TOUCH *) wire [37:0]MMCAM_PACKET_OUT;
  (* DONT_TOUCH *) wire MMCAM_Send_out;
  (* DONT_TOUCH *) wire MMRAM_Ack_out;
  (* DONT_TOUCH *) wire [51:0]MMRAM_PACKET_OUT;
  (* DONT_TOUCH *) wire MMRAM_Send_out;
  wire MR;
  wire MR_IBUF;
  (* DONT_TOUCH *) wire M_Ack_out;
  wire M_Ack_out_IN;
  (* DONT_TOUCH *) wire [37:0]M_PACKET_OUT;
  (* DONT_TOUCH *) wire M_Send_out;
  wire [37:0]PACKET_IN;
  wire [37:0]PACKET_IN_IBUF;
  wire [37:0]PACKET_OUT;
  (* DONT_TOUCH *) wire PS_Ack_out;
  wire PS_DEL;
  (* DONT_TOUCH *) wire [61:0]PS_PACKET_OUT;
  (* DONT_TOUCH *) wire PS_Send_out;
  wire Send_in;
  wire Send_in_IBUF;
  wire Send_out;
  wire Send_out_OBUF;
  wire WRITE_DATA;
  wire WRITE_EN;
  wire WR_E;
  wire [15:1]NLW_FP_WRITE_DATA_UNCONNECTED;

  IBUF Ack_in_IBUF_inst
       (.I(Ack_in),
        .O(Ack_in_IBUF));
  OBUF Ack_out_OBUF_inst
       (.I(Ack_out_OBUF),
        .O(Ack_out));
  (* DONT_TOUCH *) 
  B_Stage B
       (.Ack_in_a(M_Ack_out_IN),
        .Ack_in_b(C_Ack_out),
        .Ack_out(B_Ack_out),
        .MR(MR_IBUF),
        .PACKET_IN(COPY_PACKET_OUT),
        .PACKET_OUT(B_PACKET_OUT),
        .Send_in(COPY_Send_out),
        .Send_out_a(B_Send_out_INTERNAL),
        .Send_out_b(B_Send_out_EXTERNAL));
  (* DONT_TOUCH *) 
  COPY_Stage COPY
       (.Ack_in(B_Ack_out),
        .Ack_out(COPY_Ack_out),
        .MR(MR_IBUF),
        .PACKET_IN(MA_PACKET_OUT),
        .PACKET_OUT(COPY_PACKET_OUT),
        .Send_in(MA_Send_out),
        .Send_out(COPY_Send_out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR_IBUF),
        .D(B_PACKET_OUT[9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  FP_Stage FP
       (.Ack_in(MA_Ack_out),
        .Ack_out(FP_Ack_out),
        .DEL(PS_DEL),
        .LOAD_FLG(LOAD_FLG),
        .MR(MR_IBUF),
        .PACKET_IN(PS_PACKET_OUT),
        .PACKET_OUT(FP_PACKET_OUT),
        .Send_in(PS_Send_out),
        .Send_out(FP_Send_out),
        .WRITE_DATA({NLW_FP_WRITE_DATA_UNCONNECTED[15:1],WRITE_DATA}),
        .WRITE_EN(WRITE_EN));
  (* DONT_TOUCH *) 
  M_Stage M
       (.Ack_in(MMCAM_Ack_out),
        .Ack_out_EX(Ack_out_OBUF),
        .Ack_out_IN(M_Ack_out_IN),
        .MR(MR_IBUF),
        .PACKET_IN_EXTERNAL(PACKET_IN_IBUF),
        .PACKET_IN_INTERNAL(B_PACKET_OUT),
        .PACKET_OUT(M_PACKET_OUT),
        .Send_in_EX(Send_in_IBUF),
        .Send_in_IN(B_Send_out_INTERNAL),
        .Send_out(M_Send_out));
  (* DONT_TOUCH *) 
  MA_Stage MA
       (.Ack_in(COPY_Ack_out),
        .Ack_out(MA_Ack_out),
        .LOAD_FLG(LOAD_FLG),
        .MR(MR_IBUF),
        .PACKET_IN(FP_PACKET_OUT),
        .PACKET_OUT(MA_PACKET_OUT),
        .Send_in(FP_Send_out),
        .Send_out(MA_Send_out),
        .WRITE_DATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,WRITE_DATA}),
        .WRITE_EN(WRITE_EN));
  (* DONT_TOUCH *) 
  MMCAM_Stage MMCAM
       (.ADDR(ADDR),
        .Ack_in(MMRAM_Ack_out),
        .Ack_out(MMCAM_Ack_out),
        .DEL(DEL),
        .MR(MR_IBUF),
        .PACKET_IN(M_PACKET_OUT),
        .PACKET_OUT(MMCAM_PACKET_OUT),
        .Send_in(M_Send_out),
        .Send_out(MMCAM_Send_out),
        .WR_E(WR_E));
  (* DONT_TOUCH *) 
  MMRAM_Stage MMRAM
       (.ADDR(ADDR),
        .Ack_in(PS_Ack_out),
        .Ack_out(MMRAM_Ack_out),
        .DEL(DEL),
        .MR(MR_IBUF),
        .PACKET_IN(MMCAM_PACKET_OUT),
        .PACKET_OUT(MMRAM_PACKET_OUT),
        .Send_in(MMCAM_Send_out),
        .Send_out(MMRAM_Send_out),
        .WR_E(WR_E));
  IBUF MR_IBUF_inst
       (.I(MR),
        .O(MR_IBUF));
  IBUF \PACKET_IN_IBUF[0]_inst 
       (.I(PACKET_IN[0]),
        .O(PACKET_IN_IBUF[0]));
  IBUF \PACKET_IN_IBUF[10]_inst 
       (.I(PACKET_IN[10]),
        .O(PACKET_IN_IBUF[10]));
  IBUF \PACKET_IN_IBUF[11]_inst 
       (.I(PACKET_IN[11]),
        .O(PACKET_IN_IBUF[11]));
  IBUF \PACKET_IN_IBUF[12]_inst 
       (.I(PACKET_IN[12]),
        .O(PACKET_IN_IBUF[12]));
  IBUF \PACKET_IN_IBUF[13]_inst 
       (.I(PACKET_IN[13]),
        .O(PACKET_IN_IBUF[13]));
  IBUF \PACKET_IN_IBUF[14]_inst 
       (.I(PACKET_IN[14]),
        .O(PACKET_IN_IBUF[14]));
  IBUF \PACKET_IN_IBUF[15]_inst 
       (.I(PACKET_IN[15]),
        .O(PACKET_IN_IBUF[15]));
  IBUF \PACKET_IN_IBUF[16]_inst 
       (.I(PACKET_IN[16]),
        .O(PACKET_IN_IBUF[16]));
  IBUF \PACKET_IN_IBUF[17]_inst 
       (.I(PACKET_IN[17]),
        .O(PACKET_IN_IBUF[17]));
  IBUF \PACKET_IN_IBUF[18]_inst 
       (.I(PACKET_IN[18]),
        .O(PACKET_IN_IBUF[18]));
  IBUF \PACKET_IN_IBUF[19]_inst 
       (.I(PACKET_IN[19]),
        .O(PACKET_IN_IBUF[19]));
  IBUF \PACKET_IN_IBUF[1]_inst 
       (.I(PACKET_IN[1]),
        .O(PACKET_IN_IBUF[1]));
  IBUF \PACKET_IN_IBUF[20]_inst 
       (.I(PACKET_IN[20]),
        .O(PACKET_IN_IBUF[20]));
  IBUF \PACKET_IN_IBUF[21]_inst 
       (.I(PACKET_IN[21]),
        .O(PACKET_IN_IBUF[21]));
  IBUF \PACKET_IN_IBUF[22]_inst 
       (.I(PACKET_IN[22]),
        .O(PACKET_IN_IBUF[22]));
  IBUF \PACKET_IN_IBUF[23]_inst 
       (.I(PACKET_IN[23]),
        .O(PACKET_IN_IBUF[23]));
  IBUF \PACKET_IN_IBUF[24]_inst 
       (.I(PACKET_IN[24]),
        .O(PACKET_IN_IBUF[24]));
  IBUF \PACKET_IN_IBUF[25]_inst 
       (.I(PACKET_IN[25]),
        .O(PACKET_IN_IBUF[25]));
  IBUF \PACKET_IN_IBUF[26]_inst 
       (.I(PACKET_IN[26]),
        .O(PACKET_IN_IBUF[26]));
  IBUF \PACKET_IN_IBUF[27]_inst 
       (.I(PACKET_IN[27]),
        .O(PACKET_IN_IBUF[27]));
  IBUF \PACKET_IN_IBUF[28]_inst 
       (.I(PACKET_IN[28]),
        .O(PACKET_IN_IBUF[28]));
  IBUF \PACKET_IN_IBUF[29]_inst 
       (.I(PACKET_IN[29]),
        .O(PACKET_IN_IBUF[29]));
  IBUF \PACKET_IN_IBUF[2]_inst 
       (.I(PACKET_IN[2]),
        .O(PACKET_IN_IBUF[2]));
  IBUF \PACKET_IN_IBUF[30]_inst 
       (.I(PACKET_IN[30]),
        .O(PACKET_IN_IBUF[30]));
  IBUF \PACKET_IN_IBUF[31]_inst 
       (.I(PACKET_IN[31]),
        .O(PACKET_IN_IBUF[31]));
  IBUF \PACKET_IN_IBUF[32]_inst 
       (.I(PACKET_IN[32]),
        .O(PACKET_IN_IBUF[32]));
  IBUF \PACKET_IN_IBUF[33]_inst 
       (.I(PACKET_IN[33]),
        .O(PACKET_IN_IBUF[33]));
  IBUF \PACKET_IN_IBUF[34]_inst 
       (.I(PACKET_IN[34]),
        .O(PACKET_IN_IBUF[34]));
  IBUF \PACKET_IN_IBUF[35]_inst 
       (.I(PACKET_IN[35]),
        .O(PACKET_IN_IBUF[35]));
  IBUF \PACKET_IN_IBUF[36]_inst 
       (.I(PACKET_IN[36]),
        .O(PACKET_IN_IBUF[36]));
  IBUF \PACKET_IN_IBUF[37]_inst 
       (.I(PACKET_IN[37]),
        .O(PACKET_IN_IBUF[37]));
  IBUF \PACKET_IN_IBUF[3]_inst 
       (.I(PACKET_IN[3]),
        .O(PACKET_IN_IBUF[3]));
  IBUF \PACKET_IN_IBUF[4]_inst 
       (.I(PACKET_IN[4]),
        .O(PACKET_IN_IBUF[4]));
  IBUF \PACKET_IN_IBUF[5]_inst 
       (.I(PACKET_IN[5]),
        .O(PACKET_IN_IBUF[5]));
  IBUF \PACKET_IN_IBUF[6]_inst 
       (.I(PACKET_IN[6]),
        .O(PACKET_IN_IBUF[6]));
  IBUF \PACKET_IN_IBUF[7]_inst 
       (.I(PACKET_IN[7]),
        .O(PACKET_IN_IBUF[7]));
  IBUF \PACKET_IN_IBUF[8]_inst 
       (.I(PACKET_IN[8]),
        .O(PACKET_IN_IBUF[8]));
  IBUF \PACKET_IN_IBUF[9]_inst 
       (.I(PACKET_IN[9]),
        .O(PACKET_IN_IBUF[9]));
  OBUF \PACKET_OUT_OBUF[0]_inst 
       (.I(DL[0]),
        .O(PACKET_OUT[0]));
  OBUF \PACKET_OUT_OBUF[10]_inst 
       (.I(DL[10]),
        .O(PACKET_OUT[10]));
  OBUF \PACKET_OUT_OBUF[11]_inst 
       (.I(DL[11]),
        .O(PACKET_OUT[11]));
  OBUF \PACKET_OUT_OBUF[12]_inst 
       (.I(DL[12]),
        .O(PACKET_OUT[12]));
  OBUF \PACKET_OUT_OBUF[13]_inst 
       (.I(DL[13]),
        .O(PACKET_OUT[13]));
  OBUF \PACKET_OUT_OBUF[14]_inst 
       (.I(DL[14]),
        .O(PACKET_OUT[14]));
  OBUF \PACKET_OUT_OBUF[15]_inst 
       (.I(DL[15]),
        .O(PACKET_OUT[15]));
  OBUF \PACKET_OUT_OBUF[16]_inst 
       (.I(DL[16]),
        .O(PACKET_OUT[16]));
  OBUF \PACKET_OUT_OBUF[17]_inst 
       (.I(DL[17]),
        .O(PACKET_OUT[17]));
  OBUF \PACKET_OUT_OBUF[18]_inst 
       (.I(DL[18]),
        .O(PACKET_OUT[18]));
  OBUF \PACKET_OUT_OBUF[19]_inst 
       (.I(DL[19]),
        .O(PACKET_OUT[19]));
  OBUF \PACKET_OUT_OBUF[1]_inst 
       (.I(DL[1]),
        .O(PACKET_OUT[1]));
  OBUF \PACKET_OUT_OBUF[20]_inst 
       (.I(DL[20]),
        .O(PACKET_OUT[20]));
  OBUF \PACKET_OUT_OBUF[21]_inst 
       (.I(DL[21]),
        .O(PACKET_OUT[21]));
  OBUF \PACKET_OUT_OBUF[22]_inst 
       (.I(DL[22]),
        .O(PACKET_OUT[22]));
  OBUF \PACKET_OUT_OBUF[23]_inst 
       (.I(DL[23]),
        .O(PACKET_OUT[23]));
  OBUF \PACKET_OUT_OBUF[24]_inst 
       (.I(DL[24]),
        .O(PACKET_OUT[24]));
  OBUF \PACKET_OUT_OBUF[25]_inst 
       (.I(DL[25]),
        .O(PACKET_OUT[25]));
  OBUF \PACKET_OUT_OBUF[26]_inst 
       (.I(DL[26]),
        .O(PACKET_OUT[26]));
  OBUF \PACKET_OUT_OBUF[27]_inst 
       (.I(DL[27]),
        .O(PACKET_OUT[27]));
  OBUF \PACKET_OUT_OBUF[28]_inst 
       (.I(DL[28]),
        .O(PACKET_OUT[28]));
  OBUF \PACKET_OUT_OBUF[29]_inst 
       (.I(DL[29]),
        .O(PACKET_OUT[29]));
  OBUF \PACKET_OUT_OBUF[2]_inst 
       (.I(DL[2]),
        .O(PACKET_OUT[2]));
  OBUF \PACKET_OUT_OBUF[30]_inst 
       (.I(DL[30]),
        .O(PACKET_OUT[30]));
  OBUF \PACKET_OUT_OBUF[31]_inst 
       (.I(DL[31]),
        .O(PACKET_OUT[31]));
  OBUF \PACKET_OUT_OBUF[32]_inst 
       (.I(DL[32]),
        .O(PACKET_OUT[32]));
  OBUF \PACKET_OUT_OBUF[33]_inst 
       (.I(DL[33]),
        .O(PACKET_OUT[33]));
  OBUF \PACKET_OUT_OBUF[34]_inst 
       (.I(DL[34]),
        .O(PACKET_OUT[34]));
  OBUF \PACKET_OUT_OBUF[35]_inst 
       (.I(DL[35]),
        .O(PACKET_OUT[35]));
  OBUF \PACKET_OUT_OBUF[36]_inst 
       (.I(DL[36]),
        .O(PACKET_OUT[36]));
  OBUF \PACKET_OUT_OBUF[37]_inst 
       (.I(DL[37]),
        .O(PACKET_OUT[37]));
  OBUF \PACKET_OUT_OBUF[3]_inst 
       (.I(DL[3]),
        .O(PACKET_OUT[3]));
  OBUF \PACKET_OUT_OBUF[4]_inst 
       (.I(DL[4]),
        .O(PACKET_OUT[4]));
  OBUF \PACKET_OUT_OBUF[5]_inst 
       (.I(DL[5]),
        .O(PACKET_OUT[5]));
  OBUF \PACKET_OUT_OBUF[6]_inst 
       (.I(DL[6]),
        .O(PACKET_OUT[6]));
  OBUF \PACKET_OUT_OBUF[7]_inst 
       (.I(DL[7]),
        .O(PACKET_OUT[7]));
  OBUF \PACKET_OUT_OBUF[8]_inst 
       (.I(DL[8]),
        .O(PACKET_OUT[8]));
  OBUF \PACKET_OUT_OBUF[9]_inst 
       (.I(DL[9]),
        .O(PACKET_OUT[9]));
  (* ABSORB = "6'b111111" *) 
  (* ADD = "6'b000000" *) 
  (* ADDC = "6'b000001" *) 
  (* ADDGEN = "6'b101010" *) 
  (* AND = "6'b000100" *) 
  (* BC = "6'b010010" *) 
  (* BNC = "6'b010011" *) 
  (* BNZ = "6'b010001" *) 
  (* BNZL = "6'b011000" *) 
  (* BZ = "6'b010000" *) 
  (* BZL = "6'b011000" *) 
  (* CHGCOL = "6'b101001" *) 
  (* CHGDEST = "6'b110000" *) 
  (* DECGEN = "6'b101100" *) 
  (* DONT_TOUCH *) 
  (* LDM = "6'b100000" *) 
  (* MUL = "6'b000111" *) 
  (* OR = "6'b000101" *) 
  (* ROL = "6'b001010" *) 
  (* ROR = "6'b001011" *) 
  (* SHL = "6'b001000" *) 
  (* SHR = "6'b001001" *) 
  (* STM = "6'b100001" *) 
  (* SUB = "6'b000010" *) 
  (* SUBC = "6'b000011" *) 
  (* XOR = "6'b000110" *) 
  PS_Stage PS
       (.Ack_in(FP_Ack_out),
        .Ack_out(PS_Ack_out),
        .DEL(PS_DEL),
        .MR(MR_IBUF),
        .PACKET_IN(MMRAM_PACKET_OUT),
        .PACKET_OUT(PS_PACKET_OUT),
        .Send_in(MMRAM_Send_out),
        .Send_out(PS_Send_out));
  IBUF Send_in_IBUF_inst
       (.I(Send_in),
        .O(Send_in_IBUF));
  OBUF Send_out_OBUF_inst
       (.I(Send_out_OBUF),
        .O(Send_out));
  (* DONT_TOUCH *) 
  C c
       (.Ack_in(Ack_in_IBUF),
        .Ack_out(C_Ack_out),
        .CP(CP),
        .MR(MR_IBUF),
        .Send_in(B_Send_out_EXTERNAL),
        .Send_out(Send_out_OBUF));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(M_Ack_out));
endmodule

(* dont_touch = "true" *) 
module MA_Stage
   (WRITE_EN,
    LOAD_FLG,
    Send_in,
    Ack_in,
    MR,
    WRITE_DATA,
    PACKET_IN,
    Send_out,
    Ack_out,
    PACKET_OUT);
  input WRITE_EN;
  input LOAD_FLG;
  input Send_in;
  input Ack_in;
  input MR;
  input [15:0]WRITE_DATA;
  input [39:0]PACKET_IN;
  output Send_out;
  output Ack_out;
  output [39:0]PACKET_OUT;

  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire [40:0]DL;
  (* DONT_TOUCH *) wire [15:0]LOAD_DATA;
  wire LOAD_FLG;
  (* DONT_TOUCH *) wire [39:0]MERGE_DATA;
  wire MR;
  (* DONT_TOUCH *) wire [23:0]OTHER_DATA;
  wire [39:16]\^PACKET_IN ;
  wire [39:0]PACKET_OUT;
  (* DONT_TOUCH *) wire [16:0]ResultData;
  wire Send_in;
  wire Send_out;
  wire [15:0]WRITE_DATA;
  wire WRITE_EN;

  assign ResultData[15:0] = PACKET_IN[15:0];
  assign \^PACKET_IN [39:16] = PACKET_IN[39:16];
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst
       (.I0(DL[39]),
        .O(OTHER_DATA[23]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__0
       (.I0(DL[38]),
        .O(OTHER_DATA[22]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__1
       (.I0(DL[37]),
        .O(OTHER_DATA[21]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__10
       (.I0(DL[28]),
        .O(OTHER_DATA[12]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__11
       (.I0(DL[27]),
        .O(OTHER_DATA[11]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__12
       (.I0(DL[26]),
        .O(OTHER_DATA[10]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__13
       (.I0(DL[25]),
        .O(OTHER_DATA[9]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__14
       (.I0(DL[24]),
        .O(OTHER_DATA[8]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__15
       (.I0(DL[23]),
        .O(OTHER_DATA[7]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__16
       (.I0(DL[22]),
        .O(OTHER_DATA[6]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__17
       (.I0(DL[21]),
        .O(OTHER_DATA[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__18
       (.I0(DL[20]),
        .O(OTHER_DATA[4]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__19
       (.I0(DL[19]),
        .O(OTHER_DATA[3]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__2
       (.I0(DL[36]),
        .O(OTHER_DATA[20]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__20
       (.I0(DL[18]),
        .O(OTHER_DATA[2]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__21
       (.I0(DL[17]),
        .O(OTHER_DATA[1]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__22
       (.I0(DL[16]),
        .O(OTHER_DATA[0]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__3
       (.I0(DL[35]),
        .O(OTHER_DATA[19]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__4
       (.I0(DL[34]),
        .O(OTHER_DATA[18]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__5
       (.I0(DL[33]),
        .O(OTHER_DATA[17]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__6
       (.I0(DL[32]),
        .O(OTHER_DATA[16]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__7
       (.I0(DL[31]),
        .O(OTHER_DATA[15]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__8
       (.I0(DL[30]),
        .O(OTHER_DATA[14]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__9
       (.I0(DL[29]),
        .O(OTHER_DATA[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[38] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [38]),
        .Q(DL[38]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[39] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [39]),
        .Q(DL[39]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[40] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(LOAD_FLG),
        .Q(DL[40]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(ResultData[9]),
        .Q(DL[9]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst
       (.I0(LOAD_DATA[15]),
        .O(MERGE_DATA[15]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__0
       (.I0(LOAD_DATA[14]),
        .O(MERGE_DATA[14]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__1
       (.I0(LOAD_DATA[13]),
        .O(MERGE_DATA[13]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__10
       (.I0(LOAD_DATA[4]),
        .O(MERGE_DATA[4]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__11
       (.I0(LOAD_DATA[3]),
        .O(MERGE_DATA[3]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__12
       (.I0(LOAD_DATA[2]),
        .O(MERGE_DATA[2]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__13
       (.I0(LOAD_DATA[1]),
        .O(MERGE_DATA[1]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__14
       (.I0(LOAD_DATA[0]),
        .O(MERGE_DATA[0]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__2
       (.I0(LOAD_DATA[12]),
        .O(MERGE_DATA[12]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__3
       (.I0(LOAD_DATA[11]),
        .O(MERGE_DATA[11]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__4
       (.I0(LOAD_DATA[10]),
        .O(MERGE_DATA[10]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__5
       (.I0(LOAD_DATA[9]),
        .O(MERGE_DATA[9]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__6
       (.I0(LOAD_DATA[8]),
        .O(MERGE_DATA[8]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__7
       (.I0(LOAD_DATA[7]),
        .O(MERGE_DATA[7]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__8
       (.I0(LOAD_DATA[6]),
        .O(MERGE_DATA[6]));
  LUT1 #(
    .INIT(2'h2)) 
    LOAD_DATA_inst__9
       (.I0(LOAD_DATA[5]),
        .O(MERGE_DATA[5]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst
       (.I0(OTHER_DATA[23]),
        .O(MERGE_DATA[39]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__0
       (.I0(OTHER_DATA[22]),
        .O(MERGE_DATA[38]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__1
       (.I0(OTHER_DATA[21]),
        .O(MERGE_DATA[37]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__10
       (.I0(OTHER_DATA[12]),
        .O(MERGE_DATA[28]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__11
       (.I0(OTHER_DATA[11]),
        .O(MERGE_DATA[27]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__12
       (.I0(OTHER_DATA[10]),
        .O(MERGE_DATA[26]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__13
       (.I0(OTHER_DATA[9]),
        .O(MERGE_DATA[25]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__14
       (.I0(OTHER_DATA[8]),
        .O(MERGE_DATA[24]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__15
       (.I0(OTHER_DATA[7]),
        .O(MERGE_DATA[23]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__16
       (.I0(OTHER_DATA[6]),
        .O(MERGE_DATA[22]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__17
       (.I0(OTHER_DATA[5]),
        .O(MERGE_DATA[21]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__18
       (.I0(OTHER_DATA[4]),
        .O(MERGE_DATA[20]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__19
       (.I0(OTHER_DATA[3]),
        .O(MERGE_DATA[19]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__2
       (.I0(OTHER_DATA[20]),
        .O(MERGE_DATA[36]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__20
       (.I0(OTHER_DATA[2]),
        .O(MERGE_DATA[18]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__21
       (.I0(OTHER_DATA[1]),
        .O(MERGE_DATA[17]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__22
       (.I0(OTHER_DATA[0]),
        .O(MERGE_DATA[16]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__3
       (.I0(OTHER_DATA[19]),
        .O(MERGE_DATA[35]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__4
       (.I0(OTHER_DATA[18]),
        .O(MERGE_DATA[34]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__5
       (.I0(OTHER_DATA[17]),
        .O(MERGE_DATA[33]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__6
       (.I0(OTHER_DATA[16]),
        .O(MERGE_DATA[32]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__7
       (.I0(OTHER_DATA[15]),
        .O(MERGE_DATA[31]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__8
       (.I0(OTHER_DATA[14]),
        .O(MERGE_DATA[30]));
  LUT1 #(
    .INIT(2'h2)) 
    OTHER_DATA_inst__9
       (.I0(OTHER_DATA[13]),
        .O(MERGE_DATA[29]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[0]_INST_0 
       (.I0(MERGE_DATA[0]),
        .I1(DL[40]),
        .I2(DL[0]),
        .O(PACKET_OUT[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[10]_INST_0 
       (.I0(MERGE_DATA[10]),
        .I1(DL[40]),
        .I2(DL[10]),
        .O(PACKET_OUT[10]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[11]_INST_0 
       (.I0(MERGE_DATA[11]),
        .I1(DL[40]),
        .I2(DL[11]),
        .O(PACKET_OUT[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[12]_INST_0 
       (.I0(MERGE_DATA[12]),
        .I1(DL[40]),
        .I2(DL[12]),
        .O(PACKET_OUT[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[13]_INST_0 
       (.I0(MERGE_DATA[13]),
        .I1(DL[40]),
        .I2(DL[13]),
        .O(PACKET_OUT[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[14]_INST_0 
       (.I0(MERGE_DATA[14]),
        .I1(DL[40]),
        .I2(DL[14]),
        .O(PACKET_OUT[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[15]_INST_0 
       (.I0(MERGE_DATA[15]),
        .I1(DL[40]),
        .I2(DL[15]),
        .O(PACKET_OUT[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0 
       (.I0(MERGE_DATA[16]),
        .I1(DL[40]),
        .I2(OTHER_DATA[0]),
        .O(PACKET_OUT[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[17]_INST_0 
       (.I0(MERGE_DATA[17]),
        .I1(DL[40]),
        .I2(OTHER_DATA[1]),
        .O(PACKET_OUT[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[18]_INST_0 
       (.I0(MERGE_DATA[18]),
        .I1(DL[40]),
        .I2(OTHER_DATA[2]),
        .O(PACKET_OUT[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[19]_INST_0 
       (.I0(MERGE_DATA[19]),
        .I1(DL[40]),
        .I2(OTHER_DATA[3]),
        .O(PACKET_OUT[19]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[1]_INST_0 
       (.I0(MERGE_DATA[1]),
        .I1(DL[40]),
        .I2(DL[1]),
        .O(PACKET_OUT[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[20]_INST_0 
       (.I0(MERGE_DATA[20]),
        .I1(DL[40]),
        .I2(OTHER_DATA[4]),
        .O(PACKET_OUT[20]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[21]_INST_0 
       (.I0(MERGE_DATA[21]),
        .I1(DL[40]),
        .I2(OTHER_DATA[5]),
        .O(PACKET_OUT[21]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[22]_INST_0 
       (.I0(MERGE_DATA[22]),
        .I1(DL[40]),
        .I2(OTHER_DATA[6]),
        .O(PACKET_OUT[22]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[23]_INST_0 
       (.I0(MERGE_DATA[23]),
        .I1(DL[40]),
        .I2(OTHER_DATA[7]),
        .O(PACKET_OUT[23]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[24]_INST_0 
       (.I0(MERGE_DATA[24]),
        .I1(DL[40]),
        .I2(OTHER_DATA[8]),
        .O(PACKET_OUT[24]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[25]_INST_0 
       (.I0(MERGE_DATA[25]),
        .I1(DL[40]),
        .I2(OTHER_DATA[9]),
        .O(PACKET_OUT[25]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[26]_INST_0 
       (.I0(MERGE_DATA[26]),
        .I1(DL[40]),
        .I2(OTHER_DATA[10]),
        .O(PACKET_OUT[26]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[27]_INST_0 
       (.I0(MERGE_DATA[27]),
        .I1(DL[40]),
        .I2(OTHER_DATA[11]),
        .O(PACKET_OUT[27]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[28]_INST_0 
       (.I0(MERGE_DATA[28]),
        .I1(DL[40]),
        .I2(OTHER_DATA[12]),
        .O(PACKET_OUT[28]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[29]_INST_0 
       (.I0(MERGE_DATA[29]),
        .I1(DL[40]),
        .I2(OTHER_DATA[13]),
        .O(PACKET_OUT[29]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[2]_INST_0 
       (.I0(MERGE_DATA[2]),
        .I1(DL[40]),
        .I2(DL[2]),
        .O(PACKET_OUT[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[30]_INST_0 
       (.I0(MERGE_DATA[30]),
        .I1(DL[40]),
        .I2(OTHER_DATA[14]),
        .O(PACKET_OUT[30]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[31]_INST_0 
       (.I0(MERGE_DATA[31]),
        .I1(DL[40]),
        .I2(OTHER_DATA[15]),
        .O(PACKET_OUT[31]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[32]_INST_0 
       (.I0(MERGE_DATA[32]),
        .I1(DL[40]),
        .I2(OTHER_DATA[16]),
        .O(PACKET_OUT[32]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[33]_INST_0 
       (.I0(MERGE_DATA[33]),
        .I1(DL[40]),
        .I2(OTHER_DATA[17]),
        .O(PACKET_OUT[33]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[34]_INST_0 
       (.I0(MERGE_DATA[34]),
        .I1(DL[40]),
        .I2(OTHER_DATA[18]),
        .O(PACKET_OUT[34]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[35]_INST_0 
       (.I0(MERGE_DATA[35]),
        .I1(DL[40]),
        .I2(OTHER_DATA[19]),
        .O(PACKET_OUT[35]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[36]_INST_0 
       (.I0(MERGE_DATA[36]),
        .I1(DL[40]),
        .I2(OTHER_DATA[20]),
        .O(PACKET_OUT[36]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[37]_INST_0 
       (.I0(MERGE_DATA[37]),
        .I1(DL[40]),
        .I2(OTHER_DATA[21]),
        .O(PACKET_OUT[37]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[38]_INST_0 
       (.I0(MERGE_DATA[38]),
        .I1(DL[40]),
        .I2(OTHER_DATA[22]),
        .O(PACKET_OUT[38]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[39]_INST_0 
       (.I0(MERGE_DATA[39]),
        .I1(DL[40]),
        .I2(OTHER_DATA[23]),
        .O(PACKET_OUT[39]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[3]_INST_0 
       (.I0(MERGE_DATA[3]),
        .I1(DL[40]),
        .I2(DL[3]),
        .O(PACKET_OUT[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[4]_INST_0 
       (.I0(MERGE_DATA[4]),
        .I1(DL[40]),
        .I2(DL[4]),
        .O(PACKET_OUT[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[5]_INST_0 
       (.I0(MERGE_DATA[5]),
        .I1(DL[40]),
        .I2(DL[5]),
        .O(PACKET_OUT[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[6]_INST_0 
       (.I0(MERGE_DATA[6]),
        .I1(DL[40]),
        .I2(DL[6]),
        .O(PACKET_OUT[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[7]_INST_0 
       (.I0(MERGE_DATA[7]),
        .I1(DL[40]),
        .I2(DL[7]),
        .O(PACKET_OUT[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[8]_INST_0 
       (.I0(MERGE_DATA[8]),
        .I1(DL[40]),
        .I2(DL[8]),
        .O(PACKET_OUT[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[9]_INST_0 
       (.I0(MERGE_DATA[9]),
        .I1(DL[40]),
        .I2(DL[9]),
        .O(PACKET_OUT[9]));
  (* DONT_TOUCH *) 
  C__3 c
       (.Ack_in(Ack_in),
        .Ack_out(Ack_out),
        .CP(CP),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(Send_out));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/DMEM/DMEM.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  DMEM dmem
       (.addra(ResultData[4:0]),
        .clka(CP),
        .dina(WRITE_DATA),
        .douta(LOAD_DATA),
        .wea(WRITE_EN));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(ResultData[16]));
endmodule

(* dont_touch = "true" *) 
module MMCAM_Stage
   (MR,
    Send_in,
    Ack_in,
    PACKET_IN,
    PACKET_OUT,
    WR_E,
    DEL,
    Ack_out,
    Send_out,
    ADDR);
  input MR;
  input Send_in;
  input Ack_in;
  input [37:0]PACKET_IN;
  output [37:0]PACKET_OUT;
  output WR_E;
  output DEL;
  output Ack_out;
  output Send_out;
  output [5:0]ADDR;

  wire [5:0]ADDR;
  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  wire DEL;
  (* DONT_TOUCH *) wire [37:0]DL;
  (* DONT_TOUCH *) wire [19:0]EN;
  (* DONT_TOUCH *) wire [19:0]FIRE;
  wire MR;
  wire [37:0]PACKET_IN;
  wire Send_in;
  wire Send_out;
  (* DONT_TOUCH *) wire [19:0]VALID;
  wire WR_E;

  assign PACKET_OUT[37:0] = DL;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN[9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  C__1 c
       (.Ack_in(Ack_in),
        .Ack_out(Ack_out),
        .CP(CP),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(Send_out));
  (* DONT_TOUCH *) 
  ENTRY_FD__1 \entry_fd_loop[0].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[0]),
        .FIRE(FIRE[0]),
        .MR(MR),
        .VALID(VALID[0]));
  (* DONT_TOUCH *) 
  ENTRY_FD__11 \entry_fd_loop[10].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[10]),
        .FIRE(FIRE[10]),
        .MR(MR),
        .VALID(VALID[10]));
  (* DONT_TOUCH *) 
  ENTRY_FD__12 \entry_fd_loop[11].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[11]),
        .FIRE(FIRE[11]),
        .MR(MR),
        .VALID(VALID[11]));
  (* DONT_TOUCH *) 
  ENTRY_FD__13 \entry_fd_loop[12].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[12]),
        .FIRE(FIRE[12]),
        .MR(MR),
        .VALID(VALID[12]));
  (* DONT_TOUCH *) 
  ENTRY_FD__14 \entry_fd_loop[13].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[13]),
        .FIRE(FIRE[13]),
        .MR(MR),
        .VALID(VALID[13]));
  (* DONT_TOUCH *) 
  ENTRY_FD__15 \entry_fd_loop[14].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[14]),
        .FIRE(FIRE[14]),
        .MR(MR),
        .VALID(VALID[14]));
  (* DONT_TOUCH *) 
  ENTRY_FD__16 \entry_fd_loop[15].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[15]),
        .FIRE(FIRE[15]),
        .MR(MR),
        .VALID(VALID[15]));
  (* DONT_TOUCH *) 
  ENTRY_FD__17 \entry_fd_loop[16].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[16]),
        .FIRE(FIRE[16]),
        .MR(MR),
        .VALID(VALID[16]));
  (* DONT_TOUCH *) 
  ENTRY_FD__18 \entry_fd_loop[17].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[17]),
        .FIRE(FIRE[17]),
        .MR(MR),
        .VALID(VALID[17]));
  (* DONT_TOUCH *) 
  ENTRY_FD__19 \entry_fd_loop[18].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[18]),
        .FIRE(FIRE[18]),
        .MR(MR),
        .VALID(VALID[18]));
  (* DONT_TOUCH *) 
  ENTRY_FD \entry_fd_loop[19].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[19]),
        .FIRE(FIRE[19]),
        .MR(MR),
        .VALID(VALID[19]));
  (* DONT_TOUCH *) 
  ENTRY_FD__2 \entry_fd_loop[1].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[1]),
        .FIRE(FIRE[1]),
        .MR(MR),
        .VALID(VALID[1]));
  (* DONT_TOUCH *) 
  ENTRY_FD__3 \entry_fd_loop[2].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[2]),
        .FIRE(FIRE[2]),
        .MR(MR),
        .VALID(VALID[2]));
  (* DONT_TOUCH *) 
  ENTRY_FD__4 \entry_fd_loop[3].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[3]),
        .FIRE(FIRE[3]),
        .MR(MR),
        .VALID(VALID[3]));
  (* DONT_TOUCH *) 
  ENTRY_FD__5 \entry_fd_loop[4].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[4]),
        .FIRE(FIRE[4]),
        .MR(MR),
        .VALID(VALID[4]));
  (* DONT_TOUCH *) 
  ENTRY_FD__6 \entry_fd_loop[5].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[5]),
        .FIRE(FIRE[5]),
        .MR(MR),
        .VALID(VALID[5]));
  (* DONT_TOUCH *) 
  ENTRY_FD__7 \entry_fd_loop[6].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[6]),
        .FIRE(FIRE[6]),
        .MR(MR),
        .VALID(VALID[6]));
  (* DONT_TOUCH *) 
  ENTRY_FD__8 \entry_fd_loop[7].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[7]),
        .FIRE(FIRE[7]),
        .MR(MR),
        .VALID(VALID[7]));
  (* DONT_TOUCH *) 
  ENTRY_FD__9 \entry_fd_loop[8].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[8]),
        .FIRE(FIRE[8]),
        .MR(MR),
        .VALID(VALID[8]));
  (* DONT_TOUCH *) 
  ENTRY_FD__10 \entry_fd_loop[9].ef 
       (.COLOR_GEN_DEST_LR(PACKET_IN[37:19]),
        .CP(CP),
        .EN(EN[9]),
        .FIRE(FIRE[9]),
        .MR(MR),
        .VALID(VALID[9]));
  (* DONT_TOUCH *) 
  OR_AM_MA oam
       (.ADDR(ADDR),
        .CP(CP),
        .DEL(DEL),
        .EN(EN),
        .FIRE(FIRE),
        .MF(PACKET_IN[18]),
        .MR(MR),
        .VALID(VALID),
        .WR_E(WR_E));
endmodule

(* CHECK_LICENSE_TYPE = "MMRAM,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module MMRAM
   (clka,
    wea,
    addra,
    dina,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [19:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [19:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [19:0]dina;
  wire [19:0]douta;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [19:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [19:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     3.03925 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "MMRAM.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "0" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "20" *) 
  (* C_READ_WIDTH_B = "20" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "20" *) 
  (* C_WRITE_WIDTH_B = "20" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  MMRAM_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .clka(clka),
        .clkb(1'b0),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(dina),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(douta),
        .doutb(NLW_U0_doutb_UNCONNECTED[19:0]),
        .eccpipece(1'b0),
        .ena(1'b0),
        .enb(1'b0),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(1'b1),
        .regceb(1'b1),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[19:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(wea),
        .web(1'b0));
endmodule

(* dont_touch = "true" *) 
module MMRAM_Stage
   (WR_E,
    DEL,
    MR,
    Send_in,
    Ack_in,
    ADDR,
    PACKET_IN,
    PACKET_OUT,
    Send_out,
    Ack_out);
  input WR_E;
  input DEL;
  input MR;
  input Send_in;
  input Ack_in;
  input [5:0]ADDR;
  input [37:0]PACKET_IN;
  output [51:0]PACKET_OUT;
  output Send_out;
  output Ack_out;

  wire [5:0]ADDR;
  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  (* DONT_TOUCH *) wire [15:0]CST_DATA;
  (* DONT_TOUCH *) wire [19:0]DATA_IN;
  (* DONT_TOUCH *) wire [19:0]DATA_OUT;
  wire DEL;
  (* DONT_TOUCH *) wire [37:0]DL;
  wire [34:32]MERGE1_OUT_orig;
  (* DONT_TOUCH *) wire [53:0]MERGE2_OUT;
  (* DONT_TOUCH *) wire MF;
  wire MR;
  (* DONT_TOUCH *) wire [53:0]MUX_OUT;
  wire [37:27]\^PACKET_IN ;
  wire [31:0]\^PACKET_OUT ;
  wire Send_in;
  wire Send_out;
  wire WR_E;
  (* DONT_TOUCH *) wire [6:0]dest;

  assign DATA_IN = PACKET_IN[19:0];
  assign PACKET_OUT[51:34] = MUX_OUT[53:36];
  assign PACKET_OUT[33:32] = MUX_OUT[33:32];
  assign PACKET_OUT[31:0] = \^PACKET_OUT [31:0];
  assign \^PACKET_IN [37:27] = PACKET_IN[37:27];
  assign dest = PACKET_IN[26:20];
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst
       (.I0(CST_DATA[15]),
        .O(MERGE2_OUT[15]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__0
       (.I0(CST_DATA[14]),
        .O(MERGE2_OUT[14]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__1
       (.I0(CST_DATA[13]),
        .O(MERGE2_OUT[13]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__10
       (.I0(CST_DATA[4]),
        .O(MERGE2_OUT[4]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__11
       (.I0(CST_DATA[3]),
        .O(MERGE2_OUT[3]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__12
       (.I0(CST_DATA[2]),
        .O(MERGE2_OUT[2]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__13
       (.I0(CST_DATA[1]),
        .O(MERGE2_OUT[1]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__14
       (.I0(CST_DATA[0]),
        .O(MERGE2_OUT[0]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__2
       (.I0(CST_DATA[12]),
        .O(MERGE2_OUT[12]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__3
       (.I0(CST_DATA[11]),
        .O(MERGE2_OUT[11]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__4
       (.I0(CST_DATA[10]),
        .O(MERGE2_OUT[10]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__5
       (.I0(CST_DATA[9]),
        .O(MERGE2_OUT[9]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__6
       (.I0(CST_DATA[8]),
        .O(MERGE2_OUT[8]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__7
       (.I0(CST_DATA[7]),
        .O(MERGE2_OUT[7]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__8
       (.I0(CST_DATA[6]),
        .O(MERGE2_OUT[6]));
  LUT1 #(
    .INIT(2'h2)) 
    CST_DATA_inst__9
       (.I0(CST_DATA[5]),
        .O(MERGE2_OUT[5]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst
       (.I0(DL[37]),
        .O(MERGE2_OUT[53]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__0
       (.I0(DL[36]),
        .O(MERGE2_OUT[52]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__1
       (.I0(DL[35]),
        .O(MERGE2_OUT[51]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__10
       (.I0(DL[26]),
        .O(MERGE2_OUT[42]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__11
       (.I0(DL[25]),
        .O(MERGE2_OUT[41]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__12
       (.I0(DL[24]),
        .O(MERGE2_OUT[40]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__13
       (.I0(DL[23]),
        .O(MERGE2_OUT[39]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__14
       (.I0(DL[22]),
        .O(MERGE2_OUT[38]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__15
       (.I0(DL[21]),
        .O(MERGE2_OUT[37]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__16
       (.I0(DL[20]),
        .O(MERGE2_OUT[36]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__17
       (.I0(DL[19]),
        .O(MERGE2_OUT[35]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__18
       (.I0(DL[18]),
        .O(MERGE2_OUT[34]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__19
       (.I0(DL[17]),
        .O(MERGE2_OUT[33]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__2
       (.I0(DL[34]),
        .O(MERGE2_OUT[50]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__20
       (.I0(DL[16]),
        .O(MERGE2_OUT[32]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__21
       (.I0(DL[15]),
        .O(MERGE2_OUT[31]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__22
       (.I0(DL[14]),
        .O(MERGE2_OUT[30]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__23
       (.I0(DL[13]),
        .O(MERGE2_OUT[29]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__24
       (.I0(DL[12]),
        .O(MERGE2_OUT[28]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__25
       (.I0(DL[11]),
        .O(MERGE2_OUT[27]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__26
       (.I0(DL[10]),
        .O(MERGE2_OUT[26]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__27
       (.I0(DL[9]),
        .O(MERGE2_OUT[25]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__28
       (.I0(DL[8]),
        .O(MERGE2_OUT[24]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__29
       (.I0(DL[7]),
        .O(MERGE2_OUT[23]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__3
       (.I0(DL[33]),
        .O(MERGE2_OUT[49]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__30
       (.I0(DL[6]),
        .O(MERGE2_OUT[22]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__31
       (.I0(DL[5]),
        .O(MERGE2_OUT[21]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__32
       (.I0(DL[4]),
        .O(MERGE2_OUT[20]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__33
       (.I0(DL[3]),
        .O(MERGE2_OUT[19]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__34
       (.I0(DL[2]),
        .O(MERGE2_OUT[18]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__35
       (.I0(DL[1]),
        .O(MERGE2_OUT[17]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__36
       (.I0(DL[0]),
        .O(MERGE2_OUT[16]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__4
       (.I0(DL[32]),
        .O(MERGE2_OUT[48]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__5
       (.I0(DL[31]),
        .O(MERGE2_OUT[47]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__6
       (.I0(DL[30]),
        .O(MERGE2_OUT[46]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__7
       (.I0(DL[29]),
        .O(MERGE2_OUT[45]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__8
       (.I0(DL[28]),
        .O(MERGE2_OUT[44]));
  LUT1 #(
    .INIT(2'h2)) 
    DL_inst__9
       (.I0(DL[27]),
        .O(MERGE2_OUT[43]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[0]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[1]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[2]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[3]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[4]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[5]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[6]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [34]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [35]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [36]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [37]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(DATA_IN[9]),
        .Q(DL[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    MERGE1_OUT_inferred_i_1
       (.I0(MERGE2_OUT[34]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[18]),
        .O(MERGE1_OUT_orig[34]));
  LUT3 #(
    .INIT(8'hB8)) 
    MERGE1_OUT_inferred_i_2
       (.I0(MERGE2_OUT[33]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[17]),
        .O(MERGE1_OUT_orig[33]));
  LUT3 #(
    .INIT(8'hB8)) 
    MERGE1_OUT_inferred_i_3
       (.I0(MERGE2_OUT[32]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[16]),
        .O(MERGE1_OUT_orig[32]));
  LUT1 #(
    .INIT(2'h2)) 
    MF_inst
       (.I0(MERGE2_OUT[34]),
        .O(MF));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_1
       (.I0(MERGE2_OUT[53]),
        .I1(MERGE2_OUT[53]),
        .I2(MF),
        .O(MUX_OUT[53]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_10
       (.I0(MERGE2_OUT[44]),
        .I1(MERGE2_OUT[44]),
        .I2(MF),
        .O(MUX_OUT[44]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_11
       (.I0(MERGE2_OUT[43]),
        .I1(MERGE2_OUT[43]),
        .I2(MF),
        .O(MUX_OUT[43]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_12
       (.I0(MERGE2_OUT[42]),
        .I1(MERGE2_OUT[42]),
        .I2(MF),
        .O(MUX_OUT[42]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_13
       (.I0(MERGE2_OUT[41]),
        .I1(MERGE2_OUT[41]),
        .I2(MF),
        .O(MUX_OUT[41]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_14
       (.I0(MERGE2_OUT[40]),
        .I1(MERGE2_OUT[40]),
        .I2(MF),
        .O(MUX_OUT[40]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_15
       (.I0(MERGE2_OUT[39]),
        .I1(MERGE2_OUT[39]),
        .I2(MF),
        .O(MUX_OUT[39]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_16
       (.I0(MERGE2_OUT[38]),
        .I1(MERGE2_OUT[38]),
        .I2(MF),
        .O(MUX_OUT[38]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_17
       (.I0(MERGE2_OUT[37]),
        .I1(MERGE2_OUT[37]),
        .I2(MF),
        .O(MUX_OUT[37]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_18
       (.I0(MERGE2_OUT[36]),
        .I1(MERGE2_OUT[36]),
        .I2(MF),
        .O(MUX_OUT[36]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_19
       (.I0(MERGE2_OUT[35]),
        .I1(MERGE2_OUT[35]),
        .I2(MF),
        .O(MUX_OUT[35]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_2
       (.I0(MERGE2_OUT[52]),
        .I1(MERGE2_OUT[52]),
        .I2(MF),
        .O(MUX_OUT[52]));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    MUX_OUT_inferred_i_20
       (.I0(MERGE2_OUT[34]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[18]),
        .I3(MERGE2_OUT[34]),
        .I4(MF),
        .O(MUX_OUT[34]));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    MUX_OUT_inferred_i_21
       (.I0(MERGE2_OUT[33]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[17]),
        .I3(MERGE2_OUT[33]),
        .I4(MF),
        .O(MUX_OUT[33]));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    MUX_OUT_inferred_i_22
       (.I0(MERGE2_OUT[32]),
        .I1(MERGE2_OUT[35]),
        .I2(DATA_OUT[16]),
        .I3(MERGE2_OUT[32]),
        .I4(MF),
        .O(MUX_OUT[32]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_23
       (.I0(MERGE2_OUT[31]),
        .I1(MERGE2_OUT[31]),
        .I2(MF),
        .O(MUX_OUT[31]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_24
       (.I0(MERGE2_OUT[30]),
        .I1(MERGE2_OUT[30]),
        .I2(MF),
        .O(MUX_OUT[30]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_25
       (.I0(MERGE2_OUT[29]),
        .I1(MERGE2_OUT[29]),
        .I2(MF),
        .O(MUX_OUT[29]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_26
       (.I0(MERGE2_OUT[28]),
        .I1(MERGE2_OUT[28]),
        .I2(MF),
        .O(MUX_OUT[28]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_27
       (.I0(MERGE2_OUT[27]),
        .I1(MERGE2_OUT[27]),
        .I2(MF),
        .O(MUX_OUT[27]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_28
       (.I0(MERGE2_OUT[26]),
        .I1(MERGE2_OUT[26]),
        .I2(MF),
        .O(MUX_OUT[26]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_29
       (.I0(MERGE2_OUT[25]),
        .I1(MERGE2_OUT[25]),
        .I2(MF),
        .O(MUX_OUT[25]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_3
       (.I0(MERGE2_OUT[51]),
        .I1(MERGE2_OUT[51]),
        .I2(MF),
        .O(MUX_OUT[51]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_30
       (.I0(MERGE2_OUT[24]),
        .I1(MERGE2_OUT[24]),
        .I2(MF),
        .O(MUX_OUT[24]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_31
       (.I0(MERGE2_OUT[23]),
        .I1(MERGE2_OUT[23]),
        .I2(MF),
        .O(MUX_OUT[23]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_32
       (.I0(MERGE2_OUT[22]),
        .I1(MERGE2_OUT[22]),
        .I2(MF),
        .O(MUX_OUT[22]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_33
       (.I0(MERGE2_OUT[21]),
        .I1(MERGE2_OUT[21]),
        .I2(MF),
        .O(MUX_OUT[21]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_34
       (.I0(MERGE2_OUT[20]),
        .I1(MERGE2_OUT[20]),
        .I2(MF),
        .O(MUX_OUT[20]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_35
       (.I0(MERGE2_OUT[19]),
        .I1(MERGE2_OUT[19]),
        .I2(MF),
        .O(MUX_OUT[19]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_36
       (.I0(MERGE2_OUT[18]),
        .I1(MERGE2_OUT[18]),
        .I2(MF),
        .O(MUX_OUT[18]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_37
       (.I0(MERGE2_OUT[17]),
        .I1(MERGE2_OUT[17]),
        .I2(MF),
        .O(MUX_OUT[17]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_38
       (.I0(MERGE2_OUT[16]),
        .I1(MERGE2_OUT[16]),
        .I2(MF),
        .O(MUX_OUT[16]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_39
       (.I0(DATA_OUT[15]),
        .I1(MERGE2_OUT[15]),
        .I2(MF),
        .O(MUX_OUT[15]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_4
       (.I0(MERGE2_OUT[50]),
        .I1(MERGE2_OUT[50]),
        .I2(MF),
        .O(MUX_OUT[50]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_40
       (.I0(DATA_OUT[14]),
        .I1(MERGE2_OUT[14]),
        .I2(MF),
        .O(MUX_OUT[14]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_41
       (.I0(DATA_OUT[13]),
        .I1(MERGE2_OUT[13]),
        .I2(MF),
        .O(MUX_OUT[13]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_42
       (.I0(DATA_OUT[12]),
        .I1(MERGE2_OUT[12]),
        .I2(MF),
        .O(MUX_OUT[12]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_43
       (.I0(DATA_OUT[11]),
        .I1(MERGE2_OUT[11]),
        .I2(MF),
        .O(MUX_OUT[11]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_44
       (.I0(DATA_OUT[10]),
        .I1(MERGE2_OUT[10]),
        .I2(MF),
        .O(MUX_OUT[10]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_45
       (.I0(DATA_OUT[9]),
        .I1(MERGE2_OUT[9]),
        .I2(MF),
        .O(MUX_OUT[9]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_46
       (.I0(DATA_OUT[8]),
        .I1(MERGE2_OUT[8]),
        .I2(MF),
        .O(MUX_OUT[8]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_47
       (.I0(DATA_OUT[7]),
        .I1(MERGE2_OUT[7]),
        .I2(MF),
        .O(MUX_OUT[7]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_48
       (.I0(DATA_OUT[6]),
        .I1(MERGE2_OUT[6]),
        .I2(MF),
        .O(MUX_OUT[6]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_49
       (.I0(DATA_OUT[5]),
        .I1(MERGE2_OUT[5]),
        .I2(MF),
        .O(MUX_OUT[5]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_5
       (.I0(MERGE2_OUT[49]),
        .I1(MERGE2_OUT[49]),
        .I2(MF),
        .O(MUX_OUT[49]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_50
       (.I0(DATA_OUT[4]),
        .I1(MERGE2_OUT[4]),
        .I2(MF),
        .O(MUX_OUT[4]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_51
       (.I0(DATA_OUT[3]),
        .I1(MERGE2_OUT[3]),
        .I2(MF),
        .O(MUX_OUT[3]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_52
       (.I0(DATA_OUT[2]),
        .I1(MERGE2_OUT[2]),
        .I2(MF),
        .O(MUX_OUT[2]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_53
       (.I0(DATA_OUT[1]),
        .I1(MERGE2_OUT[1]),
        .I2(MF),
        .O(MUX_OUT[1]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_54
       (.I0(DATA_OUT[0]),
        .I1(MERGE2_OUT[0]),
        .I2(MF),
        .O(MUX_OUT[0]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_6
       (.I0(MERGE2_OUT[48]),
        .I1(MERGE2_OUT[48]),
        .I2(MF),
        .O(MUX_OUT[48]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_7
       (.I0(MERGE2_OUT[47]),
        .I1(MERGE2_OUT[47]),
        .I2(MF),
        .O(MUX_OUT[47]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_8
       (.I0(MERGE2_OUT[46]),
        .I1(MERGE2_OUT[46]),
        .I2(MF),
        .O(MUX_OUT[46]));
  LUT3 #(
    .INIT(8'hAC)) 
    MUX_OUT_inferred_i_9
       (.I0(MERGE2_OUT[45]),
        .I1(MERGE2_OUT[45]),
        .I2(MF),
        .O(MUX_OUT[45]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[0]_INST_0 
       (.I0(MUX_OUT[16]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[0]),
        .O(\^PACKET_OUT [0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[10]_INST_0 
       (.I0(MUX_OUT[26]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[10]),
        .O(\^PACKET_OUT [10]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[11]_INST_0 
       (.I0(MUX_OUT[27]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[11]),
        .O(\^PACKET_OUT [11]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[12]_INST_0 
       (.I0(MUX_OUT[28]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[12]),
        .O(\^PACKET_OUT [12]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[13]_INST_0 
       (.I0(MUX_OUT[29]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[13]),
        .O(\^PACKET_OUT [13]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[14]_INST_0 
       (.I0(MUX_OUT[30]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[14]),
        .O(\^PACKET_OUT [14]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[15]_INST_0 
       (.I0(MUX_OUT[31]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[15]),
        .O(\^PACKET_OUT [15]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[16]_INST_0 
       (.I0(MUX_OUT[0]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[16]),
        .O(\^PACKET_OUT [16]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[17]_INST_0 
       (.I0(MUX_OUT[1]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[17]),
        .O(\^PACKET_OUT [17]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[18]_INST_0 
       (.I0(MUX_OUT[2]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[18]),
        .O(\^PACKET_OUT [18]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[19]_INST_0 
       (.I0(MUX_OUT[3]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[19]),
        .O(\^PACKET_OUT [19]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[1]_INST_0 
       (.I0(MUX_OUT[17]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[1]),
        .O(\^PACKET_OUT [1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[20]_INST_0 
       (.I0(MUX_OUT[4]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[20]),
        .O(\^PACKET_OUT [20]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[21]_INST_0 
       (.I0(MUX_OUT[5]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[21]),
        .O(\^PACKET_OUT [21]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[22]_INST_0 
       (.I0(MUX_OUT[6]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[22]),
        .O(\^PACKET_OUT [22]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[23]_INST_0 
       (.I0(MUX_OUT[7]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[23]),
        .O(\^PACKET_OUT [23]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[24]_INST_0 
       (.I0(MUX_OUT[8]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[24]),
        .O(\^PACKET_OUT [24]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[25]_INST_0 
       (.I0(MUX_OUT[9]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[25]),
        .O(\^PACKET_OUT [25]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[26]_INST_0 
       (.I0(MUX_OUT[10]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[26]),
        .O(\^PACKET_OUT [26]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[27]_INST_0 
       (.I0(MUX_OUT[11]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[27]),
        .O(\^PACKET_OUT [27]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[28]_INST_0 
       (.I0(MUX_OUT[12]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[28]),
        .O(\^PACKET_OUT [28]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[29]_INST_0 
       (.I0(MUX_OUT[13]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[29]),
        .O(\^PACKET_OUT [29]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[2]_INST_0 
       (.I0(MUX_OUT[18]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[2]),
        .O(\^PACKET_OUT [2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[30]_INST_0 
       (.I0(MUX_OUT[14]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[30]),
        .O(\^PACKET_OUT [30]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[31]_INST_0 
       (.I0(MUX_OUT[15]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[31]),
        .O(\^PACKET_OUT [31]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[3]_INST_0 
       (.I0(MUX_OUT[19]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[3]),
        .O(\^PACKET_OUT [3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[4]_INST_0 
       (.I0(MUX_OUT[20]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[4]),
        .O(\^PACKET_OUT [4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[5]_INST_0 
       (.I0(MUX_OUT[21]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[5]),
        .O(\^PACKET_OUT [5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[6]_INST_0 
       (.I0(MUX_OUT[22]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[6]),
        .O(\^PACKET_OUT [6]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[7]_INST_0 
       (.I0(MUX_OUT[23]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[7]),
        .O(\^PACKET_OUT [7]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[8]_INST_0 
       (.I0(MUX_OUT[24]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[8]),
        .O(\^PACKET_OUT [8]));
  LUT3 #(
    .INIT(8'hB8)) 
    \PACKET_OUT[9]_INST_0 
       (.I0(MUX_OUT[25]),
        .I1(MUX_OUT[35]),
        .I2(MUX_OUT[9]),
        .O(\^PACKET_OUT [9]));
  (* DONT_TOUCH *) 
  CE__1 ce
       (.CE_Ack_in(Ack_in),
        .CE_Ack_out(Ack_out),
        .CE_CP(CP),
        .CE_Send_in(Send_in),
        .CE_Send_out(Send_out),
        .Exb(DEL),
        .MR(MR));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/CMEM/CMEM.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  CMEM cmem
       (.addra(dest[4:0]),
        .clka(CP),
        .douta(CST_DATA));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/MMRAM/MMRAM.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  MMRAM mmram
       (.addra(ADDR[4:0]),
        .clka(CP),
        .dina(DATA_IN),
        .douta(DATA_OUT),
        .wea(WR_E));
endmodule

(* dont_touch = "true" *) 
module M_Stage
   (MR,
    Send_in_EX,
    Send_in_IN,
    Ack_in,
    PACKET_IN_EXTERNAL,
    PACKET_IN_INTERNAL,
    Ack_out_EX,
    Ack_out_IN,
    Send_out,
    PACKET_OUT);
  input MR;
  input Send_in_EX;
  input Send_in_IN;
  input Ack_in;
  input [37:0]PACKET_IN_EXTERNAL;
  input [37:0]PACKET_IN_INTERNAL;
  output Ack_out_EX;
  output Ack_out_IN;
  output Send_out;
  output [37:0]PACKET_OUT;

  wire AEB;
  wire Ack_in;
  wire Ack_out_EX;
  wire Ack_out_IN;
  (* DONT_TOUCH *) wire CP_EXTERNAL;
  (* DONT_TOUCH *) wire CP_INTERNAL;
  (* DONT_TOUCH *) wire [37:0]DL_EX;
  (* DONT_TOUCH *) wire [37:0]DL_IN;
  wire MR;
  wire [37:0]PACKET_IN_EXTERNAL;
  wire [37:0]PACKET_IN_INTERNAL;
  wire [37:0]PACKET_OUT;
  wire Send_in_EX;
  wire Send_in_IN;
  wire Send_out;

  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[0] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[0]),
        .Q(DL_EX[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[10] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[10]),
        .Q(DL_EX[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[11] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[11]),
        .Q(DL_EX[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[12] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[12]),
        .Q(DL_EX[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[13] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[13]),
        .Q(DL_EX[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[14] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[14]),
        .Q(DL_EX[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[15] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[15]),
        .Q(DL_EX[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[16] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[16]),
        .Q(DL_EX[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[17] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[17]),
        .Q(DL_EX[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[18] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[18]),
        .Q(DL_EX[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[19] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[19]),
        .Q(DL_EX[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[1] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[1]),
        .Q(DL_EX[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[20] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[20]),
        .Q(DL_EX[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[21] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[21]),
        .Q(DL_EX[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[22] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[22]),
        .Q(DL_EX[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[23] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[23]),
        .Q(DL_EX[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[24] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[24]),
        .Q(DL_EX[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[25] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[25]),
        .Q(DL_EX[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[26] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[26]),
        .Q(DL_EX[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[27] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[27]),
        .Q(DL_EX[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[28] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[28]),
        .Q(DL_EX[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[29] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[29]),
        .Q(DL_EX[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[2] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[2]),
        .Q(DL_EX[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[30] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[30]),
        .Q(DL_EX[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[31] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[31]),
        .Q(DL_EX[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[32] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[32]),
        .Q(DL_EX[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[33] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[33]),
        .Q(DL_EX[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[34] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[34]),
        .Q(DL_EX[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[35] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[35]),
        .Q(DL_EX[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[36] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[36]),
        .Q(DL_EX[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[37] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[37]),
        .Q(DL_EX[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[3] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[3]),
        .Q(DL_EX[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[4] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[4]),
        .Q(DL_EX[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[5] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[5]),
        .Q(DL_EX[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[6] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[6]),
        .Q(DL_EX[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[7] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[7]),
        .Q(DL_EX[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[8] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[8]),
        .Q(DL_EX[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_EX_reg[9] 
       (.C(CP_EXTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_EXTERNAL[9]),
        .Q(DL_EX[9]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[0] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[0]),
        .Q(DL_IN[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[10] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[10]),
        .Q(DL_IN[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[11] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[11]),
        .Q(DL_IN[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[12] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[12]),
        .Q(DL_IN[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[13] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[13]),
        .Q(DL_IN[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[14] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[14]),
        .Q(DL_IN[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[15] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[15]),
        .Q(DL_IN[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[16] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[16]),
        .Q(DL_IN[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[17] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[17]),
        .Q(DL_IN[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[18] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[18]),
        .Q(DL_IN[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[19] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[19]),
        .Q(DL_IN[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[1] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[1]),
        .Q(DL_IN[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[20] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[20]),
        .Q(DL_IN[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[21] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[21]),
        .Q(DL_IN[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[22] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[22]),
        .Q(DL_IN[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[23] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[23]),
        .Q(DL_IN[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[24] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[24]),
        .Q(DL_IN[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[25] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[25]),
        .Q(DL_IN[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[26] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[26]),
        .Q(DL_IN[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[27] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[27]),
        .Q(DL_IN[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[28] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[28]),
        .Q(DL_IN[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[29] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[29]),
        .Q(DL_IN[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[2] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[2]),
        .Q(DL_IN[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[30] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[30]),
        .Q(DL_IN[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[31] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[31]),
        .Q(DL_IN[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[32] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[32]),
        .Q(DL_IN[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[33] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[33]),
        .Q(DL_IN[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[34] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[34]),
        .Q(DL_IN[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[35] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[35]),
        .Q(DL_IN[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[36] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[36]),
        .Q(DL_IN[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[37] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[37]),
        .Q(DL_IN[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[3] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[3]),
        .Q(DL_IN[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[4] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[4]),
        .Q(DL_IN[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[5] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[5]),
        .Q(DL_IN[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[6] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[6]),
        .Q(DL_IN[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[7] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[7]),
        .Q(DL_IN[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[8] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[8]),
        .Q(DL_IN[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_IN_reg[9] 
       (.C(CP_INTERNAL),
        .CE(1'b1),
        .CLR(MR),
        .D(PACKET_IN_INTERNAL[9]),
        .Q(DL_IN[9]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[0]_INST_0 
       (.I0(DL_IN[0]),
        .I1(DL_EX[0]),
        .I2(AEB),
        .O(PACKET_OUT[0]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[10]_INST_0 
       (.I0(DL_IN[10]),
        .I1(DL_EX[10]),
        .I2(AEB),
        .O(PACKET_OUT[10]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[11]_INST_0 
       (.I0(DL_IN[11]),
        .I1(DL_EX[11]),
        .I2(AEB),
        .O(PACKET_OUT[11]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[12]_INST_0 
       (.I0(DL_IN[12]),
        .I1(DL_EX[12]),
        .I2(AEB),
        .O(PACKET_OUT[12]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[13]_INST_0 
       (.I0(DL_IN[13]),
        .I1(DL_EX[13]),
        .I2(AEB),
        .O(PACKET_OUT[13]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[14]_INST_0 
       (.I0(DL_IN[14]),
        .I1(DL_EX[14]),
        .I2(AEB),
        .O(PACKET_OUT[14]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[15]_INST_0 
       (.I0(DL_IN[15]),
        .I1(DL_EX[15]),
        .I2(AEB),
        .O(PACKET_OUT[15]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[16]_INST_0 
       (.I0(DL_IN[16]),
        .I1(DL_EX[16]),
        .I2(AEB),
        .O(PACKET_OUT[16]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[17]_INST_0 
       (.I0(DL_IN[17]),
        .I1(DL_EX[17]),
        .I2(AEB),
        .O(PACKET_OUT[17]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[18]_INST_0 
       (.I0(DL_IN[18]),
        .I1(DL_EX[18]),
        .I2(AEB),
        .O(PACKET_OUT[18]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[19]_INST_0 
       (.I0(DL_IN[19]),
        .I1(DL_EX[19]),
        .I2(AEB),
        .O(PACKET_OUT[19]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[1]_INST_0 
       (.I0(DL_IN[1]),
        .I1(DL_EX[1]),
        .I2(AEB),
        .O(PACKET_OUT[1]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[20]_INST_0 
       (.I0(DL_IN[20]),
        .I1(DL_EX[20]),
        .I2(AEB),
        .O(PACKET_OUT[20]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[21]_INST_0 
       (.I0(DL_IN[21]),
        .I1(DL_EX[21]),
        .I2(AEB),
        .O(PACKET_OUT[21]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[22]_INST_0 
       (.I0(DL_IN[22]),
        .I1(DL_EX[22]),
        .I2(AEB),
        .O(PACKET_OUT[22]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[23]_INST_0 
       (.I0(DL_IN[23]),
        .I1(DL_EX[23]),
        .I2(AEB),
        .O(PACKET_OUT[23]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[24]_INST_0 
       (.I0(DL_IN[24]),
        .I1(DL_EX[24]),
        .I2(AEB),
        .O(PACKET_OUT[24]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[25]_INST_0 
       (.I0(DL_IN[25]),
        .I1(DL_EX[25]),
        .I2(AEB),
        .O(PACKET_OUT[25]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[26]_INST_0 
       (.I0(DL_IN[26]),
        .I1(DL_EX[26]),
        .I2(AEB),
        .O(PACKET_OUT[26]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[27]_INST_0 
       (.I0(DL_IN[27]),
        .I1(DL_EX[27]),
        .I2(AEB),
        .O(PACKET_OUT[27]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[28]_INST_0 
       (.I0(DL_IN[28]),
        .I1(DL_EX[28]),
        .I2(AEB),
        .O(PACKET_OUT[28]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[29]_INST_0 
       (.I0(DL_IN[29]),
        .I1(DL_EX[29]),
        .I2(AEB),
        .O(PACKET_OUT[29]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[2]_INST_0 
       (.I0(DL_IN[2]),
        .I1(DL_EX[2]),
        .I2(AEB),
        .O(PACKET_OUT[2]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[30]_INST_0 
       (.I0(DL_IN[30]),
        .I1(DL_EX[30]),
        .I2(AEB),
        .O(PACKET_OUT[30]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[31]_INST_0 
       (.I0(DL_IN[31]),
        .I1(DL_EX[31]),
        .I2(AEB),
        .O(PACKET_OUT[31]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[32]_INST_0 
       (.I0(DL_IN[32]),
        .I1(DL_EX[32]),
        .I2(AEB),
        .O(PACKET_OUT[32]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[33]_INST_0 
       (.I0(DL_IN[33]),
        .I1(DL_EX[33]),
        .I2(AEB),
        .O(PACKET_OUT[33]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[34]_INST_0 
       (.I0(DL_IN[34]),
        .I1(DL_EX[34]),
        .I2(AEB),
        .O(PACKET_OUT[34]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[35]_INST_0 
       (.I0(DL_IN[35]),
        .I1(DL_EX[35]),
        .I2(AEB),
        .O(PACKET_OUT[35]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[36]_INST_0 
       (.I0(DL_IN[36]),
        .I1(DL_EX[36]),
        .I2(AEB),
        .O(PACKET_OUT[36]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[37]_INST_0 
       (.I0(DL_IN[37]),
        .I1(DL_EX[37]),
        .I2(AEB),
        .O(PACKET_OUT[37]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[3]_INST_0 
       (.I0(DL_IN[3]),
        .I1(DL_EX[3]),
        .I2(AEB),
        .O(PACKET_OUT[3]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[4]_INST_0 
       (.I0(DL_IN[4]),
        .I1(DL_EX[4]),
        .I2(AEB),
        .O(PACKET_OUT[4]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[5]_INST_0 
       (.I0(DL_IN[5]),
        .I1(DL_EX[5]),
        .I2(AEB),
        .O(PACKET_OUT[5]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[6]_INST_0 
       (.I0(DL_IN[6]),
        .I1(DL_EX[6]),
        .I2(AEB),
        .O(PACKET_OUT[6]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[7]_INST_0 
       (.I0(DL_IN[7]),
        .I1(DL_EX[7]),
        .I2(AEB),
        .O(PACKET_OUT[7]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[8]_INST_0 
       (.I0(DL_IN[8]),
        .I1(DL_EX[8]),
        .I2(AEB),
        .O(PACKET_OUT[8]));
  LUT3 #(
    .INIT(8'hAC)) 
    \PACKET_OUT[9]_INST_0 
       (.I0(DL_IN[9]),
        .I1(DL_EX[9]),
        .I2(AEB),
        .O(PACKET_OUT[9]));
  (* DONT_TOUCH *) 
  CM cm
       (.AEB(AEB),
        .Ack_in(Ack_in),
        .Ack_out_a(Ack_out_EX),
        .Ack_out_b(Ack_out_IN),
        .CP_a(CP_EXTERNAL),
        .CP_b(CP_INTERNAL),
        .MR(MR),
        .Send_in_a(Send_in_EX),
        .Send_in_b(Send_in_IN),
        .Send_out(Send_out));
endmodule

(* dont_touch = "true" *) 
module OR_AM_MA
   (FIRE,
    VALID,
    MF,
    CP,
    MR,
    EN,
    WR_E,
    DEL,
    ADDR);
  input [19:0]FIRE;
  input [19:0]VALID;
  input MF;
  input CP;
  input MR;
  output [19:0]EN;
  output WR_E;
  output DEL;
  output [5:0]ADDR;

  wire [5:0]ADDR;
  wire \ADDR[0]_i_1_n_0 ;
  wire \ADDR[1]_i_1_n_0 ;
  wire \ADDR[2]_i_1_n_0 ;
  wire \ADDR[3]_i_1_n_0 ;
  wire \ADDR[4]_i_1_n_0 ;
  wire \ADDR[5]_i_1_n_0 ;
  wire CP;
  wire DEL;
  wire DEL_i_1_n_0;
  wire [19:0]EN;
  wire \EN[12]_INST_0_i_1_n_0 ;
  wire \EN[17]_INST_0_i_1_n_0 ;
  wire \EN[19]_INST_0_i_1_n_0 ;
  wire \EN[19]_INST_0_i_2_n_0 ;
  wire \EN[8]_INST_0_i_1_n_0 ;
  wire [19:0]FIRE;
  (* DONT_TOUCH *) wire FIRE_OR;
  wire FIRE_OR_inferred_i_2_n_0;
  wire FIRE_OR_inferred_i_3_n_0;
  wire FIRE_OR_inferred_i_4_n_0;
  wire MF;
  wire MR;
  (* DONT_TOUCH *) wire [5:0]R_ADDR;
  wire R_ADDR_inferred_i_10_n_0;
  wire R_ADDR_inferred_i_11_n_0;
  wire R_ADDR_inferred_i_12_n_0;
  wire R_ADDR_inferred_i_13_n_0;
  wire R_ADDR_inferred_i_14_n_0;
  wire R_ADDR_inferred_i_15_n_0;
  wire R_ADDR_inferred_i_16_n_0;
  wire R_ADDR_inferred_i_17_n_0;
  wire R_ADDR_inferred_i_18_n_0;
  wire R_ADDR_inferred_i_6_n_0;
  wire R_ADDR_inferred_i_7_n_0;
  wire R_ADDR_inferred_i_8_n_0;
  wire R_ADDR_inferred_i_9_n_0;
  wire [19:0]VALID;
  wire WR_E;
  wire WR_E0_out;
  (* DONT_TOUCH *) wire [5:0]W_ADDR;
  wire W_ADDR_inferred_i_10_n_0;
  wire W_ADDR_inferred_i_11_n_0;
  wire W_ADDR_inferred_i_12_n_0;
  wire W_ADDR_inferred_i_13_n_0;
  wire W_ADDR_inferred_i_14_n_0;
  wire W_ADDR_inferred_i_15_n_0;
  wire W_ADDR_inferred_i_6_n_0;
  wire W_ADDR_inferred_i_7_n_0;
  wire W_ADDR_inferred_i_8_n_0;
  wire W_ADDR_inferred_i_9_n_0;

  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[0]_i_1 
       (.I0(R_ADDR[0]),
        .I1(FIRE_OR),
        .I2(W_ADDR[0]),
        .O(\ADDR[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[1]_i_1 
       (.I0(R_ADDR[1]),
        .I1(FIRE_OR),
        .I2(W_ADDR[1]),
        .O(\ADDR[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[2]_i_1 
       (.I0(R_ADDR[2]),
        .I1(FIRE_OR),
        .I2(W_ADDR[2]),
        .O(\ADDR[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[3]_i_1 
       (.I0(R_ADDR[3]),
        .I1(FIRE_OR),
        .I2(W_ADDR[3]),
        .O(\ADDR[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[4]_i_1 
       (.I0(R_ADDR[4]),
        .I1(FIRE_OR),
        .I2(W_ADDR[4]),
        .O(\ADDR[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \ADDR[5]_i_1 
       (.I0(R_ADDR[5]),
        .I1(FIRE_OR),
        .I2(W_ADDR[5]),
        .O(\ADDR[5]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[0] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[0]_i_1_n_0 ),
        .Q(ADDR[0]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[1] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[1]_i_1_n_0 ),
        .Q(ADDR[1]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[2] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[2]_i_1_n_0 ),
        .Q(ADDR[2]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[3] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[3]_i_1_n_0 ),
        .Q(ADDR[3]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[4] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[4]_i_1_n_0 ),
        .Q(ADDR[4]));
  FDCE #(
    .INIT(1'b0)) 
    \ADDR_reg[5] 
       (.C(CP),
        .CE(MF),
        .CLR(MR),
        .D(\ADDR[5]_i_1_n_0 ),
        .Q(ADDR[5]));
  LUT2 #(
    .INIT(4'hB)) 
    DEL_i_1
       (.I0(FIRE_OR),
        .I1(MF),
        .O(DEL_i_1_n_0));
  FDPE #(
    .INIT(1'b1)) 
    DEL_reg
       (.C(CP),
        .CE(1'b1),
        .D(DEL_i_1_n_0),
        .PRE(MR),
        .Q(DEL));
  LUT3 #(
    .INIT(8'h02)) 
    \EN[0]_INST_0 
       (.I0(MF),
        .I1(FIRE_OR),
        .I2(VALID[0]),
        .O(EN[0]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \EN[10]_INST_0 
       (.I0(VALID[10]),
        .I1(VALID[8]),
        .I2(VALID[9]),
        .I3(\EN[12]_INST_0_i_1_n_0 ),
        .O(EN[10]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \EN[11]_INST_0 
       (.I0(VALID[8]),
        .I1(VALID[9]),
        .I2(VALID[10]),
        .I3(VALID[11]),
        .I4(\EN[12]_INST_0_i_1_n_0 ),
        .O(EN[11]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \EN[12]_INST_0 
       (.I0(VALID[11]),
        .I1(VALID[10]),
        .I2(VALID[9]),
        .I3(VALID[8]),
        .I4(\EN[12]_INST_0_i_1_n_0 ),
        .I5(VALID[12]),
        .O(EN[12]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \EN[12]_INST_0_i_1 
       (.I0(\EN[8]_INST_0_i_1_n_0 ),
        .I1(VALID[4]),
        .I2(VALID[5]),
        .I3(VALID[6]),
        .I4(VALID[7]),
        .O(\EN[12]_INST_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \EN[13]_INST_0 
       (.I0(VALID[13]),
        .I1(VALID[12]),
        .I2(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[13]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \EN[14]_INST_0 
       (.I0(VALID[14]),
        .I1(VALID[12]),
        .I2(VALID[13]),
        .I3(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[14]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \EN[15]_INST_0 
       (.I0(VALID[12]),
        .I1(VALID[13]),
        .I2(VALID[14]),
        .I3(VALID[15]),
        .I4(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[15]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \EN[16]_INST_0 
       (.I0(VALID[13]),
        .I1(VALID[12]),
        .I2(VALID[15]),
        .I3(VALID[14]),
        .I4(\EN[19]_INST_0_i_2_n_0 ),
        .I5(VALID[16]),
        .O(EN[16]));
  LUT6 #(
    .INIT(64'h0400000000000000)) 
    \EN[17]_INST_0 
       (.I0(VALID[17]),
        .I1(VALID[16]),
        .I2(\EN[17]_INST_0_i_1_n_0 ),
        .I3(VALID[15]),
        .I4(VALID[14]),
        .I5(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[17]));
  LUT2 #(
    .INIT(4'h7)) 
    \EN[17]_INST_0_i_1 
       (.I0(VALID[12]),
        .I1(VALID[13]),
        .O(\EN[17]_INST_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    \EN[18]_INST_0 
       (.I0(VALID[18]),
        .I1(VALID[16]),
        .I2(VALID[17]),
        .I3(\EN[19]_INST_0_i_1_n_0 ),
        .I4(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[18]));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \EN[19]_INST_0 
       (.I0(VALID[16]),
        .I1(VALID[17]),
        .I2(VALID[18]),
        .I3(VALID[19]),
        .I4(\EN[19]_INST_0_i_1_n_0 ),
        .I5(\EN[19]_INST_0_i_2_n_0 ),
        .O(EN[19]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \EN[19]_INST_0_i_1 
       (.I0(VALID[13]),
        .I1(VALID[12]),
        .I2(VALID[15]),
        .I3(VALID[14]),
        .O(\EN[19]_INST_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \EN[19]_INST_0_i_2 
       (.I0(\EN[12]_INST_0_i_1_n_0 ),
        .I1(VALID[8]),
        .I2(VALID[9]),
        .I3(VALID[10]),
        .I4(VALID[11]),
        .O(\EN[19]_INST_0_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0040)) 
    \EN[1]_INST_0 
       (.I0(FIRE_OR),
        .I1(MF),
        .I2(VALID[0]),
        .I3(VALID[1]),
        .O(EN[1]));
  LUT5 #(
    .INIT(32'h00000080)) 
    \EN[2]_INST_0 
       (.I0(VALID[1]),
        .I1(VALID[0]),
        .I2(MF),
        .I3(FIRE_OR),
        .I4(VALID[2]),
        .O(EN[2]));
  LUT6 #(
    .INIT(64'h0000000040000000)) 
    \EN[3]_INST_0 
       (.I0(VALID[3]),
        .I1(VALID[2]),
        .I2(VALID[1]),
        .I3(VALID[0]),
        .I4(MF),
        .I5(FIRE_OR),
        .O(EN[3]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \EN[4]_INST_0 
       (.I0(\EN[8]_INST_0_i_1_n_0 ),
        .I1(VALID[4]),
        .O(EN[4]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \EN[5]_INST_0 
       (.I0(VALID[5]),
        .I1(VALID[4]),
        .I2(\EN[8]_INST_0_i_1_n_0 ),
        .O(EN[5]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \EN[6]_INST_0 
       (.I0(VALID[6]),
        .I1(VALID[4]),
        .I2(VALID[5]),
        .I3(\EN[8]_INST_0_i_1_n_0 ),
        .O(EN[6]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \EN[7]_INST_0 
       (.I0(VALID[4]),
        .I1(VALID[5]),
        .I2(VALID[6]),
        .I3(VALID[7]),
        .I4(\EN[8]_INST_0_i_1_n_0 ),
        .O(EN[7]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \EN[8]_INST_0 
       (.I0(VALID[7]),
        .I1(VALID[6]),
        .I2(VALID[5]),
        .I3(VALID[4]),
        .I4(\EN[8]_INST_0_i_1_n_0 ),
        .I5(VALID[8]),
        .O(EN[8]));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \EN[8]_INST_0_i_1 
       (.I0(VALID[1]),
        .I1(VALID[0]),
        .I2(MF),
        .I3(FIRE_OR),
        .I4(VALID[3]),
        .I5(VALID[2]),
        .O(\EN[8]_INST_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \EN[9]_INST_0 
       (.I0(VALID[9]),
        .I1(VALID[8]),
        .I2(\EN[12]_INST_0_i_1_n_0 ),
        .O(EN[9]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    FIRE_OR_inferred_i_1
       (.I0(FIRE[17]),
        .I1(FIRE[16]),
        .I2(FIRE[19]),
        .I3(FIRE[18]),
        .I4(FIRE_OR_inferred_i_2_n_0),
        .I5(FIRE_OR_inferred_i_3_n_0),
        .O(FIRE_OR));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    FIRE_OR_inferred_i_2
       (.I0(FIRE[10]),
        .I1(FIRE[11]),
        .I2(FIRE[8]),
        .I3(FIRE[9]),
        .I4(FIRE_OR_inferred_i_4_n_0),
        .O(FIRE_OR_inferred_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    FIRE_OR_inferred_i_3
       (.I0(FIRE[1]),
        .I1(FIRE[5]),
        .I2(FIRE[3]),
        .I3(FIRE[7]),
        .I4(R_ADDR_inferred_i_6_n_0),
        .O(FIRE_OR_inferred_i_3_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    FIRE_OR_inferred_i_4
       (.I0(FIRE[13]),
        .I1(FIRE[12]),
        .I2(FIRE[15]),
        .I3(FIRE[14]),
        .O(FIRE_OR_inferred_i_4_n_0));
  LUT6 #(
    .INIT(64'h0000000055555554)) 
    R_ADDR_inferred_i_1
       (.I0(FIRE_OR_inferred_i_2_n_0),
        .I1(FIRE[17]),
        .I2(FIRE[16]),
        .I3(FIRE[19]),
        .I4(FIRE[18]),
        .I5(FIRE_OR_inferred_i_3_n_0),
        .O(R_ADDR[4]));
  LUT6 #(
    .INIT(64'h000A000A000A000E)) 
    R_ADDR_inferred_i_10
       (.I0(FIRE[5]),
        .I1(R_ADDR_inferred_i_14_n_0),
        .I2(R_ADDR_inferred_i_15_n_0),
        .I3(FIRE[4]),
        .I4(FIRE[6]),
        .I5(FIRE[8]),
        .O(R_ADDR_inferred_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    R_ADDR_inferred_i_11
       (.I0(FIRE[9]),
        .I1(FIRE[8]),
        .I2(FIRE[11]),
        .I3(FIRE[10]),
        .O(R_ADDR_inferred_i_11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'hE)) 
    R_ADDR_inferred_i_12
       (.I0(FIRE[1]),
        .I1(FIRE[5]),
        .O(R_ADDR_inferred_i_12_n_0));
  LUT6 #(
    .INIT(64'h00000000EEEEEEFE)) 
    R_ADDR_inferred_i_13
       (.I0(FIRE[10]),
        .I1(FIRE[11]),
        .I2(R_ADDR_inferred_i_16_n_0),
        .I3(FIRE[13]),
        .I4(FIRE[12]),
        .I5(R_ADDR_inferred_i_17_n_0),
        .O(R_ADDR_inferred_i_13_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF55551110)) 
    R_ADDR_inferred_i_14
       (.I0(FIRE[10]),
        .I1(FIRE[12]),
        .I2(R_ADDR_inferred_i_18_n_0),
        .I3(FIRE[13]),
        .I4(FIRE[11]),
        .I5(FIRE[9]),
        .O(R_ADDR_inferred_i_14_n_0));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'hE)) 
    R_ADDR_inferred_i_15
       (.I0(FIRE[0]),
        .I1(FIRE[2]),
        .O(R_ADDR_inferred_i_15_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF1110)) 
    R_ADDR_inferred_i_16
       (.I0(FIRE[16]),
        .I1(FIRE[17]),
        .I2(FIRE[18]),
        .I3(FIRE[19]),
        .I4(FIRE[15]),
        .I5(FIRE[14]),
        .O(R_ADDR_inferred_i_16_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    R_ADDR_inferred_i_17
       (.I0(FIRE[8]),
        .I1(FIRE[9]),
        .O(R_ADDR_inferred_i_17_n_0));
  LUT6 #(
    .INIT(64'h00000000AAAAEEFE)) 
    R_ADDR_inferred_i_18
       (.I0(FIRE[15]),
        .I1(FIRE[17]),
        .I2(FIRE[19]),
        .I3(FIRE[18]),
        .I4(FIRE[16]),
        .I5(FIRE[14]),
        .O(R_ADDR_inferred_i_18_n_0));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    R_ADDR_inferred_i_2
       (.I0(FIRE_OR_inferred_i_2_n_0),
        .I1(R_ADDR_inferred_i_6_n_0),
        .I2(FIRE[7]),
        .I3(FIRE[3]),
        .I4(FIRE[5]),
        .I5(FIRE[1]),
        .O(R_ADDR[3]));
  LUT5 #(
    .INIT(32'h00010000)) 
    R_ADDR_inferred_i_3
       (.I0(FIRE[0]),
        .I1(FIRE[2]),
        .I2(FIRE[1]),
        .I3(FIRE[3]),
        .I4(R_ADDR_inferred_i_7_n_0),
        .O(R_ADDR[2]));
  LUT5 #(
    .INIT(32'hFFFF000E)) 
    R_ADDR_inferred_i_4
       (.I0(FIRE[2]),
        .I1(FIRE[3]),
        .I2(FIRE[0]),
        .I3(FIRE[1]),
        .I4(R_ADDR_inferred_i_8_n_0),
        .O(R_ADDR[1]));
  LUT4 #(
    .INIT(16'hFFF2)) 
    R_ADDR_inferred_i_5
       (.I0(FIRE[1]),
        .I1(FIRE[0]),
        .I2(R_ADDR_inferred_i_9_n_0),
        .I3(R_ADDR_inferred_i_10_n_0),
        .O(R_ADDR[0]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    R_ADDR_inferred_i_6
       (.I0(FIRE[6]),
        .I1(FIRE[4]),
        .I2(FIRE[2]),
        .I3(FIRE[0]),
        .O(R_ADDR_inferred_i_6_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF4)) 
    R_ADDR_inferred_i_7
       (.I0(R_ADDR_inferred_i_11_n_0),
        .I1(FIRE_OR_inferred_i_4_n_0),
        .I2(FIRE[4]),
        .I3(FIRE[6]),
        .I4(FIRE[5]),
        .I5(FIRE[7]),
        .O(R_ADDR_inferred_i_7_n_0));
  LUT6 #(
    .INIT(64'h0101010101010100)) 
    R_ADDR_inferred_i_8
       (.I0(R_ADDR_inferred_i_12_n_0),
        .I1(FIRE[0]),
        .I2(FIRE[4]),
        .I3(FIRE[6]),
        .I4(FIRE[7]),
        .I5(R_ADDR_inferred_i_13_n_0),
        .O(R_ADDR_inferred_i_8_n_0));
  LUT6 #(
    .INIT(64'h000000AB000000AA)) 
    R_ADDR_inferred_i_9
       (.I0(FIRE[3]),
        .I1(FIRE[6]),
        .I2(FIRE[4]),
        .I3(FIRE[2]),
        .I4(FIRE[0]),
        .I5(FIRE[7]),
        .O(R_ADDR_inferred_i_9_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    WR_E_i_1
       (.I0(MF),
        .I1(FIRE_OR),
        .O(WR_E0_out));
  FDCE #(
    .INIT(1'b0)) 
    WR_E_reg
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(WR_E0_out),
        .Q(WR_E));
  LUT6 #(
    .INIT(64'h000000007FFF0000)) 
    W_ADDR_inferred_i_1
       (.I0(VALID[16]),
        .I1(VALID[17]),
        .I2(VALID[18]),
        .I3(VALID[19]),
        .I4(\EN[19]_INST_0_i_2_n_0 ),
        .I5(\EN[19]_INST_0_i_1_n_0 ),
        .O(W_ADDR[4]));
  LUT6 #(
    .INIT(64'hF777555500000000)) 
    W_ADDR_inferred_i_10
       (.I0(VALID[5]),
        .I1(VALID[7]),
        .I2(W_ADDR_inferred_i_13_n_0),
        .I3(VALID[8]),
        .I4(VALID[6]),
        .I5(VALID[4]),
        .O(W_ADDR_inferred_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h7)) 
    W_ADDR_inferred_i_11
       (.I0(VALID[8]),
        .I1(VALID[9]),
        .O(W_ADDR_inferred_i_11_n_0));
  LUT6 #(
    .INIT(64'h0000000077777FFF)) 
    W_ADDR_inferred_i_12
       (.I0(VALID[14]),
        .I1(VALID[15]),
        .I2(VALID[19]),
        .I3(VALID[18]),
        .I4(W_ADDR_inferred_i_14_n_0),
        .I5(\EN[17]_INST_0_i_1_n_0 ),
        .O(W_ADDR_inferred_i_12_n_0));
  LUT6 #(
    .INIT(64'h8088AAAAFFFFFFFF)) 
    W_ADDR_inferred_i_13
       (.I0(VALID[10]),
        .I1(VALID[12]),
        .I2(W_ADDR_inferred_i_15_n_0),
        .I3(VALID[13]),
        .I4(VALID[11]),
        .I5(VALID[9]),
        .O(W_ADDR_inferred_i_13_n_0));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h7)) 
    W_ADDR_inferred_i_14
       (.I0(VALID[16]),
        .I1(VALID[17]),
        .O(W_ADDR_inferred_i_14_n_0));
  LUT6 #(
    .INIT(64'h77F7555500000000)) 
    W_ADDR_inferred_i_15
       (.I0(VALID[15]),
        .I1(VALID[17]),
        .I2(VALID[18]),
        .I3(VALID[19]),
        .I4(VALID[16]),
        .I5(VALID[14]),
        .O(W_ADDR_inferred_i_15_n_0));
  LUT6 #(
    .INIT(64'hFFFF00007FFF0000)) 
    W_ADDR_inferred_i_2
       (.I0(VALID[11]),
        .I1(VALID[10]),
        .I2(VALID[9]),
        .I3(VALID[8]),
        .I4(\EN[12]_INST_0_i_1_n_0 ),
        .I5(\EN[19]_INST_0_i_1_n_0 ),
        .O(W_ADDR[3]));
  LUT6 #(
    .INIT(64'hF700F700FF00F700)) 
    W_ADDR_inferred_i_3
       (.I0(VALID[7]),
        .I1(VALID[6]),
        .I2(W_ADDR_inferred_i_6_n_0),
        .I3(\EN[8]_INST_0_i_1_n_0 ),
        .I4(\EN[19]_INST_0_i_1_n_0 ),
        .I5(W_ADDR_inferred_i_7_n_0),
        .O(W_ADDR[2]));
  LUT6 #(
    .INIT(64'hF700770077007700)) 
    W_ADDR_inferred_i_4
       (.I0(VALID[2]),
        .I1(VALID[3]),
        .I2(W_ADDR_inferred_i_8_n_0),
        .I3(W_ADDR_inferred_i_9_n_0),
        .I4(VALID[5]),
        .I5(VALID[4]),
        .O(W_ADDR[1]));
  LUT6 #(
    .INIT(64'h00DF000000550000)) 
    W_ADDR_inferred_i_5
       (.I0(VALID[1]),
        .I1(W_ADDR_inferred_i_10_n_0),
        .I2(VALID[3]),
        .I3(DEL_i_1_n_0),
        .I4(VALID[0]),
        .I5(VALID[2]),
        .O(W_ADDR[0]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h7)) 
    W_ADDR_inferred_i_6
       (.I0(VALID[4]),
        .I1(VALID[5]),
        .O(W_ADDR_inferred_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    W_ADDR_inferred_i_7
       (.I0(VALID[11]),
        .I1(VALID[10]),
        .I2(VALID[9]),
        .I3(VALID[8]),
        .O(W_ADDR_inferred_i_7_n_0));
  LUT6 #(
    .INIT(64'h4555FFFFFFFFFFFF)) 
    W_ADDR_inferred_i_8
       (.I0(W_ADDR_inferred_i_11_n_0),
        .I1(W_ADDR_inferred_i_12_n_0),
        .I2(VALID[11]),
        .I3(VALID[10]),
        .I4(VALID[7]),
        .I5(VALID[6]),
        .O(W_ADDR_inferred_i_8_n_0));
  LUT4 #(
    .INIT(16'h4000)) 
    W_ADDR_inferred_i_9
       (.I0(FIRE_OR),
        .I1(MF),
        .I2(VALID[0]),
        .I3(VALID[1]),
        .O(W_ADDR_inferred_i_9_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(W_ADDR[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(R_ADDR[5]));
endmodule

(* CHECK_LICENSE_TYPE = "PS,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module PS
   (clka,
    addra,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [16:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [16:0]douta;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [16:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [16:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.751199 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "PS.mem" *) 
  (* C_INIT_FILE_NAME = "PS.mif" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "1" *) 
  (* C_MEM_TYPE = "3" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "17" *) 
  (* C_READ_WIDTH_B = "17" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "17" *) 
  (* C_WRITE_WIDTH_B = "17" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  PS_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .clka(clka),
        .clkb(1'b0),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(douta),
        .doutb(NLW_U0_doutb_UNCONNECTED[16:0]),
        .eccpipece(1'b0),
        .ena(1'b0),
        .enb(1'b0),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(1'b1),
        .regceb(1'b1),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[16:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(1'b0),
        .web(1'b0));
endmodule

(* ABSORB = "6'b111111" *) (* ADD = "6'b000000" *) (* ADDC = "6'b000001" *) 
(* ADDGEN = "6'b101010" *) (* AND = "6'b000100" *) (* BC = "6'b010010" *) 
(* BNC = "6'b010011" *) (* BNZ = "6'b010001" *) (* BNZL = "6'b011000" *) 
(* BZ = "6'b010000" *) (* BZL = "6'b011000" *) (* CHGCOL = "6'b101001" *) 
(* CHGDEST = "6'b110000" *) (* DECGEN = "6'b101100" *) (* LDM = "6'b100000" *) 
(* MUL = "6'b000111" *) (* OR = "6'b000101" *) (* ROL = "6'b001010" *) 
(* ROR = "6'b001011" *) (* SHL = "6'b001000" *) (* SHR = "6'b001001" *) 
(* STM = "6'b100001" *) (* SUB = "6'b000010" *) (* SUBC = "6'b000011" *) 
(* XOR = "6'b000110" *) (* dont_touch = "true" *) 
module PS_Stage
   (Send_in,
    Ack_in,
    MR,
    PACKET_IN,
    PACKET_OUT,
    DEL,
    Send_out,
    Ack_out);
  input Send_in;
  input Ack_in;
  input MR;
  input [51:0]PACKET_IN;
  output [61:0]PACKET_OUT;
  output DEL;
  output Send_out;
  output Ack_out;

  wire Ack_in;
  wire Ack_out;
  (* DONT_TOUCH *) wire CP;
  wire DEL;
  (* DONT_TOUCH *) wire [51:0]DL;
  wire MR;
  wire [51:0]\^PACKET_IN ;
  (* DONT_TOUCH *) wire [16:0]PSData;
  wire Send_in;
  wire Send_out;
  (* DONT_TOUCH *) wire [6:0]dest;

  assign PACKET_OUT[61:51] = DL[51:41];
  assign PACKET_OUT[50:34] = PSData;
  assign PACKET_OUT[33:0] = DL[33:0];
  assign \^PACKET_IN [51:41] = PACKET_IN[51:41];
  assign \^PACKET_IN [33:0] = PACKET_IN[33:0];
  assign dest = PACKET_IN[40:34];
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    DEL_INST_0
       (.I0(PSData[5]),
        .I1(PSData[4]),
        .I2(PSData[1]),
        .I3(PSData[0]),
        .I4(PSData[3]),
        .I5(PSData[2]),
        .O(DEL));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[0] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [0]),
        .Q(DL[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[10] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [10]),
        .Q(DL[10]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[11] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [11]),
        .Q(DL[11]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[12] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [12]),
        .Q(DL[12]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[13] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [13]),
        .Q(DL[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[14] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [14]),
        .Q(DL[14]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[15] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [15]),
        .Q(DL[15]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[16] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [16]),
        .Q(DL[16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[17] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [17]),
        .Q(DL[17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[18] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [18]),
        .Q(DL[18]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[19] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [19]),
        .Q(DL[19]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[1] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [1]),
        .Q(DL[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[20] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [20]),
        .Q(DL[20]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[21] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [21]),
        .Q(DL[21]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[22] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [22]),
        .Q(DL[22]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[23] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [23]),
        .Q(DL[23]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[24] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [24]),
        .Q(DL[24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[25] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [25]),
        .Q(DL[25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[26] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [26]),
        .Q(DL[26]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[27] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [27]),
        .Q(DL[27]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[28] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [28]),
        .Q(DL[28]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[29] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [29]),
        .Q(DL[29]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[2] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [2]),
        .Q(DL[2]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[30] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [30]),
        .Q(DL[30]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[31] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [31]),
        .Q(DL[31]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[32] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [32]),
        .Q(DL[32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[33] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [33]),
        .Q(DL[33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[34] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[0]),
        .Q(DL[34]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[35] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[1]),
        .Q(DL[35]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[36] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[2]),
        .Q(DL[36]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[37] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[3]),
        .Q(DL[37]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[38] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[4]),
        .Q(DL[38]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[39] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[5]),
        .Q(DL[39]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[3] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [3]),
        .Q(DL[3]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[40] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(dest[6]),
        .Q(DL[40]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[41] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [41]),
        .Q(DL[41]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[42] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [42]),
        .Q(DL[42]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[43] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [43]),
        .Q(DL[43]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[44] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [44]),
        .Q(DL[44]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[45] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [45]),
        .Q(DL[45]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[46] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [46]),
        .Q(DL[46]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[47] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [47]),
        .Q(DL[47]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[48] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [48]),
        .Q(DL[48]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[49] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [49]),
        .Q(DL[49]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[4] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [4]),
        .Q(DL[4]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[50] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [50]),
        .Q(DL[50]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[51] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [51]),
        .Q(DL[51]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[5] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [5]),
        .Q(DL[5]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[6] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [6]),
        .Q(DL[6]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[7] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [7]),
        .Q(DL[7]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[8] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [8]),
        .Q(DL[8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \DL_reg[9] 
       (.C(CP),
        .CE(1'b1),
        .CLR(MR),
        .D(\^PACKET_IN [9]),
        .Q(DL[9]));
  (* DONT_TOUCH *) 
  C__2 c
       (.Ack_in(Ack_in),
        .Ack_out(Ack_out),
        .CP(CP),
        .MR(MR),
        .Send_in(Send_in),
        .Send_out(Send_out));
  (* IMPORTED_FROM = "c:/Users/OkuhiraShunri/Documents/verilog/DDP/vivado/sim2/DDP_sim2.gen/sources_1/ip/PS/PS.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
  PS ps
       (.addra(dest[4:0]),
        .clka(CP),
        .douta(PSData));
endmodule

(* CHECK_LICENSE_TYPE = "SubPS,blk_mem_gen_v8_4_8,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "blk_mem_gen_v8_4_8,Vivado 2024.1" *) 
module SubPS
   (clka,
    addra,
    douta);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_ADDRESS_MODE BYTE_ADDRESS, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [4:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [0:0]douta;

  wire [4:0]addra;
  wire clka;
  wire [0:0]douta;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire [0:0]NLW_U0_doutb_UNCONNECTED;
  wire [4:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;

  (* C_ADDRA_WIDTH = "5" *) 
  (* C_ADDRB_WIDTH = "5" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     1.903721 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "SubPS.mem" *) 
  (* C_INIT_FILE_NAME = "SubPS.mif" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "1" *) 
  (* C_MEM_TYPE = "3" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "20" *) 
  (* C_READ_DEPTH_B = "20" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "1" *) 
  (* C_READ_WIDTH_B = "1" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "20" *) 
  (* C_WRITE_DEPTH_B = "20" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "1" *) 
  (* C_WRITE_WIDTH_B = "1" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  SubPS_blk_mem_gen_v8_4_8 U0
       (.addra(addra),
        .addrb({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .clka(clka),
        .clkb(1'b0),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(1'b0),
        .dina(1'b0),
        .dinb(1'b0),
        .douta(douta),
        .doutb(NLW_U0_doutb_UNCONNECTED[0]),
        .eccpipece(1'b0),
        .ena(1'b0),
        .enb(1'b0),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[4:0]),
        .regcea(1'b1),
        .regceb(1'b1),
        .rsta(1'b0),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(1'b0),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(1'b0),
        .s_axi_injectsbiterr(1'b0),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[4:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(1'b0),
        .s_axi_wvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(1'b0),
        .sleep(1'b0),
        .wea(1'b0),
        .web(1'b0));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2024.1"
`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
RSqbsRZSIb+QlYJMfFv1T7uHQ7PiCEXQkl687MHGm2LgPB15GIYcPmqKUSXgtkLsIFes91PTAyyB
9H9cyY4ZUxedcRg/9ZOB5pm3zPqAbcvGPmg1ivMhr/MlS19t5lYKM2tQo+0Yd+arJXlVZu2BMnvn
+I3G9t9tJuWUIWKjI+I=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
VRSQ05ZaB6bIhFIQ823mTvlJaG9+5iW5C3+KxGjq0sq9ziCshKOLpOGPDMmOWDqA4uBaxC5IKISr
w8+A8mqbYjXo5m1g8sGjNaETS0HKJsK+l5Y++tN4IEUs+DwxgrPR/+LWtChuOzVkfC7BG3LVUEMj
zM3GAyGcXGJ3sdBItZAfsevyiy7kr4Fw+nk2hWytGteu1NZk3VzPE7KQHLkOlHBPXf6P0j8LpKcr
2oNDgQ/WaEmg6OOvFeJuaWDaee8Sn6wKP/caMyoGdSeczsPtRrJeoSRlbNHlxhCv7zg+Cn2AgwrR
PTqGsMrkhv9U0sq+waS0CmwChsk4WB7RspGYUg==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
tNziOjCznlvIl4dadmB9r23Duf+HQHWOuHmupEU3PJxrazHVtZdNKspG9sRXhF9mjbpnSiKYCdFK
Jr9W/dxUid36faFIPKQazVTuOiE0hkzVQAGpYxXjT/ITB/9EFBvgvP5L3EAhHv32x6MA1vkFSI7x
HrZ09YNFEF6T7DPTZE4=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
QCYfxgkUHlX1cre1q9aS3sVDIOX36YBK4ZwJXAVUwA6f1OQ77XibjpWJHt5FK9F0PcYp/j21pqzO
BRdkDcFLVAjxER4J5t5iMVhoeMk+3fpiKfYrm4WFl1ygsJsfFJP0jqO1OkjC8iFBtm3n6b7CTl1o
cjBbcBp8UgW6E8rf5inXA0dRqybnyxKJSnMFYLinvpVU6QEc4OKO7mi/i/s9p/efiP+CdQf0yDRU
Fw7o7x0D7tjBv943g5L+4wGZ2JYU+ISqn4Ajxy/bWTTJDe6T/15evhngS61MC8Xjamzc4YLZBP8o
ShfSLoeZeO+Hk5n3xzJRghM0DQ6Sj7NqXFY68w==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Uy8FDDy3dZQGAnMQV0HBesEs+/oZdaq35Kj1PGhy9J/+EBZm0nhhQgYtku8tWABW2jKAC1GtNTvo
uReQyr1hteMxTbD5OIuqv86eb1hXZVENlZ7ichG8auUjkeHAkaSYNbHOuDLIhSqHEL67XbcZ9zPG
1JOY3+VONSww0KYPcQbGSo/2DaC5C0Y+mZODRfJ4+b0WXjce6UaJetilBc3VtqqmodIM2d3HDawF
R0xVJfHj86rXmUkY+SNUw60zsV6raCY6G3k/rXpei1d6zn8tCThkKG5fwiWY8zA7kRdTFIlVKP9h
fb6kfzRBRT/BgVQ8d4RgEcEVV8m3u/Mf4KIlTw==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2023_11", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Pk1GeRlkUK9lt6DVXYVdtOABlzDEWQDcBsP/p+Wo5HaglDLG5b8gk08xTP3IcJ1RKcfuARPMGO2s
/VqFbnVADV90T1rhjIuWMcBnzYQK/ALUvwv11Uju9Gn0fvPIz52l3QBnpjHI1nlsFB7WeqkzVfHZ
tg9gO9bPHjHLjVd9BzH6McrEWY5RkZ0UBy0Fmh/SownJX1b0YGE7LdwKydEMEpyvb28bwTOwfEv/
4RtsfYtEvTjo6e1ZBm66D9IQmKUu32wzTfn5bFZHdyjZg6+HcTzvHMtQX2+AggXfP6FsO2/83qkb
0bfj226fnLhr32dJxtsaJS5OR63GYtzDJ05ITA==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
LCfWqKmUoUSVOTKNAl5p8n1hfz7SMU2kDOUMBjsDncgSFqiu2zUy1I6GSDrVnF/2umJG5/mWcpvi
rQaFJOlrJ8DNctSuavdlopRAwTMsVi6dAlNGrAawSiDIxtI3tN3MDVdMiH5H+pJMqMt59yXneyCf
2RRSRz2sUQK/aj0lXlqKjVJzVbk8HaBQ8akBJF4iWSMK4foIzJ6iO1EupYovuW6uEiO7jQRWezlW
pbbDenOHHWbfinuX5cbkjpTKHGsEKct65q+ZXJp60m3sconSK3Y2eLQxusuJ1FHDJ4GGKO8mEzCv
3cfGdXX3pVL81OfGO/JD1aMs9H98CO5ssbHqlw==

`pragma protect key_keyowner="Atrenta", key_keyname="ATR-SG-RSA-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=384)
`pragma protect key_block
A4S1e3DHcTeWzaDVuWDRb3Yf1BjiEsR1RtAeL0BJ7J/oPWMNj96MeGsUiHtZoiYqteTZxqax2cyZ
PV0cMLoBK4Ya8CyM+BTnkFA2ablsGt5Es4TgG/nFS9VEhmeKxu8boAsqW5697aiqOATJf/LucQh5
GOnPXHAuPrDj0A/fu8N2QduqGyysWUSc1KsoJ0/0noJYvLJ2yOhFi4uIUYQfG5LOuOrca5P43pqA
iwUKW/RrFXal2acJdFeXIKffZpKanSV97urdzKyBvf9EPV/M8g9uPFJJ1z6aS+FbknhVPs0pt6eD
+J/qib4gVp/HGnRo4YlxauUMv6Yv9wxiaObY6ttDfYf5p3uzWZMlf3i7YOzZwcd4aS/6+vkD28LG
L9piBIpLx2dvQy74RdvCVdvaP1LC6RMju9RfuXJhuX4ZAmDxRi0zQyRda838ikzwYeOCSKLIvRPb
nuJ8Zx2ot8EFqSeGaaRFaEMU6Zf5SptCUuVMHvSkinBewcwrLB5uiJTJ

`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="CDS_RSA_KEY_VER_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
gj+uMxV+tK4Di7pgSOE82FOBeWmUB1A7OKFOSMUW3qrmQ4/YhryfHMlWPxfAq8avQL7tnBTnRFEg
czbErdIcNzYjrM7Qq00QC/mTqmeQX4/apbqGvN+rwK4RR5oj22wfTib/UQNEQX6fbpi6PtmAeUR9
eShsfq+YWcf7z2Zw4Q+o4+E6m4/3CzU68vglNpzNsJ8S9/8XpdIrvAA/WRAX6OEOC4wlNIKDZsq/
+zMbFgSzN1rP844I/CDmxYM0NIzBWWhYBkPfJyQyigmUoXb84lDip0/Dmnq4EHvu7D/tZNnDl5st
JpftRfEpT6S8e/5MBeKUuhbfg6etHo/oFZvPKQ==

`pragma protect key_keyowner="Synplicity", key_keyname="SYNP15_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
aWTy3xv6SqKsldtLS2gY4KrTS8U+KtFNRHS314f6EYZy1MHE9t7oICJ8eNB8up8A+odoE23N3fJb
1alhaadeRWU2GjlIiK1LjZ5PQw+jb1u1GWtRiY+TcTlD75XUlqwykVBrCDfm565DmgZjZle9T3/t
WEfLo+m/8GfBe8trVnoftsk/XI00BMFXRzw8doPGDhNECS1NUrLebryb9iO5Hf4A/40dtslTARsR
nicN0KoIIyiQ+QzliqyXU/8VjS45inON8R0Kv9Qx46EXUp7bds5uQ7QycRhpLG0IPnMIweudU67w
eQmpHJzvZKBCZks/R0OafZx44H6Jib2+QazBCw==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-PREC-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
UGdPiChIPj1lSozqzCQx17Bi+8FWSuMUMzXUkDLH5zcP1t8tZLzh4CU4WAR8lmJxn8gH763fLp5c
RYU6zA0yxHzl2ksc5YRU1XEfQQT9ha8fQnz+18wVKcsa5UIOfMbGDwnS9yfX59ntG8CB0uF8bJKE
y1CS6U/1Stfs1w2mF94iDxI2n2GJlb1UPtWpmxMBI88hY0GktTPXP2Y7JKl8zRl/Lq0wIF8pHwXk
B4nOgKm6hfzPj0xZ6E/TuER/JE3fy8RSm24IlL/CUgpReEslEOYjQ4EKKZRG9/fxg26utQWW9p+G
fWVU53qrFGzBhKQ96Paj1ROkv6hDHyUb6n7uSw==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 97920)
`pragma protect data_block
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
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
